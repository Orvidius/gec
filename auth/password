#!/usr/bin/perl
use strict;

##########################################################################

use CGI;

use lib "../perl";
use AUTH qw(%sessionDATA $sessionID getCookieSession setCookieSession getUserID verifyPassword setPassword);
use ATOMS qw(btrim);
use HTML qw(print_html red_print);

##########################################################################

my $q = new CGI;

my $oldpass = btrim($q->param('oldpass'));
my $pass1 = $q->param('pass');
my $pass2 = $q->param('pass2');

my $userID = getCookieSession();

if (!$userID) {
	
	print "Location: https://edastro.com/\n\n";
	exit;

} elsif (!$oldpass && !$pass1 && !$pass2) {

	do_form();

} elsif (!$oldpass || !$pass1 || !$pass2) {

	do_form("Missing information");

} elsif ($oldpass && !verifyPassword($userID,$oldpass)) {

	do_form("Current password incorrect");

} elsif (length($pass1)<8 || length($pass1)>255) {
        
        do_form("Password must be between 8 and 255 characters in length.");

} elsif ($userID && $oldpass && verifyPassword($userID,$oldpass) && $pass1 && $pass2) {

	if ($pass1 ne $pass2) {
		do_form("Passwords do not match");
	} else {
		# Are we OK? I think so.
		
		setPassword($userID,$pass1);

		print $q->header;
		print_html("/www/edastro.com/header.html");
		print_html("/www/edastro.com/auth/password-changed.html");
		print_html("/www/edastro.com/footer.html");
	}

} else {
	do_form("Error updating password");
}

exit;



##########################################################################

sub do_form {
	my $error = shift;

	print $q->header;
	#print_html("header.html");

	my $html = print_html("password-update.html",'',1);
	if ($error) {
		$html =~ s/<!\@ERROR\@!>/$error<br\/>/gs;
	}
	print $html;

	#print_html("footer.html");
}

##########################################################################


