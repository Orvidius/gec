#!/usr/bin/perl
use strict;

##########################################################################

#use CGI::Carp qw(fatalsToBrowser);

use utf8;
#use utf8::all;
use feature qw( unicode_strings );

use HTML::Entities;
use Encode;
use CGI;
use JSON;
use LWP::Simple;
use LWP::UserAgent;
use HTTP::Headers;
use Text::Markdown 'markdown';
use POSIX qw(floor strftime);
use Tie::IxHash;
use WebService::Discord::Webhook;
use Gravatar::URL;
use MIME::Base64;
use File::Copy;
use Data::Dumper;
#use Text::Unidecode;

use lib "perl";
use ATOMS qw(make_csv parse_csv btrim epoch2date date2epoch);
use DB qw(rows_mysql db_mysql $print_queries show_queries);
use EMAIL qw(sendMultipart);
use AUTH qw(info $sessionUserID %sessionDATA $sessionID getCookieSession setCookieSession getUserID 
		getSessions getActiveSessions accessPriv checkAdmin isAdmin activeUser getUserData );
use HTML qw(print_html red_print);

#print "Content-Type: text/plain\n\n";
#show_queries(1);

##########################################################################

my $debug		= 0;# 1; $print_queries=1;
my $BETA		= 0;
my $BETA_closed 	= 0;
my $DEV_skip_discord	= 1;

my $admin_title		= 'staff'; # people
my $admin_titles	= 'staff'; # curators
my $admin_scores	= 'staff'; # curation
my $admin_people	= 'staff members'; # curation team

my $admin_TITLE		= 'Staff'; # Curator
my $admin_TITLES	= 'Staff'; # Curators
my $admin_SCORES	= 'Staff'; # Curation
my $admin_PEOPLE	= 'Staff members'; # Curation team

my $cache_time		= 3600;

my $rate_limiting	= 1;
my $useSimpleMDE	= 0; # A markdown editor that replaces textarea (older)
my $useEasyMDE		= 1; # A markdown editor that replaces textarea (newer fork)

my $templateID		= 24; # UserID for a "template" user, who is excluded by default from various lists/searches

my $allow_self_votes	= 0;
my $allow_commenting	= 1;

my $max_images		= 10;

my $ratelimit_seconds	= 900;	# 15 minutes
my $ratelimit_limit	= 100;	# 100 requests / 15 minutes

my $discordlink	= 'https://discord.gg/Zz3RCHpjvS';	# https://discord.gg/NkpazU9jxd
my $mailfrom	= 'no-reply@edastro.com';

my $license	= 'Creative Commons (CC BY-NC-SA 3.0)';
my $licenseURL	= '<a href="https://creativecommons.org/licenses/by-nc-sa/3.0/">'.$license.'</a>';
my $licenseLINK	= '<a href="https://creativecommons.org/licenses/by-nc-sa/3.0/">'.nonbreaking($license).'</a>';

my $db		= 'edastro';
my $baseURL	= 'https://edastro.com';
my $cdn		= 'https://edastro.b-cdn.net';

#my $relativeURL	= "/poi";
my $relativeURL	= "/gec"; #"/poi";
my $DEV = $0 =~ /poidev/ || /gecdev/ ? 1 : 0;
$relativeURL.='dev' if ($DEV);

my $nonDEVlink	= 'https://edastro.com/gec';

my $mainPATH	= '/www/edastro.com';
my $scriptPATH	= '/www/edastro.com/catalog';
my $cachePath	= '/www/edastro.com/catalog/cache';
my $mapsearchPath = '/www/edastro.com/galmap/search';
my $carrierPath = "$scriptPATH/carriers";

my $scriptURL	= $baseURL.$relativeURL;
my $thumbURL	= "/poithumbs";
my $thumbPATH	= '/www/edastro.com'.$thumbURL;

my $mainTitle	= 'Galactic Exploration Catalog';
my $headerFile	= "/www/edastro.com/header.html";
my $footerFile	= "/www/edastro.com/footer.html";

my $mkdir	= '/usr/bin/mkdir';
my $convert	= '/usr/local/bin/convert';

my %symbol	= ('whitestar'=>'&#9734;', blackstar=>'&#9733;', next=>'&#8250;', prev=>'&#8249;', solar=>'&#x263A;', sun=>'&#x2600;', xbox=>'&#x26DD;', 
		attention=>'&#x26A0;', trashcan=>'&#x1F5D1;', flag=>'&#x2691;', triangleright=>'&#x25B6;', triangledown=>'&#x25BC;',
		replyarrow=>'&#x21B3;', checkmark=>'&#10004;', saltire=>'&#x2613;',magnifier=>'&#x2315;');

my @poi_fields	= qw(catID catID2 ownerID coord_x coord_y coord_z sol_dist id64 region edsm_id callsign summary description journal observatory 
			topimage discoverer latitude longitude);

my @poi_cols	= qw(name systemname);
@poi_cols = (@poi_cols, @poi_fields);

my %maxlength	= (name=>64, summary=>200, description=>20000, journal=>4000, observatory=>4000, topimage=>255);
my %minlength	= (name=>4, summary=>10, description=>80, journal=>0, observatory=>0, topimage=>0);

my @months = ('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');

my %avail_category	= ();
my %category_restricted	= ();
my %lookup_category	= ();
my %lookup_region	= ();
my %lookup_role		= ();
my %lookup_username	= ();
my %lookup_poiname	= ();
my %lookup_poicat	= ();
my %lookup_poidata	= ();

my @t = localtime;
my $today = sprintf("%04u-%02u-%02u",$t[5]+1900,$t[4]+1,$t[3]);
my $aprilFools = ($today =~ /\-04\-01$/) ? 1 : 0;

#$aprilFools = 1; # TESTING

##########################################################################

my $q = new CGI;

if (@ARGV) {
	if ($ARGV[0] eq 'thumbs') {
		print "Redoing thumbnails.\n";
		update_thumbs();
		exit;
	}
	
	if ($ARGV[0] eq 'carriers') {
		print "Checking fleet carriers.\n";
		update_carriers();
		exit;
	}
	
	if ($ARGV[0] eq 'recalc') {
		print "Recalculating all vote scores.\n";
		recalculateAll();
		exit;
	}

	if ($ARGV[0] eq 'reformat') {
		print "Reformatting all markdown->HTML.\n";
		reformat_markdownHTML_all();
		exit;
	}

	if ($ARGV[0] eq 'reformatone') {
		die "need poiID\n" if (!$ARGV[1] || $ARGV[1] !~ /^\d+$/);
		print "Reformatting #$ARGV[1] markdown->HTML.\n";
		reformat_markdownHTML($ARGV[1],'force');
		exit;
	}
}

my $userID = getCookieSession();
my $error  = '';

my $loginUserID = $userID;

if ($userID != $sessionUserID) {
	$userID = $sessionUserID;
}

my $userBanned = 0;
if ($sessionDATA{banned}) {
	$userID = $sessionUserID = 0;
	$userBanned = 1;
}

my $userUnverified = 0;
if (!$sessionDATA{verified}) {
	$userID = $sessionUserID = 0;
	$userUnverified = 1;
}

my $betatester = isAdmin();
$betatester = 1 if (!$BETA_closed);

if ($BETA && $BETA_closed && !isAdmin()) {
	if (!$sessionDATA{betatester}) {
		$userID = $sessionUserID = 0;
		$betatester = 0;
	} else {
		$betatester = 1;
	}
}

my $request = $q->param('r');
my $action  = $q->param('action');
my $rendered= 0;

if ($DEV && (!$sessionUserID || (!isAdmin() && !$sessionDATA{betatester}))) {
	$request =~ s/^\/+//;
	redirect("$nonDEVlink/$request");
	exit;
}


print $q->header("text/plain;charset=UTF-8") if ($debug);
#print html_header() if ($debug);
do_catalog($request);
render_error("Error: No content generated") if (!$rendered);
exit;


##########################################################################

sub do_catalog {
	# Main function!
	my $request = shift;
	print "Request: $request<br/>\n" if ($debug);

	$request =~ s/\/+$//;

	my @req = split '/', $request;
	my $section = shift @req;

	$section = $action if (!$section && $action);

	for ($section) {
		/^(main)?$/ and do {
			frontpage(@req);
		last };

		/^json$/ and do {
			json_output(@req);
		last };

		/^all$/ and do {
			show_all(@req);
		last };

		/^(next|prev)$/ and do {
			view_nextprev($1,@req);
		last };

		/^view$/ and do {
			view(@req);
		last };

		/^(delete|promote|hide|edit|editsubmit|cancel)image$/ and do {
			image_update($1,@req);
		last };

		/^viewimages$/ and do {
			view_images(@req);
		last };

		/^new$/ and do {
			new_entry(@req);
		last };

		/^edit$/ and do {
			edit_entry(@req);
		last };

		/^update$/ and do {
			update_entry('update',@req);
		last };

		/^system$/ and do {
			show_system(@req);
		last };

		/^category$/ and do {
			show_category(@req);
		last };

		/^region$/ and do {
			show_region(@req);
		last };

		/^profile$/ and do {
			profile(@req);
		last };

		/^scoring$/ and do {
			scoring(@req);
		last };

		/^APIinfo$/ and do {
			APIinfo(@req);
		last };

		/^rules$/ and do {
			rules(@req);
		last };

		/^tutorial$/ and do {
			tutorial(@req);
		last };

		/^(request|abort)?approve$/ and do {
			approve($1,@req);
		last };

		/^((un)?hide)$/ and do {
			do_hide($1,@req);
		last };

		/^((un)?report)$/ and do {
			report($1,@req);
		last };

		/^((request|abort|un)?delete)$/ and do {
			do_delete($1,@req);
		last };

		/^change$/ and do {
			change_detail(@req);
		last };

		/^msg$/ and do {
			post_message(@req);
		last };

		/^((un)?hidemsg)$/ and do {
			hide_msg($1,@req);
		last };

		/^getmsgs$/ and do {
			get_msgs(@req);
		last };

		/^editmsg$/ and do {
			edit_msg(@req);
		last };

		/^editreply$/ and do {
			edit_reply(@req);
		last };

		/^postreply$/ and do {
			post_reply(@req);
		last };

		/^voterating$/ and do {
			rating_include(@req);
		last };

		/^favorites$/ and do {
			update_favorites(@req);
		last };

		/^favorite$/ and do {
			favorite(@req);
		last };

		/^reformat$/ and do {
			reformat_markdownHTML(@req);
		last };

		/^unapproved$/ and do {
			show_unapproved(@req);
		last };

		/^pendingdeletion$/ and do {
			show_pendingdeletion(@req);
		last };

		/^listdeleted$/ and do {
			show_deleted(@req);
		last };

		/^hidden$/ and do {
			show_hidden(@req);
		last };

		/^reported$/ and do {
			show_reported(@req);
		last };

		/^pushdiscord$/ and do {
			pushDiscord($req[0],'Manual send',1,0,1);
		last };

		/^tos$/ and do {
			show_tos();
		last };

		/^search$/ and do {
			search(@req);
		last };

		/^verifyemail$/ and do {
			verifyemail(@req);
		last };

		/^togglerare$/ and do {
			toggle_rare(@req);
		last };

		/^toggleban$/ and do {
			toggle_ban(@req);
		last };

		/^togglebeta$/ and do {
			togglebeta(@req);
		last };

		/^roster$/ and do {
			roster(@req);
		last };

		/^addimage$/ and do {
			addimage(@req);
		last };

		/^testemail$/ and do {
			test_email(@req);
		last };

		/^broken$/ and do {
			broken(@req);
		last };

		/^disagreement$/ and do {
			disagreement(@req);
		last };

		/^changelog$/ and do {
			changelog(@req);
		last };

		/^leaderboard$/ and do {
			leaderboard(@req);
		last };

		/^editlog$/ and do {
			editlog(@req);
		last };

		/^getEDSM$/ and do {
			get_edsmID(@req);
		last };

		/^((un)?ban)$/ and do {
			ban_user($1,@req);
		last };

		// and do { # "else" catch-all
			render_error("Unknown action or section: ".htmlify($section));
		}
	}
}

##########################################################################

sub frontpage {
	my @req = @_;

	my $html = "
<div class=\"poiWelcomeContainer\"><table border=0 cellpadding=0 cellspacing=0>
 <tr><td valign=\"top\">
  <div class=\"poiWelcomeDiv\">
   <p align=\"left\" class=\"textjustify\">
Welcome to the Galactic Exploration Catalog (GEC) on EDAstro, and thank you for sharing your interesting, beautiful, rare, and exceptional discoveries for your fellow Commanders to enjoy! Please review the <a href=\"$scriptURL/rules\">submission guidelines and rating suggestions</a> before submitting or rating a Point of Interest (POI). Get in touch with the GEC team <a href=\"$discordlink\">on our discord</a> with any questions, concerns, or just to say hi. Otherwise, we'll see you in The Black, CMDR!
	<br/><br/>
	[<a href=\"https://bsky.app/intent/compose?text=I%27m%20navigating%20through%20the%20GEC%20exploration%20catalog%21%20%F0%9F%A6%8B%0Ahttps%3A//edastro.com/gec/exploring\">Share on Bluesky <img src=\"/images/bluesky15px.png\" border=0 alt=\"Bluesky\" style=\"border: 0\"></a>]
   </p><br/><br/>
";


	my %cat = getCategories();
	my %reg = getRegions();

	if (!$sessionUserID) {
		$html .= "<div><span class=\"textyellow\">Not logged in.</span> <a href=\"https://edastro.com/auth/login\">Login here</a>, or <a href=\"https://edastro.com/auth/register\">register a new account</a>.<p/><br/></div>\n";
	}

	$html .= "<div class=\"poiContainer\">\n";
	$html .= "<div>\n";
	$html .= "<table class=\"poiViewTable\">\n";
	$html .= "<tr><td class=\"poiViewCell\">View existing POIs:</td>\n";

	$html .= "<td class=\"poiViewCell\"><select id=\"categoryselect\" name==\"categoryselect\" ".
		"onchange=\"greyout();location.href='$relativeURL/category/'+this.value\">\n";
	$html .= "<option value=\"\" selected>-category-</option>\n";
	foreach my $k (sort {$cat{$a} cmp $cat{$b}} keys %cat) {
		next if (!$k);
		$html .= "<option value=\"$k\">$cat{$k}</option>\n";
	}
	$html .= "</td></tr>\n";

	$html .= "<tr><td class=\"poiViewCell\">or:</td><td class=\"poiViewCell\"><select id=\"regionselect\" name==\"regionselect\" ".
			"onchange=\"greyout();location.href='$relativeURL/region/'+this.value\">\n";
	$html .= "<option value=\"\" selected>-region-</option>\n";
	foreach my $k (sort {$reg{$a} cmp $reg{$b}} keys %reg) {
		next if (!$k);
		$html .= "<option value=\"$k\">$reg{$k}</option>\n";
	}
	$html .= "</td></tr>\n";

	$html .= "<tr><td class=\"poiViewCell\">or:</td><td class=\"poiViewCell\"><select id=\"allselect\" name==\"allselect\" ".
			"onchange=\"greyout();location.href='$relativeURL/all/'+this.value\">\n";
	$html .= "<option value=\"\" selected>-view all-</option>\n";
	my %select = (
			name=>'All - Ordered by POI name',
			system=>'All - Ordered by system name',
			region=>'All - Ordered by region name',
			commander=>'All - Ordered by submitter name',
			rating=>'All - Ordered by explorer rating',
			curation=>'All - Ordered by '.$admin_scores.' rating',
			edited=>'All - Ordered by last edited (recent first)',
			created=>'All - Ordered by creation date (newest first)',
			);
	foreach my $k (
			'name','system','region','commander','rating','curation','edited','created'
			) {
		$html .= "<option value=\"$k\">$select{$k}</option>\n";
	}
	$html .= "</td></tr>\n";

	$html .= "</table>\n";
	$html .= "</div>\n";

	$html .= "<input type=\"button\" class=\"poiButton floatLeft\" onclick=\"greyout();location.href='$relativeURL/search/new';\" value=\"\&thinsp;$symbol{magnifier}\&thinsp;\"/>\n";
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" value=\"Leaderboard\" onclick=\"greyout();location.href='$relativeURL/leaderboard';\">\n";
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" value=\"Public/Official POIs\" onclick=\"greyout();location.href='$relativeURL/profile/24';\">\n";
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" value=\"Rare POIs\" onclick=\"greyout();location.href='$relativeURL/search?pagenum=0\&rareOnly=on\&pagesize=20';\">\n";
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" value=\"Carrier POIs\" onclick=\"greyout();location.href='$relativeURL/search?pagenum=0\&carrieronly=on\&pagesize=20';\">\n";

	$html .= "</div>\n";

	$html .= "
  </div>
 </td>
 <td width=240 valign=\"top\">
   <div class=\"poiLogoDiv\">
    <img src=\"/images/GEC-marker-logo-240px.png\" width=\"240\" class=\"borderless\">
   </div>
 </td></tr></table>
</div>
";



	$html .= "<br/><br/>\n" if ($sessionUserID && isAdmin());

	
	if ($sessionUserID && isAdmin()) {
		$html .= "<div class=\"poiContainer\">\n";
		$html .= "<p class=\"largetext\" style=\"text-align:center\">$admin_TITLE Tools</p>\n";
		$html .= "<p><input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/roster'\" value=\"Roster\">\n";
		$html .= "<input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/broken'\" value=\"Broken Image Links\">\n";
		$html .= "<input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/disagreement'\" value=\"Rating Disagreements\"></p>\n";
		$html .= "<p>\n";
		$html .= "<input type=\"button\" class=\"poiButton poiButtonGreen\" onclick=\"greyout();location.href='$scriptURL/unapproved'\" value=\"Approve POIs (".countUnapproved().")\">\n";
		$html .= "\&nbsp;<input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/reported'\" value=\"Reported POIs (".countReported().")\">\n";
		$html .= "\&nbsp;<input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/hidden'\" value=\"Hidden POIs (".countHidden().")\">\n";
		$html .= "\&nbsp;<input type=\"button\" class=\"poiButton\" onclick=\"greyout();location.href='$scriptURL/pendingdeletion'\" value=\"Pending Deletion (".countPendingDeletion().")\">\n";
		$html .= "\&nbsp;<input type=\"button\" class=\"poiButton poiButtonRed\" onclick=\"greyout();location.href='$scriptURL/listdeleted'\" value=\"Deleted (".countDeleted().")\">\n";
		$html .= "</p>\n";
		$html .= "</div>\n";
		$html .= "<br/><br/>\n";
	}

	#my ($userID,$systemname,$catID,$regionID,$sortby,$sortdir,$limit,$mode,$customAND,$customGET) = @_;

#	$html .= tablePOI('$admin_TITLE Top Picks:',listPOI(0,'',0,0,'cscore','desc',10,undef),'100%')."<p/>\n";
#	$html .= tablePOI('Highest Rated POIs:',listPOI(0,'',0,0,'score','desc',10,undef),'100%')."<p/>\n";
#	$html .= tablePOI('Recently added POIs:',listPOI(0,'',0,0,'created','desc',10,undef),'100%')."<p/>\n";

	if ($sessionUserID) {
		my $unrated = getPOIs({sortby=>'votes,approved',limit=>10,excludeunapproved=>1,excludevoted=>1,excludetemplates=>1,excludeown=>1});
		my $unrated_title = 'Unrated and few-vote POIs needing votes:';

		if (ref($unrated) eq 'ARRAY' && @$unrated) {
			$html .= tablePOI($unrated_title,$unrated,'100%')."<p/>\n";
		} else {
			$html .= "<br/><div class=\"poiTableContainer floatLeft\"><p class=\"poiTableTitle\" align=\"left\"><b>$unrated_title</b> None, voted on all available.</p></div><br/><br/><br/>\n";
		}
	}
	$html .= tablePOI($admin_TITLE.' Top Picks:',getPOIs({sortby=>'cscore',sortdir=>'desc',limit=>10,excludetemplates=>1}),'100%')."<p/>\n";
	$html .= tablePOI('Highest Rated POIs:',getPOIs({sortby=>'score',sortdir=>'desc',limit=>10,excludetemplates=>1}),'100%')."<p/>\n";

#	if ($sessionUserID && isAdmin()) {
#		$html .= tablePOI('Recently added POIs:',getPOIs({sortby=>'created desc',limit=>10}),'100%')."<p/>\n";
#	} else {
		$html .= tablePOI('Recently added POIs:',getPOIs({sortby=>'approved desc,created desc',limit=>10,excludetemplates=>1}),'100%')."<p/>\n";
#	}

	$html .= iconKey();

	render($html,": $mainTitle");
}

sub iconKey {
	my $html ='';

	#foreach my $i ('blackstar:green',checkmark:green,'saltire:red','xbox:red'

	$html .= "<div class=\"poiKey\">\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textgreen\">$symbol{checkmark}</span>\&nbsp;Your\&nbsp;favorites</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textgreen\">$symbol{blackstar}</span>\&nbsp;You\&nbsp;voted</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textyellow\">$symbol{flag}</span>\&nbsp;New,\&nbsp;unapproved</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textgreen\">$symbol{flag}</span>\&nbsp;New,\&nbsp;approved\&nbsp;within\&nbsp;7\&nbsp;days</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textred\">$symbol{attention}</span>\&nbsp;Reported</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textred\">$symbol{saltire}</span>\&nbsp;Hidden</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"textred\">$symbol{xbox}</span>\&nbsp;Pending\&nbsp;Deletion</span>\n";
	$html .= "<span class=\"poiKeyIcon\"><span class=\"boldText textmagenta\">$symbol{blackstar}</span>\&nbsp;Rare</span>\n";
	$html .= "</div>\n";

	return $html;
}

sub roster {
	my $sort = shift;
	my $page_num = shift;
	my $page_size_param = shift;
	my $html = '';
	my $skip_banned = 0;
	my $page_size = 20;
	$page_size = $sessionDATA{roster_pagesize} if ($sessionDATA{roster_pagesize});
	$page_size = $page_size_param if ($page_size_param);

	getRoles();

	$sort =~ /^(REV)?(\S+)/;
	my $sortby = $2;
	my $reverse = $1 ? 1 : 0;

	$sort = 'default' if (!$sort);

	my $order = 'username';
	$order = 'users.username' if ($sortby eq 'username');
	$order = 'users.email' if ($sortby eq 'email');
	$order = 'users.created' if ($sortby eq 'joined');
	$order = 'users.ID' if ($sortby eq 'userid');
	$order = 'num_poi' if ($sortby eq 'poicount');
	my $dir = '';

	if ($sortby =~ /joined|num_poi/) {
		$dir = $reverse ? 'asc' : 'desc';
	} else {
		$dir = $reverse ? 'desc' : 'asc';
	}

	my $url = "$relativeURL/roster";
	$url .= "/$sort" if ($sort);

	my $where = '';
	$where = 'where banned is null' if ($skip_banned);

	my @rows = db_mysql($db,"select count(*) as num from users $where");
	my $usercount = ${$rows[0]}{num};
	my $num_pages = floor($usercount/$page_size);	# Really, number of pages beyond the first page.

	$page_num = 0 if (!$page_num || $page_num < 0);
	$page_num = $num_pages if ($page_num > $num_pages);

	my $page_offset = $page_num * $page_size;

	my $rows = rows_mysql($db,"select users.*,count(poi.ID) as num_poi from users left join poi on ownerID=users.ID and deleted is null ".
				"$where group by users.ID order by $order $dir,username,ID limit $page_offset,$page_size");

	my @columns = ('','ID','User','Role','POIs','Status','Voting','BETA','Joined');

	if ($sessionUserID && isAdmin()) {
		push @columns, 'Email (private)';
		push @columns, 'Extra';
	}

	$html .= "<div class=\"poiTableContainer\">\n";
	$html .= "<span class=\"floatRight\">Page size: <select id=\"pageSize\" onchange=\"location.href='$url/$page_num/'+this.value\">";
	my $found = 0;
	foreach my $n (10,20,25,30,50,75,100) {
		my $sel = $n==$page_size ? ' selected' : '';
		$found++ if ($sel);
		$html .= "<option value=\"$n\"$sel>$n</option>";
	}
	$html .= "<option value=\"$page_size\" selected>custom: $page_size</option>" if (!$found);
	$html .= "</select></span>\n";

	$html .= "<p class=\"poiTableTitle\" align=\"left\"><b>GEC / EDAstro Roster</b></p><table class=\"poiTable\">\n";
	$html .= "<tr class=\"poiTableHeader\">";

	my $k = 0;
	foreach my $n (@columns) {
		my $label = $n;
		$label =~ s/\s+/\&nbsp;/gs;
		my $sorting = '';

		if ($n eq 'ID') {
			$sorting = 'userid';
			$sorting = 'REVuserid' if ($sort eq 'userid');
		}
		if ($n eq 'User') {
			$sorting = 'username';
			$sorting = 'REVusername' if ($sort eq 'username');
		}
		if ($n eq 'Joined') {
			$sorting = 'joined';
			$sorting = 'REVjoined' if ($sort eq 'joined');
		}
		if ($n =~ /^POI/) {
			$sorting = 'poicount';
			$sorting = 'REVpoicount' if ($sort eq 'poicount');
		}
		if ($n =~ /^Email/) {
			$sorting = 'email';
			$sorting = 'REVemail' if ($sort eq 'email');
		}
		
		$label = "<span class=\"darklink\"><a href=\"$relativeURL/roster/$sorting\" class=\"darklink\">$label</a></span>" if ($sorting);

		my $clickableheader = '';

		$clickableheader = ' poiTableHeaderClickable' if (
				($sort =~ /userid/ && $n =~ /ID/) ||
				($sort =~ /username/ && $n =~ /User/) ||
				($sort =~ /joined/ && $n =~ /Joined/) ||
				($sort =~ /poicount/ && $n =~ /POI/) ||
				($sort =~ /email/ && $n =~ /Email/) 
			);

		$html .= "<th class=\"poiTableHeader$clickableheader\">\&nbsp;$label\&nbsp;</th>";
		$k++;
	}
	$html .= "</tr>\n";

	my $i = 0;
	foreach my $r (@$rows) {
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';

		$html .= "<tr class=\"$class\">";

		#my $status = '<span class="textgreen">active</span>';
		my $status = 'active';
		$status = '<span class="textyellow boldtext">unverified</span>' if (!$$r{verified});
		$status = '<span class="textred boldtext">BANNED</span>' if ($$r{banned});

		#my $voting = '<span class="textgreen">yes</span>';
		my $voting = 'yes';
		$voting = '<span class="textred boldtext">NO</span>' if (!$$r{canVote});

		my $beta = 'no';
		$beta = '<span class="textgreen boldtext">YES</span>' if ($$r{betatester});
	
		my @data = ($$r{ID},$$r{username},$lookup_role{$$r{admin}},commify($$r{num_poi}),$status,$voting,$beta,$$r{created});
		if ($sessionUserID && isAdmin()) {
			push @data, $$r{email} ;

			if ($$r{verified}) {
				push @data, '';
			} elsif (!$$r{banned}) {
				push @data, '<span class="textyellow boldtext"><a href="'."$relativeURL/verifyemail/$$r{ID}/$sort".'">(activate)</a></span>';
			} else {
				push @data, '';
			}
		}

		my $avatar = gravatar_url( email => $$r{email}, rating=>'pg', size=>16, default=>'https://edastro.com/images/account-icon-grey-16px.png' );

		$html .= "<td class=\"$class\"><img class=\"borderless\" src=\"$avatar\" width=16 height=16></td>" if ($avatar);
		$html .= "<td class=\"$class\"></td>" if (!$avatar);

		my $k=1;
		foreach my $n (@data) {
			my $col = $columns[$k];
			my $align = '';
			$align = "style=\"text-align:right\"" if ($col =~ /poi/i);
			$align = "style=\"text-align:center\"" if ($col =~ /role|voting|status/i);

			my $val = $n;

			if ($col =~ /role/i && $val =~ /$admin_title/i) {
				$val = "<span class=\"textgreen\">$val</span>";
			}

			if ($col =~ /pois/i && $$r{num_poi}) {
				$val = "<span class=\"textgreen\">$val</span>";
			}

			if ($col =~ /Email/ && $val !~ /<span/) {
				my $sub = $$r{sendemails} ? '' : "<span class=\"textred\">$symbol{xbox}</span>\&nbsp;";
				$val = "$sub<span><a href=\"mailto:".htmlify($val)."\">".htmlify($val)."</a></span>";
			}

			if ($col =~ /status/i) {
				$val = "<span><a href=\"$relativeURL/toggleban/$$r{ID}/$sort/$page_num/$page_size\">$val</a></span>";
			}

			if ($col =~ /beta/i) {
				$val = "<span><a href=\"$relativeURL/togglebeta/$$r{ID}/$sort/$page_num/$page_size\">$val</a></span>";
			}

			if ($val !~ /<span/) {
				$val = htmlify($val);
				$val =~ s/\s+/\&nbsp;/gs;
				$val =~ s/\-+/\&#8209;/gs;
			}

			if ($col =~ /user/i || $col eq 'ID') {
				$val = "<a href=\"$relativeURL/profile/$$r{ID}\">$val</a>";
			}

			$html .= "<td class=\"$class\" $align>\&nbsp;$val\&nbsp;</td>";
			$k++;
		}

		$html .= "</tr>\n";
	}

	$html .= "</table>\n";

	if ($num_pages > 0) {
		$html .= "<div class=\"pagination\">\n";
		if ($page_num > 0) {
			$html .= "<a href=\"$url/0/$page_size\">\&lt;\&lt;</a>";
			$html .= "<a href=\"$url/".($page_num-1)."/$page_size\">\&lt;</a>";
		}

		foreach my $i ($page_num-3 .. $page_num+3) {
			if ($i>=0 && $i <= $num_pages) {
				if ($i==$page_num) {
					$html .= "<a class=\"active\">".($i+1)."</a>" if ($i>=0 && $i<=$num_pages);
				} else {
					$html .= "<a href=\"$url/$i/$page_size\">".($i+1)."</a>" if ($i>=0 && $i<=$num_pages);
				}
			}
		}

		if ($page_num < $num_pages) {
			$html .= "<a href=\"$url/".($page_num+1)."/$page_size\">\&gt;</a>";
			$html .= "<a href=\"$url/$num_pages/$page_size\">\&gt;\&gt;</a>";
		}
		$html .= "</div>\n";
		$html .= "<br/>(".commify($usercount).' users, '.commify($num_pages+1)." pages)\n";
	}

	$html .= "</div>\n";

	render($html,'Roster');
}

sub leaderboard {
	my @req = @_;
	my $html = '';

	$html = "<div class=\"poiTableContainer\"><p class=\"poiTableTitle\" align=\"left\"><b>Voting Leaderboard (most voting activity)</b></p><table class=\"poiTable\">\n";
	$html .= "<tr class=\"poiTableHeader\">";

	getRoles();

	my $limit = 20;

	my $rows = rows_mysql($db,"select users.*,count(*) as num_votes from users,votes,poi where votes.voterID=users.ID and ".
				"votes.poiID=poi.ID and poi.hidden is null and poi.deleted is null and poi.approved is not null ".
				"and users.banned is null and poi.ownerID!=users.ID group by users.ID order by num_votes desc limit $limit");

	my @columns = ('Votes','User','POIs Created','Role');

	my $k = 0;
	foreach my $n (@columns) {
		my $label = $n;
		$label =~ s/\s+/\&nbsp;/gs;
		#my $sorting = '';
		#$label = "<span class=\"darklink\"><a href=\"$relativeURL/roster/$sorting\" class=\"darklink\">$label</a></span>" if ($sorting);

		$html .= "<th class=\"poiTableHeader\">\&nbsp;$label\&nbsp;</th>";
		$k++;
	}
	$html .= "</tr>\n";

	my @ids = ();
	foreach my $r (@$rows) {
		push @ids, $$r{ID};
	}

	my %poicount = ();
	if (@ids) {
		my @counts = db_mysql($db,"select ownerID,count(*) as num from poi where ownerID in (".join(',',@ids).") and hidden is null and deleted is null and approved is not null group by ownerID");
		foreach my $c (@counts) {
			$poicount{$$c{ownerID}} = $$c{num};
		}
	}

	my $i = 0;
	foreach my $r (@$rows) {
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';

		$html .= "<tr class=\"$class\">";

		$poicount{$$r{ID}} = 0 if (!$poicount{$$r{ID}});

		my @data = ($$r{num_votes},$$r{username},commify($poicount{$$r{ID}}),$lookup_role{$$r{admin}});

		my $k=0;
		foreach my $n (@data) {
			my $col = $columns[$k];
			my $align = '';
			$align = "style=\"text-align:right\"" if ($col =~ /poi|rating|votes/i);
			$align = "style=\"text-align:center\"" if ($col =~ /role|voting|status/i);

			my $val = $n;

			if ($col =~ /role/i && $val =~ /$admin_title/i) {
				$val = "<span class=\"textgreen\">$val</span>";
			}


			if ($val !~ /<span/) {
				$val = htmlify($val);
				$val =~ s/\s+/\&nbsp;/gs;
				$val =~ s/\-+/\&#8209;/gs;
			}

			if ($col =~ /user/i || $col eq 'ID') {
				$val = "<a href=\"$relativeURL/profile/$$r{ID}\">$val</a>";
			}

			$html .= "<td class=\"$class\" $align>\&nbsp;$val\&nbsp;</td>";
			$k++;
		}

		$html .= "</tr>\n";
	}

	$html .= "</table>\n";
	$html .= "</div>\n";

	render($html,'Leaderboard');
}

##########################################################################

sub check_ratelimit {
	my $ip = shift;
	my $time = time;
	my %hash = ();

	my $rows = rows_mysql($db,"select * from ratelimit where ip=?",[($ip)]);
	if ($rows && @$rows) {
		my $r = shift @$rows;
		my $epoch_window = int($$r{epoch}/$ratelimit_seconds);
		my $time_window = int($time/$ratelimit_seconds);

		if ($time - $$r{epoch} >= $ratelimit_seconds || $time_window != $epoch_window) {
			db_mysql($db,"update ratelimit set epoch=?,remaining=? where ip=?",[($time,$ratelimit_limit-1,$ip)]);
		} else {
			db_mysql($db,"update ratelimit set epoch=?,remaining=remaining-1 where ip=?",[($time,$ip)]);
		}
	} else {
		db_mysql($db,"insert ignore into ratelimit (epoch,remaining,ip) values (?,?,?)",[($time,$ratelimit_limit-1,$ip)]);
	}

	my $rows = rows_mysql($db,"select * from ratelimit where ip=?",[($ip)]);	# Read it back, in case of race conditions
	if ($rows && @$rows) {
		my $r = shift @$rows;
		my $seconds_left = $ratelimit_seconds - ($$r{epoch} - (int($$r{epoch}/$ratelimit_seconds)*$ratelimit_seconds));

		$hash{remaining} = $$r{remaining};
		$hash{remaining} = 0 if ($hash{remaining}<=0);
		$hash{limit} = $ratelimit_limit;
		$hash{reset} = $seconds_left;
	} else {
		# Fail open, barely. ;)

		$hash{reset} = 10;
		$hash{limit} = 1;
		$hash{remaining} = 1;
	}

	db_mysql($db,"delete from ratelimit where epoch<=?",[(time-43200)]);	# delete anything older than 12 hours

	if (!$hash{remaining}) {
		http_response('429','Too many requests.',\%hash);
	}

	return \%hash;
}

sub http_response {
	my ($code,$data,$rate) = @_;

	$code = '405 Method Not Allowed' if ($code eq '405');
	$code = '404 Not found' if ($code eq '404');
	$code = '429 Too many requests' if ($code eq '429');
	$code = '403 Forbidden' if ($code eq '403');

	#$q->$header->status($code);

	if (ref($data) eq 'HASH') {
		print $q->header(-type=>'application/json',-status=>$code,
				-RateLimit_Limit=>$$rate{limit},-RateLimit_Remaining=>$$rate{remaining},-RateLimit_Reset=>$$rate{reset});
		print JSON->new->encode($data)."\n";
	} else {
		print $q->header(-type=>'text/plain',-status=>$code,
				-RateLimit_Limit=>$$rate{limit},-RateLimit_Remaining=>$$rate{remaining},-RateLimit_Reset=>$$rate{reset});
		print "$data\n";
	}
	exit;
}

sub json_output {
	my $type = shift;
	my @req  = @_;
	my $href = {};
	tie %$href, "Tie::IxHash";

	my $ip = $ENV{REMOTE_ADDR};
	my $rate = check_ratelimit($ip);

	my $varlist = 'poi.ID,poi.name,id64,catID,catID2,region,latitude,longitude,systemname,edsm_id,coord_x,coord_y,coord_z,summary,callsign,'.
			'rare,description,descriptionHTML,sol_dist,score,cscore,votes,stars,topimage,toplocalimage,mainimage';

	if ($type eq 'all' || $type eq 'combined') {
		my $minscore = 0;
		my @params = ();

		if ($req[0] =~ /^\d+(\.\d+)?$/) {
			$minscore = $req[0]+0;
		}

		my $min = $minscore ? " and score>=?" : '';
		push @params, $minscore if ($min);

		my $rows = rows_mysql($db,"select $varlist,'GEC' as source from poi,poidata where poiID=poi.ID and deleted is null ".
					"and hidden is null and approved is not null $min order by ID",\@params);

		$href = [()];

		if (ref($rows) eq 'ARRAY' && @$rows) {
			foreach my $r (@$rows) {
				push @$href, json_format_POI($r);
			}
		}

		if ($type eq 'combined') {
			my $rows = rows_mysql($db,"select *,'GMP' as source from GMP order by id");
	
			if (ref($rows) eq 'ARRAY' && @$rows) {
				foreach my $r (@$rows) {
					push @$href, json_format_GMP($r);
				}
			}
		}


	} elsif ($type eq 'id64') {
		my $id64 = $req[0];
		if ($req[0] =~ /^\d+$/) {
			my $rows = rows_mysql($db,"select $varlist from poi,poidata where id64=? and poiID=poi.ID and ".
					"deleted is null and hidden is null and approved is not null",[($id64)]);

			if (ref($rows) eq 'ARRAY' && @$rows) {
				$href = json_format_POI($$rows[0]);
			}
		}
	} elsif ($type eq 'single') {
		my $poiID = $req[0];
		if ($req[0] =~ /^\d+$/) {
			my $rows = rows_mysql($db,"select $varlist from poi,poidata where ID=? and poiID=poi.ID and ".
					"deleted is null and hidden is null and approved is not null",[($poiID)]);

			if (ref($rows) eq 'ARRAY' && @$rows) {
				$href = json_format_POI($$rows[0]);
			}
		}
	} elsif ($type eq 'rare') {

		my $rows = rows_mysql($db,"select $varlist from poi,poidata where poidata.poiID=poi.ID and ".
				"rare>0 and deleted is null and hidden is null and approved is not null");

		if (ref($rows) eq 'ARRAY' && @$rows) {
			$href = [()];
			foreach my $r (@$rows) {
				push @$href, json_format_POI($r);
			}
		}
		

	} elsif ($type eq 'favorites') {
		my $userID = $req[0];

		if ($userID !~ /^\d+$/) {
			$userID = getUserID($userID);
		}

		my $rows = rows_mysql($db,"select $varlist from poi,poidata,favs where favs.poiID=poi.ID and poidata.poiID=poi.ID and ".
				"favs.ownerID=? and deleted is null and hidden is null and approved is not null",[($userID)]);

		if (ref($rows) eq 'ARRAY' && @$rows) {
			$href = [()];
			foreach my $r (@$rows) {
				push @$href, json_format_POI($r);
			}
		}
		
	} elsif ($type eq 'nearest') {
		my ($x,$y,$z,$minscore) = @req;
		my @params = ();
		$minscore += 0;

		my $min = $minscore ? " and score>=?" : '';

		push @params, $x+0;
		push @params, $y+0;
		push @params, $z+0;
		push @params, $minscore if ($min);

		my $rows = rows_mysql($db,"select $varlist,sqrt(pow(?+coord_x,2)+pow(?+coord_y,2)+pow(?+coord_z,2)) distance from poi,poidata where poiID=poi.ID and ".
			"deleted is null and hidden is null and approved is not null $min order by distance limit 1",\@params);
		if (ref($rows) eq 'ARRAY' && @$rows) {
			$href = json_format_POI($$rows[0],{distance=>${$$rows[0]}{distance}});
		}
	} elsif ($type eq 'categories') {
		getCategories();

		my @list = ();
		foreach my $c (sort {$a <=> $b} keys %avail_category) {
			my %hash = (); tie %hash, "Tie::IxHash";
			$hash{id}=$c+0;
			$hash{name}=$lookup_category{$c};
			$hash{curationOnly}=$category_restricted{$c} ? \1 : \0;
			push @list, \%hash;
		}

		$href = \@list;
	} elsif ($type eq 'stats') {

		foreach my $i (qw(counts votes regions category)) {
			$$href{$i} = {};
			tie %{$$href{$i}}, "Tie::IxHash";
		}

		foreach my $i (qw(primary secondary)) {
			$$href{category}{$i} = {};
			tie %{$$href{category}{$i}}, "Tie::IxHash";
		}


		my $rows = rows_mysql('edastro',"select count(*) as num from poi where deleted is null and approved is not null");
		$$href{counts}{total} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from poi where deleted is null and approved is not null and date_sub(now(),interval 7 day)<=approved");
		$$href{counts}{week} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from poi where deleted is null and approved is not null and date_sub(now(),interval 30 day)<=approved");
		$$href{counts}{days30} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from poi where deleted is null and approved is not null and date_sub(now(),interval 1 year)<=approved");
		$$href{counts}{year} = ${$$rows[0]}{num}+0;


		my $rows = rows_mysql('edastro',"select count(*) as num from votes");
		$$href{votes}{total} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from votes where date_sub(now(),interval 7 day)<=updated");
		$$href{votes}{week} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from votes where date_sub(now(),interval 30 day)<=updated");
		$$href{votes}{days30} = ${$$rows[0]}{num}+0;

		$rows = rows_mysql('edastro',"select count(*) as num from votes where date_sub(now(),interval 1 year)<=updated");
		$$href{votes}{year} = ${$$rows[0]}{num}+0;


		$rows = rows_mysql('edastro',"select distinct regionname,count(*) as num from poi,regions where regions.id=region and deleted is null ".
				"and approved is not null group by regionname order by regionname");
		foreach my $r (@$rows) {
			$$href{regions}{$$r{regionname}} = $$r{num}+0;
		}

		$rows = rows_mysql('edastro',"select distinct catname,count(*) as num from poi,categories where categories.ID=catID and poi.deleted is null ".
				"and approved is not null group by catname order by catname and categories.deleted=0");
		foreach my $r (@$rows) {
			$$href{category}{primary}{$$r{catname}} = $$r{num}+0;
		}

		$rows = rows_mysql('edastro',"select distinct catname,count(*) as num from poi,categories where catID2 is not null and ".
				"categories.ID=catID2 and poi.deleted is null and approved is not null group by catname order by catname and categoies.deleted=0");
		foreach my $r (@$rows) {
			$$href{category}{secondary}{$$r{catname}} = $$r{num}+0;
		}
	}
	
	if ($rate_limiting) {
		print "RateLimit-Limit: $$rate{limit}\nRateLimit-Remaining: $$rate{remaining}\nRateLimit-Reset: $$rate{reset}\n";
	}
	print "Content-Type: application/json\n\n";
	print JSON->new->encode($href)."\n";
	exit;
}

sub json_format_POI {
	my $r = shift;
	my $extra = shift;

	my %hash = ();
	tie %hash, "Tie::IxHash";

	getCategories();
	getRegions();

	%hash = (id=>$$r{ID}+0,
			type=>$lookup_category{$$r{catID}}.'', 
			type2=>$lookup_category{$$r{catID2}}.'', 
			#iconOverride=>$$r{iconoverride}.'', 
			categoryId=>$$r{catID}+0,
			categoryId2=>$$r{catID2}+0,
			name=>$$r{name},
			region=>$lookup_region{$$r{region}},
			galMapSearch=>$$r{systemname}, 
			galMapUrl=>edsm_link($$r{edsm_id},$$r{systemname}),
			coordinates=>[($$r{coord_x}+0,$$r{coord_y}+0,$$r{coord_z}+0)],
			summary=>$$r{summary},
			descriptionMardown=>cdn_links($$r{description},1,1),
			descriptionHtml=>cdn_links($$r{descriptionHTML},1),
			solDistance=>$$r{sol_dist}+0,
			id64=>$$r{id64},
			rating=>$$r{score}+0,
			curation=>$$r{cscore}+0,
			avgStars=>$$r{stars}+0,
			votes=>$$r{votes}+0,
			poiUrl=>"$scriptURL/view/$$r{ID}",
			mainImage=>cdn(get_poi_image($$r{ID},$r)),	#$$r{toplocalimage} ? $$r{toplocalimage} : $$r{topimage},
			callsign=>$$r{callsign}
			);

	$hash{latitude} = $$r{latitude}+0 if ($$r{latitude});
	$hash{longitude} = $$r{longitude}+0 if ($$r{longitude});

	$hash{rare} = $$r{rare} ? JSON::true : JSON::false;

	if (0) { # Logic moved to a call to "get_poi_image()" above:
	if ($$r{mainimage}) {
		$hash{mainImage} = '';
		my @rows = db_mysql($db,"select * from gallery where ID=? and poiID=? and deleted is null",[($$r{mainimage},$$r{ID})]);
		if (@rows) {
			my $i = shift @rows;
			$hash{mainImage} = $$i{imagelink};
		}
		
	}
	}

	my $mainURL = $cdn ? $cdn : $baseURL;

	$hash{mainImage} = "$mainURL$hash{mainImage}" if ($hash{mainImage} !~ /^https?/);

	if ($$r{source}) {
		$hash{source} = $$r{source};
	}

	if ($extra && ref($extra) eq 'HASH') {
		%hash = (%hash, %$extra);
	}

	return \%hash;
}

sub json_format_GMP {
	my $r = shift;
	my %hash = ();
	tie %hash, "Tie::IxHash";

	foreach my $f (qw(id type name galMapSearch galMapUrl)) {
		$hash{$f} = $$r{$f};
	}
	$hash{id}+=0;

	@{$hash{coordinates}} = ($$r{coord_x}+0,$$r{coord_y}+0,$$r{coord_z}+0);

	foreach my $f (qw(descriptionMardown descriptionHtml source)) {
		$hash{$f} = $$r{$f};
	}

	return \%hash;
}

##########################################################################

sub search {
	my $entrycode = shift;
	my $query = '';
	my $html = '';

	getRegions();
	getCategories();

	my $page_size    = defined($q->param('pagesize')) ? ($q->param('pagesize') ? $q->param('pagesize')+0 : 0) : 10;
	my $page_num     = $q->param('pagenum')      ? $q->param('pagenum')+0 : 0;

	my $query        = $q->param('query')        ? $q->param('query') : '';
	my $systemname   = $q->param('systemname')   ? $q->param('systemname') : '';

	my $minscore     = $q->param('minscore')     ? $q->param('minscore')+0 : 0;
	my $mincuration  = $q->param('mincuration')  ? $q->param('mincuration')+0 : 0;
	my $inctemplates = $q->param('inctemplates') ? $q->param('inctemplates') : 0;
	my $regionID     = $q->param('regionID')     ? $q->param('regionID')+0 : 0;
	my $catID        = $q->param('catID')        ? $q->param('catID')+0 : 0;
	my $toMap        = $q->param('toMap')        ? $q->param('toMap')+0 : 0;
	my $rareOnly     = $q->param('rareOnly')     ? 1 : 0;
	my $carrieronly  = $q->param('carrieronly')  ? 1 : 0;
	my $markerColor  = $q->param('markerColor')  ? $q->param('markerColor') : 'blue';

	$systemname = btrim($systemname) if ($systemname);
	$query = btrim($query) if ($query);

	my $textval = '';
	my $sysval  = '';

	$textval = htmlify($query);
	$sysval  = htmlify($systemname);

	$html .= "<form action=\"$relativeURL/search\" method=\"GET\" accept-charset=\"utf-8\" id=\"SearchForm\">\n";
	$html .= "<input type=\"hidden\" id=\"pagenum\" name=\"pagenum\" value=\"$page_num\">\n";
	$html .= "<input type=\"hidden\" id=\"toMap\" name=\"toMap\" value=\"0\">\n";
	$html .= "<div class=\"poiSearch\" align=\"left\">\n";


	$html .= "<div class=\"poiSearchParam floatRight\">\n";
	$html .= "<label for=\"markerColor\">Marker\&nbsp;color:</label>\n";
	$html .= "<select name=\"markerColor\" id=\"markerColor\">\n";
	foreach my $c (qw(blue green cyan red purple orange yellow white)) {
		my $sel = $c eq $markerColor ? ' selected' : '';
		$html .= "<option value=\"$c\"$sel>$c</option>\n";
	}
	$html .= "</select>\n";
	$html .= "<input type=\"button\" class=\"poiButton\" id=\"submitToMap\" value=\"Send Results to Map\" ".
				"onclick=\"greyout();document.getElementById('toMap').value=1;document.getElementById('SearchForm').submit();\">\n";
	
	$html .= "<div class=\"tooltip\"><span class=\"infoIcon\"></span><span class=\"tooltiptext tooltipLeft\">".
			"Make sure that popups are permitted for this website, otherwise your web browser may block the map from loading.</span></div>\n";
	$html .= "</div>\n";

	$html .= "<table class=\"poiSearchForm poiSearchParam\">\n";
	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"query\">Text\&nbsp;Search</label>:</td>\n";
	$html .= "<td colspan=2>\&nbsp;<input type=\"search\" maxlength=255 size=60 value=\"$textval\" name=\"query\" id=\"query\">\n";
	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"systemname\">Search nearest to star system</label>:</td>\n";
	$html .= "<td colspan=2>\&nbsp;<input type=\"search\" maxlength=255 size=60 value=\"$sysval\" name=\"systemname\" id=\"systemname\">\n";
	$html .= "</td></tr>\n";

	$html .= "<tr><td>\&nbsp;</td><td>\&nbsp;</td></tr>\n";

	my $checked = $inctemplates ? 'checked' : '';

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"inctemplates\">Include Public POIs (Beagle Point, Sgr-A*, etc)</label>:</td>".
			"<td class=\"poiSearchCell\" colspan=2 style=\"text-align:left\"><input type=\"checkbox\" name=\"inctemplates\" id=\"inctemplates\" ".
			"$checked></td></tr>\n";

	$checked = $rareOnly ? 'checked' : '';

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"rareOnly\">Limit to only entries marked as \"Rare\"</label>:</td>".
			"<td class=\"poiSearchCell\" colspan=2 style=\"text-align:left\"><input type=\"checkbox\" name=\"rareOnly\" id=\"rareOnly\" ".
			"$checked></td></tr>\n";

	$checked = $carrieronly ? 'checked' : '';

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"carrieronly\">Limit to only carrier callsign POIs</label>:</td>".
			"<td class=\"poiSearchCell\" colspan=2 style=\"text-align:left\"><input type=\"checkbox\" name=\"carrieronly\" id=\"carrieronly\" ".
			"$checked></td></tr>\n";

	$html .= "<tr><td>\&nbsp;</td><td>\&nbsp;</td></tr>\n";

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"catID\">Category</label>:</td>\n";
	$html .= "<td class=\"poiSearchSliderNum\" colspan=2>\&nbsp;<select id=\"categoryselect\" name=\"catID\">\n";
	$html .= "<option value=\"\" selected>-any-</option>\n";
	foreach my $k (sort {$lookup_category{$a} cmp $lookup_category{$b}} keys %avail_category) {
		next if (!$k);
		my $sel = $k==$catID ? ' selected' : '';
		$html .= "<option value=\"$k\"$sel>$lookup_category{$k}</option>\n";
	}
	$html .= "</span></select></td></tr>\n";

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"regionID\">Region</label>:</td>\n";
	$html .= "<td class=\"poiSearchSliderNum\" colspan=2>\&nbsp;<select id=\"regionselect\" name=\"regionID\">\n";
	$html .= "<option value=\"\" selected>-any-</option>\n";
	foreach my $k (sort {$lookup_region{$a} cmp $lookup_region{$b}} keys %lookup_region) {
		next if (!$k);
		my $sel = $k==$regionID ? ' selected' : '';
		$html .= "<option value=\"$k\"$sel>$lookup_region{$k}</option>\n";
	}
	$html .= "</select></td></tr>\n";

	$html .= "<tr><td>\&nbsp;</td><td>\&nbsp;</td></tr>\n";

	my $explorer = $aprilFools ? 'Real Explorers' : 'Explorer Rating';

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"minscore\">Minimum $explorer</label>:</td><td class=\"poiSearchSliderCell\">\n";
	$html .= "<div class=\"poiSearchSliderContainer\"><input name=\"minscore\" type=\"range\" min=\"0\" max=\"10\" value=\"$minscore\" step=\"0.25\" ".
		"class=\"poiSearchSlider\" id=\"minscoreSlider\"></td><td class=\"poiSearchSliderNum\"><span id=\"minscorevalue\">0</span></div></td></tr>\n";

	$html .= "<tr><td class=\"poiSearchCell\"><label for=\"minscuration\">Minimum $admin_SCORES Rating</label>:</td><td class=\"poiSearchSliderCell\">\n";
	$html .= "<div class=\"poiSearchSliderContainer\"><input name=\"mincuration\" type=\"range\" min=\"0\" max=\"10\" value=\"$mincuration\" step=\"0.25\" ".
		"class=\"poiSearchSlider\" id=\"mincurationSlider\"></td><td class=\"poiSearchSliderNum\"><span id=\"mincurationValue\">0</span></div></td></tr>\n";

	$html .= "<tr><td class=\"poiSearchCell\" colspan=3>\n";
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" id=\"submitbutton\" value=\"Search\" ".
				"onclick=\"greyout();document.getElementById('toMap').value=0;document.getElementById('SearchForm').submit();\">\n";
	$html .= "</td></tr>\n";
	$html .= "</table>\n";


	$html .= "<br/>\n";

	$html .= "<script>
var slider0 = document.getElementById(\"minscoreSlider\");
var out0 = document.getElementById(\"minscorevalue\");
out0.innerHTML = slider0.value; // Display the default slider value

var slider1 = document.getElementById(\"mincurationSlider\");
var out1 = document.getElementById(\"mincurationValue\");
out1.innerHTML = slider1.value; // Display the default slider value

// Update the current slider value (each time you drag the slider handle)
slider0.oninput = function() {
  out0.innerHTML = this.value;
} 
slider1.oninput = function() {
  out1.innerHTML = this.value;
} 

document.getElementById('query').addEventListener('keyup', function(event) {
  // Number 13 is the Enter key on the keyboard
  if (event.keyCode === 13) {
    // Cancel the default action, if needed
    event.preventDefault();
    // Trigger the button element with a click
    document.getElementById('submitbutton').click();
  }
});

document.getElementById('systemname').addEventListener('keyup', function(event) {
  // Number 13 is the Enter key on the keyboard
  if (event.keyCode === 13) {
    // Cancel the default action, if needed
    event.preventDefault();
    // Trigger the button element with a click
    document.getElementById('submitbutton').click();
  }
});
</script>\n";

	my $href = $systemname ? get_star_system($systemname) : undef;
	my $page_offset = $page_num * $page_size;

	my $params = {minscore=>$minscore, mincuration=>$mincuration, inctemplates=>$inctemplates};
	$$params{distancesearch} = [($$href{coord_x}+0, $$href{coord_y}+0, $$href{coord_z}+0)] if ($href && ref($href) eq 'HASH');
	$$params{textsearch} = $query if ($query);
	$$params{region} = $regionID if ($regionID);
	$$params{catID} = $catID if ($catID);
	$$params{page_size} = $page_size if ($page_size);
	$$params{page_offset} = $page_offset if ($page_size);
	$$params{rareOnly} = $rareOnly if ($rareOnly);
	$$params{carrieronly} = $carrieronly if ($carrieronly);
	$html .= "</div>\n";

	if ($entrycode eq 'new') {
		render($html,'Search');
		return;
	}

	if ($systemname && (!$href || ref($href) ne 'HASH' || !$$href{systemname})) {
		$html .= "<span class=\"largetext textred\">System name not found: \"".htmlify($systemname)."\"<br/></span>\n";
		render($html,'Search');
		return;
	}

	if ($toMap) {
		my %local = %$params;
		$local{page_size} = undef;
		$local{page_offset} = undef;
		$local{color} = $markerColor;
		my $url = searchPOI(\%local,1);
		$html .= "<script>\nwindow.open('$url');\n</script>\n";
	}

	my ($rowcount, $tablehtml) = searchPOI($params);

	$html .= "<div class=\"poiTableContainer\">\n";

	$html .= "<span class=\"floatRight\">Page size: <select id=\"pagesize\" name=\"pagesize\">";
	my $found = 0;
	foreach my $n (0,10,20,25,30,50,75,100) {
		my $sel = $n==$page_size ? ' selected' : '';
		$found++ if ($sel);
		my $show = $n ? $n : 'All results';
		$html .= "<option value=\"$n\"$sel>$show</option>";
	}
	$html .= "<option value=\"$page_size\" selected>custom: $page_size</option>" if (!$found);
	$html .= "</select><input type=\"button\" class=\"poiButton\" value=\"Refresh\" onclick=\"greyout();document.getElementById('SearchForm').submit();\"></span>\n";
	$html .= $tablehtml;
	$html .= "</div>\n";

	my $num_pages = $page_size ? floor($rowcount/$page_size) : 0;	# Really, number of pages beyond the first page.

	$page_num = 0 if (!$page_num || $page_num < 0);
	$page_num = $num_pages if ($page_num > $num_pages);

	if ($num_pages > 0) {
		$html .= "<div class=\"pagination\">\n";
		if ($page_num > 0) {
			$html .= "<a href=\"javascript:document.getElementById('pagenum').value=0;document.getElementById('SearchForm').submit();\">\&lt;\&lt;</a>";
			$html .= "<a href=\"javascript:document.getElementById('pagenum').value=".($page_num-1).";document.getElementById('SearchForm').submit();\">\&lt;</a>";
		}

		foreach my $i ($page_num-3 .. $page_num+3) {
			if ($i>=0 && $i <= $num_pages) {
				if ($i==$page_num) {
					$html .= "<a class=\"active\">".($i+1)."</a>";
				} else {
					$html .= "<a href=\"javascript:document.getElementById('pagenum').value=$i;document.getElementById('SearchForm').submit();\">".($i+1)."</a>";
				}
			}
		}

		if ($page_num < $num_pages) {
			$html .= "<a href=\"javascript:document.getElementById('pagenum').value=".($page_num+1).";document.getElementById('SearchForm').submit();\">\&gt;</a>";
			$html .= "<a href=\"javascript:document.getElementById('pagenum').value=$num_pages;document.getElementById('SearchForm').submit();\">\&gt;\&gt;</a>";
		
		}
		$html .= "</div>\n";
	}
	my $pages = $num_pages ? 'pages' : 'page';
	$html .= "<br/>(".commify($rowcount).' entries, '.commify($num_pages+1)." $pages)<br/><br/>\n";
	$html .= "</form>\n";
	$html .= iconKey();

	render($html,'Search');
}

sub searchPOI {
	my $arg    = shift;
	my $toMap  = shift;
	my $html   = '';
	my @params = ();
	my $orderfirst = '';
	my $title  = '';

	getRegions();
	getCategories();

	$$arg{minscore} = 0 if (!$$arg{minscore});
	$$arg{mincuration} = 0 if (!$$arg{mincuration});
	
	my $skiptemplates = $$arg{inctemplates} ? '' : " and poi.ownerID!=$templateID ";
	my $where = "poi.deleted is null and users.ID=ownerID $skiptemplates ";

	my $distance = '';

	if (ref($$arg{distancesearch}) eq 'ARRAY') {
		$distance = ",sqrt(pow(coord_x-?,2) + pow(coord_y-?,2) + pow(coord_z-?,2)) as distance";
		push @params, (@{$$arg{distancesearch}});
		$orderfirst = 'distance,';
		$title .= ", near(".join(', ',@{$$arg{distancesearch}}).")";
	}

	if ($$arg{minscore}) {
		$where .= "and poi.score>=? ";
		push @params, $$arg{minscore};
		$title .= ", minscore=$$arg{minscore}";
	}
	
	if ($$arg{mincuration}) {
		$where .= "and poi.cscore>=? ";
		push @params, $$arg{mincuration};
		$title .= ", mincuration=$$arg{mincuration}";
	}
	
	if ($$arg{region}) {
		$where .= "and region=? ";
		push @params, $$arg{region};
		$title .= ", $lookup_region{$$arg{region}}";
	}

	if ($$arg{catID}) {
		$where .= "and (catID=? or catID2=?) ";
		push @params, $$arg{catID};
		push @params, $$arg{catID};
		$title .= ", $lookup_category{$$arg{catID}}";
	}

	if ($$arg{owner}) {
		$where .= "and ownerID=? ";
		push @params, $$arg{ownerID};
		$title .= ", ".getUsername($$arg{ownerID});
	}

	if ($$arg{rareOnly}) {
		$where .= "and rare>0 ";
		$title .= ", rare";
	}

	if ($$arg{carrieronly}) {
		$where .= "and callsign is not null and callsign!='' ";
		$title .= ", carriers";
	}

	if ($$arg{textsearch}) {
		$where .= "and (name rlike ? or systemname rlike ? or username rlike ? or summary rlike ?) ";
		push @params, ($$arg{textsearch},$$arg{textsearch},$$arg{textsearch},$$arg{textsearch});
		$title .= ', "'.$$arg{textsearch}.'"';
	}

	if (!$sessionUserID || !isAdmin()) {
		$where .= "and approved is not null and hidden is null ";
	}

	$$arg{page_offset} = 0  if (!$$arg{page_offset});
	#$$arg{page_size}   = 20 if (!$$arg{page_size});

	$where = "where $where" if ($where);
	my $select = "from poi,users $where";

	my $countsql = "select count(*) as num $select";
	my @countparams = @params;
	if ($$arg{distancesearch}) { shift @countparams; shift @countparams;shift @countparams; }
	my $countselect = rows_mysql($db,$countsql,\@countparams);

	my $order = '';
	if (defined($$arg{page_offset}) && $$arg{page_size}) {
		push @params, ($$arg{page_offset},$$arg{page_size});
		$order = " limit ?,?";
	}

	my $sql = "select poi.*,users.username$distance $select order by ${orderfirst}poi.name $order";

	my $rows = {};
	my $totalrows = 0;

	if (ref($countselect) eq 'ARRAY' && @$countselect) {
		$totalrows = ${$$countselect[0]}{num};
	}

	eval {
		$rows = rows_mysql($db,$sql,\@params);
	};
	if ($@) {
		$html .= "SQL ERROR: $@<br/><br/>\n$sql<br/>[\"".join('","',@params)."\"]<br/>\n";
	}

	my $url = '';
	if ($toMap) {
		$url = send_to_map($rows,$$arg{color});
	}

	$title =~ s/^[\s,]+//g;
	$title = "($title)" if ($title);
	$title = "Search results: $title";
	$html .= tablePOI(htmlify($title),$rows,undef,undef,($$arg{distancesearch} ? 1 : 0),$$arg{page_offset}) if (ref($rows) eq 'ARRAY');
	#$html .= "<br/>\n[$$arg{inctemplates}] $sql<br/>[\"".join('","',@params)."\"]<br/>\n" if ($DEV); # && isAdmin());

	return $totalrows,$html,$url;
}

sub send_to_map {
	my $rows  = shift;
	my $color = shift;
	my %hash  = ();
	my @list  = ();
	
	if (ref($rows) eq 'ARRAY' && @$rows) {
		foreach my $r (@$rows) {
			my %pin = (pin=>$color, x=>$$r{coord_x}, y=>$$r{coord_y}, z=>$$r{coord_z});

			$pin{text} = "$$r{name}\n$$r{systemname}\n$$r{summary}\n(<a href=\"$relativeURL/view/$$r{ID}\">View POI</a>)";

			push @list, \%pin;
		}
	}

	my $fn = "pins".time.'x'.sprintf("%08u",$$).".json";

	$hash{markers} = \@list;
	open TXT, ">$mapsearchPath/$fn";
	print TXT JSON->new->utf8->encode(\%hash);
	close TXT;

	return 'https://edastro.com/galmap/?layer=regions&custom=/galmap/search/'.$fn;
}

##########################################################################

sub verifyemail {
	my $userID = shift;
	my $sort = shift;

	if (!$sessionUserID || !isAdmin()) {
		render_error('Not authorized.');
	}

	my %user = getUserData($userID);

	if ($userID && !$user{verified}) {
		
		db_mysql($db,"update users set verified=1 where ID=?",[($userID)]);
		alertDiscord('Manually verified/activated: '.$user{username}.' ['.$userID.']');
	}

	redirect("$scriptURL/roster/$sort");
}

sub toggle_ban {
	my $userID = shift;
	my $sort = shift;
	my $page_num = shift;
	my $page_size = shift;

	if (!$sessionUserID || !isAdmin()) {
		render_error('Not authorized.');
	}

	my %user = getUserData($userID);

	if ($userID && $user{username} && $userID!=$sessionUserID) {

		if ($user{banned}) {
			db_mysql($db,"update users set banned=null where ID=?",[($userID)]);
			alertDiscord('UN-BANNED: '.getUsername($userID).' ['.$userID.']');
		} else {
			db_mysql($db,"update users set banned=now() where ID=?",[($userID)]);
			alertDiscord('BANNED: '.getUsername($userID).' ['.$userID.']');
		}
	}
	redirect("$scriptURL/roster/$sort/$page_num/$page_size");
}

sub togglebeta {
	my $userID = shift;
	my $sort = shift;
	my $page_num = shift;
	my $page_size = shift;

	if (!$sessionUserID || !isAdmin()) {
		render_error('Not authorized.');
	}

	db_mysql($db,"update users set betatester=1-betatester where ID=?",[($userID)]);
	redirect("$scriptURL/roster/$sort/$page_num/$page_size");
}

sub ban_user {
	my $action = shift;
	my $userID = shift;

	render_error('Not authorized') if (!$sessionUserID || !isAdmin()); # LEVEL 2

	if ($action eq 'unban') {
		db_mysql($db,"update users set banned=null where ID=?",[($userID)]);
		alertDiscord('UN-BANNED: '.getUsername($userID).' ['.$userID.']');
	} elsif ($action eq 'ban') {
		db_mysql($db,"update users set banned=now() where ID=?",[($userID)]);
		alertDiscord('BANNED: '.getUsername($userID).' ['.$userID.']');
	}

	redirect("$scriptURL/profile/$userID");
}

sub get_edsmValue {
	my $poiID = shift;

	my %poi = getPOIdata($poiID);
	my $url = 'https://www.edsm.net/api-system-v1/estimated-value?systemName='.$poi{systemname};

	my $req = HTTP::Request->new( 'GET', $url );
	my $lwp = LWP::UserAgent->new;
	my $response = $lwp->request( $req );

	if ( $response->is_success() ) {
		eval {
			my $href = JSON->new->decode($response->decoded_content);

			if ($href && ref($href) eq 'HASH' && $$href{estimatedValue}) {
				db_mysql($db,"update poi set estimatedValue=?,estimatedValueMapped=?,estimatedValueDate=now() where ID=?",
					[($$href{estimatedValue}+0,$$href{estimatedValueMapped}+0,$poiID)]);

				return {estimatedValue=>$$href{estimatedValue}+0, estimatedValueMapped=>$$href{estimatedValueMapped}+0};
			}
		};
	} else {
		info("GET-edsmID ERROR [$poiID]: " . $response->status_line().' - '.$response->decoded_content);
	}
	return {};
}

sub get_edsmID {
	my $poiID = shift;

	my %poi = getPOIdata($poiID);
	my $url = 'https://www.edsm.net/api-v1/system?showId=1&systemName='.$poi{systemname};

	my $edsmID = 0;

	my $req = HTTP::Request->new( 'GET', $url );
	my $lwp = LWP::UserAgent->new;
	my $response = $lwp->request( $req );

	if ( $response->is_success() ) {
		eval {
			my $href = JSON->new->decode($response->decoded_content);
			$edsmID = $$href{id};
		};
		info("GET-edsmID failed, no ID") if (!$edsmID);
	} else {
		info("GET-edsmID ERROR [$poiID]: " . $response->status_line().' - '.$response->decoded_content);
	}

	if ($edsmID && $edsmID>0) {
		db_mysql($db,"update poi set edsm_id=? where ID=?",[($edsmID,$poiID)]);
	}

	redirect("$scriptURL/view/$poiID");
}

sub toggle_rare {
	my $poiID = shift;

	if (!$sessionUserID || !isAdmin()) {
		render_error('Not authorized.');
	}

	db_mysql($db,"update poi set rare=1-rare where ID=?",[($poiID)]);
	
	redirect("$scriptURL/view/$poiID");
}

sub change_detail {
	my ($what, $id, $new) = @_;
	my $html = '';

	my %poi = getPOIdata($id);
	my $poiName = $poi{name};

	if (!$id || !$poiName || !$poi{ID}) {
		render_error('POI not found.');
	}

	if (!$sessionUserID || (!isAdmin() && $sessionUserID!=$poi{ownerID})) {
		render_error('Not authorized.');
	}

	if ($what eq 'category') {
		getCategories();

		if (!$new) {
			my $cat = getPOIcategory($id);
			$html .= "<div class=\"textleft\"><p><form><label for=\"catchange\">New category for <b><i>$poiName:</i></b></label>\n";
			$html .= "<select id=\"catchange\" name=\"catchange\" onchange=\"greyout();location.href='$relativeURL/change/category/$id/'+this.value;\">\n";
			foreach my $k (sort {$lookup_category{$a} cmp $lookup_category{$b}} keys %avail_category) {
				my $sel = '';
				$sel = ' selected' if ($cat == $k);
				next if (!$sel && $category_restricted{$k} && !isAdmin());
				$html .= "<option value=\"$k\"$sel>$lookup_category{$k}</option>\n";
			}
			$html .= "</select></form></p></div>\n";
			render($html,'Change POI Category');
			exit;
		} else {
			db_mysql($db,"update poi set catID=? where ID=?",[($new,$id)]);
			record_editlog($id);
			alertDiscord('CHANGED CATEGORY: '.getPOIname($id).' - '.$lookup_category{$new}, $id);
			redirect("$scriptURL/view/$id");
		}

	} elsif ($what eq 'owner') {
		my $confirm = $q->param('confirm');
		$new = btrim($q->param('owner'));
		my $userID = getUserID($new);

		if (!$new || !$confirm || lc(btrim($confirm)) ne 'transfer' || !$userID) {

			my $error = '';

			$error = 'Username required' if (!$new && $confirm);
			if ($new) {
				$error = 'Confirmation required' if (!$confirm || lc(btrim($confirm)) ne 'transfer');
				$error = 'Username not found' if (!$userID);
			}

			$html .= "<div class=\"textleft\">\n";
			$html .= "<p class=\"textleft\"><span class=\"textred\">$error</span></p>\n" if ($error);
			$html .= "<p>Transfer control of POI: <b><i>$poiName</i></b></p>\n";
			$html .= "<p><form onsubmit=\"greyout();\" action=\"$relativeURL/change/owner/$id\" method=\"GET\">\n";
			$html .= "<label for=\"owner\" class=\"normaltext\">Enter username:</label><br/>\n";
			$html .= "<input type=\"text\" id=\"ownerchange\" name=\"owner\" maxlength=32 size=32 value=\"".htmlify($new)."\" required><br/><br/>";
			$html .= "<label for=\"confirm\" class=\"mediumtext\">Type \"TRANSFER\" below to confirm:</label><br/>\n";
			$html .= "<input type=\"text\" id=\"confirm\" name=\"confirm\" maxlength=32 size=32 value=\"".htmlify($confirm)."\" required><br/><br/>";
			$html .= "<input type=\"submit\" class=\"poiButton\" value=\"Transfer POI\">\n";
			$html .= "</form></p></div>\n";
			render($html,'Change POI Owner');
			exit;
			
		} else {
			db_mysql($db,"update poi set ownerID=? where ID=?",[($userID,$id)]);
			record_editlog($id);
			alertDiscord('Transferred ownership: '.getPOIname($id).' to '.getUsername($userID), $id);
			redirect("$scriptURL/view/$id");
		}
	} elsif ($what eq 'system') {
		my $confirm = $q->param('confirm');
		$new  = btrim($q->param('system'));

		my $href = $new ? get_star_system($new) : undef;
	
		if (!$new || !$confirm || lc(btrim($confirm)) ne 'move' || !$href || ref($href) ne 'HASH' || !$$href{systemname} || !$$href{id64}) {

			my $error = '';

			$error = 'Confirmation required' if (!$confirm || lc(btrim($confirm)) ne 'move');
			$error = 'System name required' if (!$new);

			$error = 'System not found' if (!$error && (!$href || ref($href) ne 'HASH' || !$$href{systemname} || !$$href{id64}));

			$html .= "<div class=\"textleft\">\n";
			$html .= "<p class=\"textleft\"><span class=\"textred\">$error</span></p>\n" if ($error);
			$html .= "<p>Change location of POI: <b><i>$poiName</i></b></p>\n";
			$html .= "<p><form onsubmit=\"greyout();\" action=\"$relativeURL/change/system/$id\" method=\"GET\">\n";
			$html .= "<label for=\"system\" class=\"normaltext\">Enter new system name:</label><br/>\n";
			$html .= "<input type=\"text\" id=\"systemChange\" name=\"system\" maxlength=32 size=32 value=\"".htmlify($new)."\" required><br/><br/>";
			$html .= "<label for=\"confirm\" class=\"mediumtext\">Type \"MOVE\" below to confirm:</label><br/>\n";
			$html .= "<input type=\"text\" id=\"confirm\" name=\"confirm\" maxlength=32 size=32 value=\"".htmlify($confirm)."\" required><br/><br/>";
			$html .= "<input type=\"submit\" class=\"poiButton\" value=\"Move POI\">\n";
			$html .= "</form></p></div>\n";
			render($html,'Change POI System');
			exit;
		} else {
			db_mysql($db,"update poi set systemname=?,id64=?,region=?,coord_x=?,coord_y=?,coord_z=?,edsm_id=? where ID=?",
					[($$href{systemname},$$href{id64},$$href{region},$$href{coord_x},$$href{coord_y},$$href{coord_z},$$href{edsm_id},$id)]);

			record_editlog($id);
			alertDiscord('POI Moved: '.getPOIname($id)." to $new ($$href{id64})", $id);
			redirect("$scriptURL/view/$id");
		}
	}
}

sub approve {
	my $action = shift;
	my $poiID = shift;

	if (!$poiID || $poiID =~ /[^\d]/) {

		render_error('Invalid POI ID');

	} elsif ($sessionUserID && isAdmin()) {

		if (!$action) {

			db_mysql($db,"update poi set approved=NOW() where ID=? and approved is null",[($poiID)]);
			alertDiscord('APPROVED: '.getPOIname($poiID), $poiID, {'approval'=>1});
			pushDiscord($poiID,'Newly approved POI',undef,1,0,1);
	
			clearCache("$cachePath/Recently_added_POIs");
			clearCache("$cachePath/Unrated_and_few-vote_POIs_needing_votes");
	
			redirect($scriptURL.'/view/'.$poiID);

		} elsif ($action eq 'abort') {

			db_mysql($db,"update poi set requestapprove=null where ID=? and requestapprove is not null",[($poiID)]);
			alertDiscord('Approval request ABORTED: '.getPOIname($poiID), $poiID, {'approval'=>1});
			redirect($scriptURL.'/view/'.$poiID);

		} elsif ($action eq 'request') {

			db_mysql($db,"update poi set requestapprove=now() where ID=? and requestapprove is null",[($poiID)]);
			alertDiscord('Approval requested: '.getPOIname($poiID), $poiID, {'approval'=>1});
			redirect($scriptURL.'/view/'.$poiID);

		} else {

			render_error('Invalid request');

		}
	} else {

		render_error('Not authorized');
	}
}

sub do_hide {
	my $action = shift;
	my $poiID = shift;

	if (!$poiID || $poiID =~ /[^\d]/) {
		render_error('Invalid POI ID');
	} elsif ($sessionUserID && isAdmin()) {
		if ($action eq 'hide') {
			db_mysql($db,"update poi set hidden=NOW() where ID=? and hidden is null",[($poiID)]);
			alertDiscord('HIDDEN: '.getPOIname($poiID), $poiID);
			my $ownerID = getOwnerID($poiID);
			emailNotice($ownerID,$poiID,'hidden','having issues that need to be addressed');
		} else {
			db_mysql($db,"update poi set hidden=null where ID=? and hidden is not null",[($poiID)]);
			alertDiscord('UNHIDDEN: '.getPOIname($poiID), $poiID);
		}
		redirect($scriptURL.'/view/'.$poiID);
	} else {
		render_error('Not authorized');
	}
}

sub do_delete {
	my $action = shift;
	my $poiID = shift;
	my $confirm = $q->param('confirmDELETE');

	my $ownerID = getOwner($poiID);
	my $poiName = getPOIname($poiID);

	if (!$sessionUserID || !isAdmin()) {
		render_error('Not authorized.');
	}

	if ($action =~ /^(un?)delete$/ && (!$sessionUserID || !isAdmin())) { # LEVEL 2
		render_error('Not authorized.');
	}

	if (!$ownerID || !$poiName) {
		render_error('Not found.');
	}

	my %params = getPOIdata($poiID);

	if ($action !~ /^(request|abort|un)?delete/) {
		render_error('Invalid request.');
	}

	if ($action =~ /^(abort)?delete$/ && !$params{requestdelete}) {
	
		render_error('POI must have a deletion request first.');

	} elsif ($action eq 'requestdelete' && $params{requestdelete}) {

		render_error('POI is already pending deletion.');

	} elsif ($action eq 'abortdelete' && !$params{requestdelete}) {

		render_error('POI is not pending deletion.');

	} elsif ($action eq 'undelete' && !$params{deleted}) {

		render_error('POI is not deleted.');

	} elsif ($action =~ /^(request)?delete$/ && $params{deleted}) {

		render_error('POI is already deleted.');

	}

	if ($action eq 'abortdelete' && $confirm =~ /^\s*abort\s*/i) {

			db_mysql($db,"update poi set requestdelete=null where ID=?",[($poiID)]);
			alertDiscord('DELETION ABORTED: '.getPOIname($poiID).' ('.getUsername(getOwner($poiID)).')', $poiID, {'deletion'=>1});
			emailNotice($params{ownerID},$poiID,'removed from pending deletion','an opportunity to continue');
			render_info('Deletion Aborted');

	} elsif ($action eq 'undelete' && $confirm =~ /^\s*restore\s*/i) {

			db_mysql($db,"update poi set deleted=null where ID=?",[($poiID)]);
			alertDiscord('Un-deletion RESTORED: '.getPOIname($poiID).' ('.getUsername(getOwner($poiID)).')', $poiID, {'deletion'=>1});
			emailNotice($params{ownerID},$poiID,'restored from deletion','an opportunity to continue');
			render_info('Restored from Deletion');

	} elsif ($confirm =~ /^\s*delete\s*/i) {
		# delete

		if ($action eq 'delete') {
			db_mysql($db,"update poi set deleted=NOW() where ID=?",[($poiID)]);
			alertDiscord('DELETED: '.getPOIname($poiID).' ('.getUsername(getOwner($poiID)).')', $poiID, {'deletion'=>1});
			emailNotice($params{ownerID},$poiID,'deleted','having uncorrected issues');
			render_info('Deletion Completed');
		} else {
			db_mysql($db,"update poi set requestdelete=NOW() where ID=?",[($poiID)]);
			alertDiscord('REQUESTED DELETE: '.getPOIname($poiID).' ('.getUsername(getOwner($poiID)).')', $poiID, {'deletion'=>1});
			emailNotice($params{ownerID},$poiID,'marked for deletion','having uncorrected issues');
			render_info('Deletion Requested');
		}

	} else {
		my $html = '';

		my $do = $action eq 'delete' ? 'DELETE' : 'Request Deletion for';
		$do = 'Abort Deletion for' if ($action eq 'abortdelete');
		$do = 'Restore (un-delete)' if ($action eq 'undelete');

		my $code = 'DELETE';
		$code = 'ABORT' if ($action =~ /abort/);
		$code = 'RESTORE' if ($action =~ /undelete/);

		$html .= "<div class=\"textleft\"><p><form onsubmit=\"greyout();\" action=\"$relativeURL/$action/$poiID\" method=\"GET\" accept-charset=\"utf-8\">\n";
		$html .= "<label for=\"confirmDELETE\">$do <b><i>$poiName?</i></b> Type \&quot;$code\&quot; to confirm.</label><br/><br/>\n";
		#$html .= "Typed: $confirm<br/>\n";
		$html .= "<input type=\"text\" id=\"confirmDELETE\" name=\"confirmDELETE\" size=10 maxlength=10 value=\"".htmlify($confirm)."\">\n";
		my $text = 'Delete this POI';
		$text = 'Abort deletion' if ($action eq 'abortdelete');
		$text = 'Restore POI' if ($action eq 'undelete');
		$html .= "<input class=\"poiButton\" type=\"submit\" value=\"$text\">\n";
		$html .= "</form></p></div>\n";

		render($html,'Delete POI');
		exit;
	}
	render_info('Nothing done.');
}


sub post_message {
	my $poiID = shift;

	if (!$sessionUserID && (!$allow_commenting && !isAdmin())) {
		render_error('Not authorized.');
	}

	my $message    = $q->param('message');
	my $reason     = $q->param('reason');
	my $visibility = $q->param('visibility');

	my $ownerID = getOwner($poiID);
	my $poiName = getPOIname($poiID);
	my %params  = getPOIdata($poiID);

	if ($reason && $message && length($message) >= 10 && length($message) <= 1000) {

		# Save it

		my $id = db_mysql($db,"insert into msgs (authorID,poiID,created,reason,message,visibility) values (?,?,now(),?,?,?)",
				[($sessionUserID,$poiID,$reason,$message,$visibility)]);

		#alertDiscord('COMMENTED: '.$poiName.' ('.getUsername($ownerID).') - '.$reason, $poiID);
		commentDiscord($id);
		emailMessage('post','msgs',$id,$sessionUserID);

		redirect("$scriptURL/view/$poiID");

	} else {

		my $html = "";

		$html .= "<div class=\"poiFeedback\">\n";
		$html .= "<p><span class=\"textred\">Message must be between 10 and 1000 characters in length.</span></p>\n" if ($message && (length($message)<10 || length($message) > 1000));
		$html .= "<p><span class=\"textred\">Must select a message reason.</span></p>\n" if (!$reason);
		$html .= "<form onsubmit=\"greyout();\" action=\"$scriptURL/msg/$poiID\" method=\"POST\" accept-charset=\"utf-8\">\n";
		$html .= "<input type=\"hidden\" name=\"r\" value=\"msg/$poiID\">\n";

		$html .= "<p><span class=\"textgreen bigText\">Commenting on <b>".htmlify($poiName)."</b></span></p><p>Please write a brief message\n";
		$html .= "and <i>carefully</i> select both the reason category and the visibility settings.</p>\n";
		$html .= "<table>\n";

		$html .= "<tr><td align=\"right\"><label for=\"reason\">Reason</label>:</td><td><select name=\"reason\"><option value=\"\">-select-</option>\n";
		foreach my $s (sort (
				'Suggestion',
				'Question',
				'Comment',
				'Feedback',
				'Not enough detail',
				'Inappropriate content',
				'Off topic',
				'Contains errors',
				'Category change',
				'Praise',
				'Information',
				'Pending deletion',
				'POI hidden',
				'POI restored',
				)) {
			my $selected = ($s eq $reason) ? ' selected' : '';
			$html .= "<option value=\"$s\"$selected>$s</option>\n";
		}
		$html .= "</select></td></tr>\n";

		$html .= "<tr><td align=\"right\"><label for=\"vsibility\">Visibility</label>:</td><td><select name=\"visibility\">\n";
		my $i = 0;
		foreach my $s (	# Authorship visibility
				'POI Submitter, and '.$admin_TITLES.' (and yourself)',
				$admin_TITLES.' only (and yourself)',
				'Fully Public (everyone)'
				) {
			$html .= "<option value=\"$i\">$s</option>\n";
			$i++;
		}
		$html .= "</select></td></tr>\n";

		my $max = 1000;

		$html .= "<tr><td colspan=2><br/><textarea cols=80 rows=8 maxlength=$max name=\"message\" id=\"message\">".htmlify($message)."</textarea><br/>\n";
		$html .= "<span class=\"lefttext\"><span id=\"messagecount\">0</span><span id=\"messagemaximum\"> / $max</span><br/></span>\n";
		$html .= "<div class=\"floatRight\"><input id=\"buttonsubmit\" class=\"poiButton\" type=\"submit\" value=\"Submit comment\">";
		$html .= "</div></td></tr>\n";

		$html .= "</table>\n";
		$html .= "</form>\n";
		$html .= "</div>\n";

		$html .= "<script type=\"text/javascript\">
document.getElementById('message').onkeyup = function () {
  document.getElementById('messagecount').innerHTML = this.value.length;
};
document.getElementById('messagecount').innerHTML = document.getElementById('message').value.length;
</script>\n";

		render($html,'Post POI Message');
		exit;
	}
}

sub hide_msg {
	my $action = shift;
	my $msgID = shift;
	my $r = {};

	if (!$sessionUserID || !isAdmin()) {
		inline_error('Not authorized.');
	}

	my @rows = db_mysql($db,"select poiID,hidden from msgs where ID=? and deleted is null",[($msgID)]);
	if (@rows) {
		$r = shift @rows;
	} else {
		inline_error('Message not found.');
	}

	if ($action eq 'unhidemsg') {
		db_mysql($db,"update msgs set hidden=null where ID=?",[($msgID)]);
		commentDiscord($msgID,'Un-hid');
	} else {
		db_mysql($db,"update msgs set hidden=now() where ID=?",[($msgID)]);
		commentDiscord($msgID,'Hid');
	}

	#redirect("$scriptURL/view/$$r{poiID}");
	get_msgs($$r{poiID});
}

sub report {
	my $action = shift;
	my $poiID = shift;

	my $message = $q->param('message');

	my $ownerID = getOwner($poiID);
	my $poiName = getPOIname($poiID);

	if (!$sessionUserID || ($action eq 'unreport' && !isAdmin())) {
		render_error('Not authorized.');
	}

	if (!$ownerID || !$poiName) {
		render_error('Not found.');
	}

	my %params = getPOIdata($poiID);

	if ($action !~ /^(un)?report/) {
		render_error('Invalid request.');
	}

	if ($action eq 'unreport' && !$params{reported}) {
	
		render_error('POI is not on report.');

	} elsif ($action eq 'report' && $params{reported}) {

		render_error('POI is already on report.');

	}

	if ($action eq 'unreport') {

		if ($sessionUserID && isAdmin()) {
			db_mysql($db,"update poi set reported=null where ID=?",[($poiID)]);
			alertDiscord('UN-REPORTED: '.$poiName.' ('.getUsername($ownerID).')', $poiID, {'reported'=>1});
			redirect("$scriptURL/view/$poiID");
		}

	} elsif ($action eq 'report') {

		if ($message && length($message) > 20 and length($message) <= 1000) {

			# Save it

			db_mysql($db,"insert into msgs (authorID,poiID,created,reason,message) values (?,?,now(),?,?)",
					[($sessionUserID,$poiID,'POI Reported',$message)]);

			db_mysql($db,"update poi set reported=now() where ID=?",[($poiID)]);

			alertDiscord('REPORTED: '.$poiName.' ('.getUsername($ownerID).')', $poiID, {'reported'=>1});

			render_error("Report saved. <a href=\"$scriptURL/view/$poiID\">Click here to return to ".htmlify($poiName)."</a>");

		} else {

			my $html = "";

			$html .= "<div class=\"poiFeedback poiFeedbackRed\">\n";
			$html .= "<p><span class=\"textred\">Message must be between 20 and 1000 characters in length.</span></p>\n" if ($message);
			$html .= "<form onsubmit=\"greyout();\" action=\"$scriptURL/$action/$poiID\" method=\"GET\" accept-charset=\"utf-8\">\n";

			$html .= "<p><span class=\"textyellow bigText\">Reporting <b>".htmlify($poiName)."</b></span></p><p>Please write a brief description\n";
			$html .= "of why you would like to place this POI on report. Be brief, but include enough detail for the $admin_titles\n";
			$html .= "to understand what the problem is.</p><p>This message will be viewable by you and $admin_people only.</p>\n";
			$html .= "<textarea cols=80 rows=8 maxlength=1000 name=\"message\">".htmlify($message)."</textarea><br/><br/>\n";
			$html .= "<div class=\"floatRight\"><input id=\"buttonsubmit\" class=\"poiButton\" type=\"submit\" value=\"Report POI\"></div>\n";

			$html .= "</form>\n";
			$html .= "</div>\n";

			render($html,'Report POI');
			exit;
		}

	} else {
		render_error('Invalid request.');
	}
}

sub file_html {
	my $html = print_html(@_);

	$html =~ s/curators/$admin_titles/gs;
	$html =~ s/curator/$admin_title/gs;
	$html =~ s/curation/$admin_scores/gs;
	$html =~ s/Curators/$admin_TITLES/gs;
	$html =~ s/Curator/$admin_TITLE/gs;
	$html =~ s/Curation/$admin_SCORES/gs;

	return $html;
}

sub broken {
	my $html = "<div class=\"textLeft\">\n";
	$html .= print_html('/www/edastro.com/catalog/broken-images.html','',1)."\n</div>\n";

	render($html,'Broken Image Links');
}

sub changelog {
	my $html = "<div class=\"textLeft\">\n";
	$html .= my_markdown(print_html('/www/edastro.com/catalog/changelog.txt','',1))."\n</div>\n";

	render($html,'Change Log');
}

sub scoring {
	render(file_html('/www/edastro.com/catalog/scoring-info.html','',1),'Scoring Info');
}

sub APIinfo {
	render(file_html('/www/edastro.com/catalog/api-info.html','',1),'API Info');
}

sub rules {
	render(file_html('/www/edastro.com/catalog/tos.html','',1).file_html('/www/edastro.com/catalog/rules.html','',1),'Rules + Guidelines');
}

sub tutorial {
	render(file_html('/www/edastro.com/catalog/tutorial.html','',1),'Submission Tutorial');
}

sub show_tos {
	render(file_html('/www/edastro.com/catalog/tos.html','',1),'Terms of Service');
}

sub reformat_markdownHTML {
	my $poiID = shift;
	my $cron  = shift;

	if (!$poiID || $poiID =~ /[^\d]/) {
		$cron ? print "Invalid POI ID\n" : render_error('Invalid POI ID');
	} elsif ($cron || ($sessionUserID && isAdmin())) {
		my @rows = db_mysql($db,"select description from poidata where poiID=?",[($poiID)]);
		if (@rows) {
			my $html = my_markdown(${$rows[0]}{description});
			db_mysql($db,"update poidata set descriptionHTML=? where poiID=?",[($html,$poiID)]);
		}
		redirect($scriptURL.'/view/'.$poiID) if (!$cron);
	} else {
		render_error('Not authorized');
	}
}

sub reformat_markdownHTML_all {
	my @pois = db_mysql($db,"select ID,name from poi where deleted is null order by ID");

	foreach my $r (@pois) {
		print "[$$r{ID}] $$r{name}\n";
		reformat_markdownHTML($$r{ID},'force');
	}
}

##########################################################################

sub show_system {
	my @req = @_;
	my $systemname = shift @req;

	if (!$systemname) {
		render_error("Invalid system name");
	}

	my $count = countPOIs($systemname);

	if (!$count) {
		render_error("No POIs found");
	}

	my $rows = listPOI(0,$systemname,0,0,'score','desc',0,undef);
	my $html = tablePOI('cache',"POIs located in <b>".htmlify($systemname)."</b>",$rows);

	render($html, "POIs in $systemname");
}

sub show_category {
	my @req = @_;
	my $catID = shift @req;

	if ($catID !~ /^\d+$/) {
		$catID = getCategoryID($catID);
	}

	if (!defined($catID) || $catID !~ /^\d+$/) {
		render_error("Invalid category ID");
	}

	my $count = countCategoryPOI($catID);

	if (!$count) {
		render_error("No POIs found");
	}

#	my $rows = listPOI(0,'',$catID,0,'score','desc',0,undef);
#	my $html = tablePOI('cache',"POIs categorized as <b>".categoryName($catID)."</b>",$rows);
#
#	$html .= iconKey();
#
#	render($html, "POIs in category: ".categoryName($catID));

	redirect("$scriptURL/search?catID=$catID");
}

sub show_region {
	my @req = @_;
	my $regionID = shift @req;

	if (!defined($regionID) || $regionID !~ /^\d+$/) {
		render_error("Invalid region ID");
	}

	my $count = countRegionPOI($regionID);

	if (!$count) {
		render_error("No POIs found");
	}

#	my $rows = listPOI(0,'',0,$regionID,'score','desc',0,undef);
#	my $html = tablePOI('cache',"POIs located in <b>".regionName($regionID)."</b>",$rows);
#
#	$html .= iconKey();
#
#	render($html,"POIs in ".regionName($regionID));

	redirect("$scriptURL/search?regionID=$regionID");
}

sub show_all {
	my $order = shift;
	my $html = '';
	my $rows = undef;

	if (!$order || $order eq 'name') {

		$rows = listPOI(0,'',0,0,'name','asc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by name",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(rating|score)$/) {

		$rows = listPOI(0,'',0,0,'score','desc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by rating",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(curation)$/) {

		$rows = listPOI(0,'',0,0,'cscore','desc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by $admin_scores rating",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(system)$/) {

		$rows = listPOI(0,'',0,0,'systemname','asc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by star system",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(region)$/) {

		$rows = listPOI(0,'',0,0,'regionname','asc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by region",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(commander|owner|submitter)$/) {

		$rows = listPOI(0,'',0,0,'username','asc',0,undef,undef,undef,undef,0);
		$html = tablePOI('cache',"All POIs, ordered by commander",$rows);

	} elsif ($order =~ /^(edited)$/) {

		$rows = listPOI(0,'',0,0,'edited','desc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by last edit",$rows,undef,undef,undef,0);

	} elsif ($order =~ /^(created)$/) {

		$rows = listPOI(0,'',0,0,'created','desc',0,undef);
		$html = tablePOI('cache',"All POIs, ordered by creation date",$rows,undef,undef,undef,0);

	} else {
		render_error('Invalid list type');
	}

	$html .= "<p><center>".commify(int(@$rows))." entries listed.</center></p>\n" if ($rows);

	$html .= iconKey();

	render($html,'All POIs');
}

sub show_deleted {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'deleted','desc',0,undef,'deleted is not null');
	my $html = tablePOI("Deleted",$rows,undef,undef,undef,undef,1);

	render($html,'Deleted POIs');
}

sub show_pendingdeletion {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'requestdelete','desc',0,undef,'requestdelete is not null');
	my $html = tablePOI("Pending Deletion",$rows,undef,undef,undef,undef,1);

	render($html,'POIs pending deletion');
}

sub show_hidden {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'hidden','desc',0,undef,'hidden is not null');
	my $html = tablePOI("Hidden POIs",$rows,undef,undef,undef,undef,1);

	render($html,'Hidden POIs');
}

sub show_reported {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'reported','desc',0,undef,'reported is not null');
	my $html = tablePOI("Reported POIs",$rows,undef,undef,undef,undef,1);

	render($html,'Reported POIs');
}

sub show_unapproved {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'created','',0,undef,'approved is null');
	my $html = tablePOI("Unapproved POIs",$rows,undef,undef,undef,undef,1);

	render($html,'Unapproved POIs');
}

sub disagreement {
	my @req = @_;
	render_error('Not authorized.') if (!$sessionUserID || !isAdmin());

	my $rows = listPOI(0,'',0,0,'abs(score-cscore)','desc',20,undef,undef);
	my $html = tablePOI("POIs with the most Rating Disagreement (highest discrepancy first)",$rows,undef,undef,undef,undef,undef,1);

	render($html,'POIs with Rating Disagreement');
}

##########################################################################

sub listPOI {
	my ($userID,$systemname,$catID,$regionID,$sortby,$sortdir,$limit,$mode,$customAND,$customGET) = @_;

	return getPOIs({userID=>$userID, systemname=>$systemname, catID=>$catID, regionID=>$regionID, sortby=>$sortby, sortdir=>$sortdir, 
			limit=>$limit, mode=>$mode, customAND=>$customAND, customGET=>$customGET});
}

#$html .= tablePOI('Recently added POIs:',getPOIs({sortby=>'approved desc,created desc',limit=>10,excludetemplates=>1}),'100%')."<p/>\n";

sub getPOIs {
	#my ($userID,$systemname,$catID,$regionID,$sortby,$sortdir,$limit,$mode,$customAND,$customGET) = @_;
	my $p = shift;

	my @params = ();
	my $sql = "select poi.*,regionname,username from poi,regions,users where regions.id=region and ownerID=users.ID and ";

	$$p{customGET} = ",$$p{customGET}" if ($$p{customGET});

	if ($$p{excludevoted}) {

		$sql = "select poi.*,regionname,username from regions,users,poi left join votes on poiID=poi.ID and voterID=? where votes.poiID is null and regions.id=region and ownerID=users.ID and ";
		push @params, $sessionUserID;

	} elsif ($$p{mode} eq 'editedAfterVote') {
		if ($sessionUserID) {
			$sql = "select poi.*,regionname,username,votes.score$$p{customGET} from poi,regions,users,votes where regions.id=region and ".
				"ownerID=users.ID and votes.poiID=poi.ID and edited is not null and edited>votes.updated and voterID=? and poi.ownerID!=voterID and ";
			push @params, $sessionUserID;
		} else {
			return [()];
		}
	} elsif ($$p{mode} =~ /fav:(\d+)/) {
		push @params, $1;
		$sql = "select poi.*,regionname,username$$p{customGET} from poi,regions,users,favs where regions.id=region and ".
			"poi.ownerID=users.ID and favs.poiID=poi.ID and favs.ownerID=? and ";
	}

	if (!$sessionUserID || !isAdmin() || $$p{excludeunapproved}) {
		if (!$sessionUserID) {
			$sql .= "approved is not null and ";
		} elsif ($sessionUserID =~ /^\d+$/) {
			$sql .= "(approved is not null or poi.ownerID=?) and ";
			push @params, $sessionUserID;
		}
	}

	if ($sessionUserID && $$p{excludeown}) {
		$sql .= "poi.ownerID!=? and ";
		push @params, $sessionUserID;
	}

	if ($$p{excludetemplates}) {
		$sql .= "poi.ownerID!=$templateID and ";
	}

	if ($$p{customAND}) {
		$sql .= "$$p{customAND} ";
		$sql .= "and " if ($sql !~ /\s+and\s*$/);
	}

	if ($$p{userID}) {
		$sql .= "poi.ownerID=? and ";
		push @params, $$p{userID};
	}

	if ($$p{catID}) {
		$sql .= "catID=? and ";
		push @params, $$p{catID};
	}

	if ($$p{systemname}) {
		$sql .= "systemname=? and ";
		push @params, $$p{systemname};
	}

	if ($$p{regionID}) {
		$sql .= "region=? and ";
		push @params, $$p{regionID};
	}

	$sql .= "deleted is null " if ($$p{customAND} !~ /deleted is not null/ && $$p{sortby} ne 'delete');

	$sql =~ s/\s+and\s+$/ /s;

	if (!$sessionUserID || !isAdmin()) {
		if ($sessionUserID) {
			$sql .= "and (hidden is null or poi.ownerID=?) ";
			push @params, $sessionUserID;
			
		} else {
			$sql .= "and hidden is null ";
		}
	}

	if ($$p{sortby}) {
		$sql .= "order by $$p{sortby} ";
		$sql .= "$$p{sortdir}" if ($$p{sortdir});

		if ($$p{sortby} ne 'name') {
			$sql .= ", name";
		}

		$sql .= ' ';
	}

	$sql .= "limit $$p{limit}" if ($$p{limit});

	#info("listPOI: $sql");

	return rows_mysql($db,$sql,\@params);
}

sub poiCacheFN {
	my $title = shift;
	$title =~ s/[^a-zA-Z0-9\-\_\.]+/_/gis;
	$title =~ s/^_+//;
	$title =~ s/_+$//;
	return "$cachePath/$title";
}

sub tablePOI {
	my $cache = undef;
	if ($_[0] eq 'cache') {
		$cache = shift;
	}

	my $title = shift;
	my $rows  = shift;
	my $width = shift;
	my $shortFormat = shift;
	my $show_distance = shift;
	my $show_numbering = shift;
	my $show_days = shift;
	my $show_cscore = shift;
	my $html = '';

	my $cachefile = poiCacheFN($title);

#	if ($cache && -e $cachefile && (time - (stat($cachefile))[9] < $cache_time)) {
#		return readFile($cachefile);
#	}

	my $widthadd = '';
	$widthadd = " style=\"width:$width;\"" if ($width);

	$html = "<div class=\"poiTableContainer\"$widthadd><p class=\"poiTableTitle\" align=\"left\"><b>$title</b></p><table class=\"poiTable\"$widthadd>\n";

	$html .= "<tr class=\"poiTableHeader\">";

	$html .= "<th class=\"poiTableHeader\">row#</th>\n" if (defined($show_numbering));

	my @columns = ('','','POI Name','System','Region','Category','Avg.Stars','Rating');
	push @columns, "$admin_SCORES Rating" if ($show_cscore);
	push @columns, ('From Sol','Submitter');

	push @columns, 'Last Updated' if ($show_days);

	my $k = 0;
	foreach my $n (@columns) {
		my $label = $n;
		if ($label =~ /Sol/ && ref($rows) eq 'ARRAY' && @$rows && ($show_distance || defined(${$$rows[0]}{distance}))) {
			$label = 'Distance';
			$show_distance = 1;
		}

		if ($k == 1) {
			$html .= "<th class=\"poiTableHeader flagtext\" colspan=6></th>";
		} else {
			$label =~ s/\s+/\&nbsp;/gs;
			$html .= "<th class=\"poiTableHeader\">\&nbsp;$label\&nbsp;</th>";
		}

		$k++;
		last if ($shortFormat && $k > 5);
	}
	$html .= "</tr>\n";

	my %cat = getCategories();
	my %reg = getRegions();
	my %vote = ();
	my %fav = ();

	my $maxID = 0;
	my @count = db_mysql($db,"select max(ID) as maxID from poi where deleted is null");
	if (@count) {
		$maxID = ${$count[0]}{maxID};
	}

	if (@$rows && $sessionUserID && $maxID) {	
		my $pull_all = ($maxID && @$rows <= $maxID>>2) ? 0 : 1;

		# If the number of rows is more than a quarter of the max ID, just pull the whole lists

		my @list  = ();
		my @votes = ();
		my @favs  = ();

		if (!$pull_all) {
			foreach my $r (@$rows) {
				push @list, $$r{ID};
			}
		}
	
		@votes = db_mysql($db,"select score,poiID from votes where poiID in (".join(',',@list).") and voterID=?",[($sessionUserID)]) if (!$pull_all);
		@votes = db_mysql($db,"select score,poiID from votes where voterID=?",[($sessionUserID)]) if ($pull_all);
		foreach my $v (@votes) {
			$vote{$$v{poiID}} = $$v{score};
		}

		@favs = db_mysql($db,"select poiID from favs where poiID in (".join(',',@list).") and ownerID=?",[($sessionUserID)]) if (!$pull_all);
		@favs = db_mysql($db,"select poiID from favs where ownerID=?",[($sessionUserID)]) if ($pull_all);
		foreach my $f (@favs) {
			$fav{$$f{poiID}} = 1;
		}
	}

	my $i = 0;
	my $n = 0;
	foreach my $r (@$rows) {
		$n++;
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';

		my $regionname = $$r{regionname} ? $$r{regionname} : $reg{$$r{region}};
		$regionname = substr($regionname,0,25).'...' if (length($regionname)>28);

		my $catname  = $cat{$$r{catID}};
		$catname = substr($catname,0,25).'...' if (length($catname)>28);

		my $username = $$r{username};
		$username = substr($username,0,22).'...' if (length($username)>25);

		my $poiname = $$r{name};
		$poiname = substr($poiname,0,25).'...' if (length($poiname)>28);

		$$r{coord_x} += 0;
		$$r{coord_y} += 0;
		$$r{coord_z} += 0;

		my $coords = "$$r{coord_x} / $$r{coord_y} / $$r{coord_z}";

		$$r{distance} = $$r{sol_dist} if (!$show_distance);

		$html .= "<tr class=\"$class\">";

		$html .= "<td class=\"$class\" align=\"right\">".commify($n+$show_numbering)."</td>\n" if (defined($show_numbering));

		my $k=0;
		#my @values = ('','',$poiname,$$r{systemname},$regionname,$catname,$$r{stars},$$r{score},$$r{cscore},$$r{distance},$username);
		my @values = ('','',$poiname,$$r{systemname},$regionname,$catname,$$r{stars},$$r{score});
		push @values, $$r{cscore} if ($show_cscore);
		push @values, ($$r{distance},$username);

		if ($show_days) {
			if ($$r{edited}) {
				push @values, sprintf("%.02f days", (time - date2epoch($$r{edited})) / 86400);
			} else {
				push @values, '';
			}
		}

		foreach my $n (@values) {
			my $col = $columns[$k];
			my $align = '';
			$align = " align=\"right\"" if ($col =~ /owner|rating|curat|distance|sol/i);

			my $val = $n;

			$val = htmlify($val) if ($col =~ /POI name/i);

			$val =~ s/\s+/\&nbsp;/gs;
			$val =~ s/\-+/\&#8209;/gs;

			if ($col =~ /Owner|Submitter/i) {
				$val = "<a href=\"$relativeURL/profile/$$r{ownerID}\">$val</a></a>";
			}

			if ($col eq 'POI Name') {
				$val = "<a href=\"$relativeURL/view/$$r{ID}\">$val</a></a>";
			}

			if ($col eq 'System') {
				$val = "<a href=\"$relativeURL/system/".htmlify($$r{systemname})."\">$val</a></a>";
			}

			if ($col eq 'Category' && $$r{catID}) {
				$val = "<a href=\"$relativeURL/category/$$r{catID}\">$val</a></a>";
			}

			if ($col eq 'Region' && $$r{region}) {
				$val = "<a href=\"$relativeURL/region/$$r{region}\">$val</a></a>";
			}

			if ($col =~ /Sol|Distance/) {
				$val = 0 if (!$val);
				$val = commify(sprintf("%.02f",$val));
			}

			if ($col =~ /Stars/) {
				$val = "<div data-star=\"".sprintf("%.1f",$$r{stars})."\" class=\"normaltext\"></div>";
			}

			if (!$k) {
				if ($$r{ownerID} == $sessionUserID) {
					$html .= "<td class=\"$class\"><input type=\"button\" class=\"poiButton\" ".
						"onclick=\"greyout();location.href='$relativeURL/edit/$$r{ID}';\" value=\"Edit\"></td>";
				} else {
					$html .= "<td class=\"$class\"></td>";
				}
				
			} elsif ($k==1) {
				#my $flags = '&thinsp;';

				$html .= "<td class=\"$class flagtext\">";
				$html .= "<span class=\"textred flagtext\">$symbol{attention}\&thinsp;</span>" if ($$r{reported});
				$html .= "</td>";

				$html .= "<td class=\"$class flagtext\">";
				if (!$$r{approved}) {
					$html .= "<span class=\"textyellow flagtext\">$symbol{flag}\&thinsp;</span>";
				} elsif ($$r{approved} && time-date2epoch($$r{approved})<=86400*7) {
					$html .= "<span class=\"textgreen flagtext\">$symbol{flag}\&thinsp;</span>";
				} else {
					$html .= '&thinsp;';
				}
				$html .= "</td>";

				$html .= "<td class=\"$class flagtext\">";
				$html .= "<span class=\"textred flagtext\">$symbol{saltire}\&thinsp;</span>" if ($$r{hidden} && !$$r{deleted});
				$html .= "<span class=\"textred flagtext\">$symbol{xbox}\&thinsp;</span>" if ($$r{requestdelete} || $$r{deleted});
				$html .= "</td>";

				$html .= "<td class=\"$class flagtext\">";
				$html .= "<span class=\"textgreen flagtext\">$symbol{blackstar}\&thinsp;</span>" if ($vote{$$r{ID}});
				$html .= "</td>";

				$html .= "<td class=\"$class flagtext\">";
				$html .= "<span class=\"textgreen\">$symbol{checkmark}\&thinsp;</span>" if ($fav{$$r{ID}});
				$html .= "</td>";

				$html .= "<td class=\"$class flagtext\">";
				$html .= "<span class=\"textmagenta boldText flagtext\">$symbol{blackstar}\&thinsp;</span>" if ($$r{rare});
				$html .= "</td>";

				#$html .= "<td class=\"$class flagtext\">$flags</td>";
			} else {
				$html .= "<td$align class=\"$class\">\&nbsp;".filter($val)."\&nbsp;</td>";
			}
			$k++;
			last if ($shortFormat && $k > 5);
		}
		$html .= "</tr>\n";
	}

	$html .= "</table>\n</div>\n";

#	if ($cache) {
#		writeFile($cachefile,\$html);
#	}

	return $html;
}


##########################################################################

sub cscore_to_stars {
	my $score = shift;
	return "0.00" if ($score == 0);
	return ($score-1)*4/9 + 1;
}


sub ratingBox {
	my $rating = shift;
	my $small  = shift;

	$rating = 10 if ($rating>10);
	$rating = 0 if ($rating<=0);
	$rating = sprintf("%.1f",$rating);

	my $color = 'Red';
	$color = 'Grey'   if ($rating == 0);
#	$color = 'Orange' if ($rating >= 2);
#	$color = 'Yellow' if ($rating >= 4);
#	$color = 'YellowGreen' if ($rating >= 5);
#	$color = 'Green'  if ($rating >= 6);
	$color = 'Yellow' if ($rating >= 1.5);
	$color = 'Green'  if ($rating >= 3);

	$small = 'Small' if ($small);

	return "<div class=\"ratingBox$small ratingBox$color\" onclick=\"location.href='$scriptURL/scoring';return false\">$rating</div>";
}

sub profile {
	my @req     = @_;
	my $viewID  = 0;

	if ($req[0] =~ /^(\d+)$/) {
		$viewID = $1;
	} elsif (!@req && activeUser()) {
		$viewID = $sessionUserID;
	}

	if ($viewID ne $req[0]) {
		redirect($scriptURL.'/profile/'.$viewID);
	}

	if (!$viewID && $loginUserID) {
		#$viewID = $loginUserID;
		redirect($scriptURL.'/profile/'.$loginUserID);
	}

	my %user = getUserData($viewID);

	if ($viewID && keys %user) {

		# Profile viewer here
		
		my $html = '';

		my $status = "<span class=\"largetext textgreen\">Active</span>";
		$status = "<span class=\"largetext textyellow\">Unverified</span>" if (!$user{verified});
		$status = "<span class=\"largetext textred\">Banned</span>" if ($user{banned});

		my $banbutton = '';
		$banbutton = "\&nbsp;<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Ban User\" onclick=\"greyout();location.href='$scriptURL/ban/$viewID'\"/>"
			if (!$user{banned} && $sessionUserID && isAdmin() && $viewID!=$sessionUserID); # LEVEL 2
		$banbutton = "\&nbsp;<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Un-Ban User\" onclick=\"greyout();location.href='$scriptURL/unban/$viewID'\"/>"
			if ($user{banned} && $sessionUserID && isAdmin() && $viewID!=$sessionUserID); # LEVEL 2


		my $avatar = gravatar_url( email => $user{email}, rating=>'pg', size=>80, default=>'https://edastro.com/images/account-icon-grey-80px.png' );

		$html .= "<img src=\"$avatar\" alt=\"$user{username} - Configure avatar images at gravatar.com\" class=\"floatRight\"/>\n" if ($avatar);

		$html .= "<div class=\"poiProfile\">\n";
		$html .= "<div class=\"poiProfileRating\">\n";
		$html .= ratingBox($user{rating})."\n";
		$html .= "</div>\n";
		$html .= "<div class=\"poiProfileName\">\n";
		$html .= "<span class=\"bigText\">".commanderName($viewID,$user{username})."<br/></span>\n";
		$html .= "<span class=\"largetext\">".getAdminRole($user{admin})."</span><br/>\n";
		$html .= "</div>\n";
		#$html .= "<div class=\"poiProfileName\"><img src=\"$avatar\" alt=\"$user{username}\"/></div>\n" if ($avatar);
		$html .= "<div class=\"poiProfileName\">\&nbsp;\&nbsp;\&nbsp;</div>\n";
		$html .= "<div class=\"poiProfileName\" style=\"vertical-align: bottom\">\n";
		$html .= "<span class=\"largetext\">Account Status:<br/></span>$status$banbutton<br/></span>\n";
		$html .= "</div>\n";
		$html .= "</div><p/>\n";

		$html .= "<p>\n";
		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Clear All Favorites\" onclick=\"greyout();location.href='$relativeURL/favorites/clear/$sessionUserID';\">\n"
				if ($sessionUserID && $sessionUserID==$viewID);
		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Send test email\" onclick=\"greyout();location.href='$relativeURL/testemail/$viewID';\">\n"
				if ($sessionUserID && ($sessionUserID==$viewID || isAdmin()));
		$html .= "</p>\n";

		if ($sessionUserID && isAdmin()>=2) {
			my @rows = getSessions($viewID);
			my $sessionHTML = '<p><div class="lefttext boldtext">Current active sessions for this user:<br/><table class="sessiondata">'.
				'<tr><th>IP</th><th>Start</th><th>Expiration</th><th>Last Seen</th><th>Browser</th></tr>'."\n";

			foreach my $r (@rows) {
				my $browser = $$r{browser};
				$browser = substr($browser,0,20).'...' if (length($browser)>23);
				$sessionHTML .= "<tr><td>\&nbsp;$$r{ip}\&nbsp;</td><td>\&nbsp;$$r{created}\&nbsp;</td><td>\&nbsp;$$r{expiration}\&nbsp;</td><td>\&nbsp;$$r{lastseen}\&nbsp;</td><td>\&nbsp;$browser\&nbsp;</td></tr>\n";
			}
			$sessionHTML .= "</table></div></p>\n";
			$html .= $sessionHTML;
		}

		#my ($userID,$systemname,$catID,$regionID,$sortby,$sortdir,$limit,'editedAfterVote',$customAND) = @_;
		
		my $rows = listPOI(0,'',0,0,'name','',0,"fav:$viewID");

		if (ref($rows) eq 'ARRAY' && @$rows) {
			$html .= tablePOI("Favorites for <b>".htmlify($user{username})."</b>",$rows,'100%')."<br/>\n";
		} else {
			$html .= "<div><span>Favorites for <b>".htmlify($user{username})."</b></span><br/>None.<br/></div>\n";
		}

		if ($viewID == $sessionUserID) {
			my $rows = listPOI(0,'',0,0,'name','',0,'editedAfterVote');

			if (ref($rows) eq 'ARRAY' && @$rows) {
				$html .= tablePOI("Edited after you voted:",$rows,'100%')."<br/>\n";
			} else {
				$html .= "<div><span><b>Edited after you voted:</b></span><br/>None.<br/></div>\n";
			}
		}

		my $rows = listPOI($viewID,'',0,0,'name','',0,undef);
		$html .= tablePOI("POIs for <b>".htmlify($user{username})."</b>",$rows,'100%');


		render($html,"User Profile for $user{username}");

	} else {
		if ($userBanned) {
			render_error("Account Restricted");
		} elsif ($userUnverified) {
			render_error("Account Unverified");
		} else {
			render_error("Invalid userID: ".htmlify($req[0]));
		}
	}
}

sub update_favorites {
	my ($action, $what, $extra) = @_;

	if ($action eq 'clear') {
		if (!$sessionUserID || $what!=$sessionUserID || !$what) {
			render_error("Unauthorized");
		} else {

			if ($extra eq 'commit') {
				db_mysql($db,"delete from favs where ownerID=?",[($what)]);
				render_error("Favorites cleared.","$relativeURL/profile/$what");
			} else {
				my $html = '';

				$html .= "<div class=\"textleft\"><p>\n";
				$html .= "Delete everything from your list of favorites? (clear all favorites)?</p><p align=\"center\">\n";

				$html .= "<input type=\"button\" class=\"poiButton poiButtonGreen\" value=\"YES, Clear all Favorites\" ".
						"onclick=\"greyout();location.href='$relativeURL/favorites/clear/$sessionUserID/commit';\">\n";
				$html .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"NO, Cancel Request\" ".
						"onclick=\"greyout();location.href='$relativeURL/profile/$what';\">\n";

				$html .= "</p></div>\n";

				render($html,"Clear Favorites","$relativeURL/profile/$what");
			}
		}
	} else {
		render_error("Unknown action");
	}
}

sub favorite {
	my $poiID = shift;

	if ($poiID  && $sessionUserID && $sessionUserID!=$templateID && getPOIname($poiID)) {
		my @rows = db_mysql($db,"select ID from favs where ownerID=? and poiID=?",[($sessionUserID,$poiID)]);
		if (@rows) {
			db_mysql($db,"delete from favs where ownerID=? and poiID=?",[($sessionUserID,$poiID)]);
		} else {
			 db_mysql($db,"insert into favs (ownerID,poiID) values (?,?)",[($sessionUserID,$poiID)]);
		}

		redirect($scriptURL."/voterating/$poiID");
	} else {
		#render_error('Not logged in.');
	}
	redirect($scriptURL."/voterating/$poiID");
}

sub rating_include {
	my $poiID = shift;
	my @req   = @_;
	my $vote  = $q->param('vote');
	$vote = $req[0] if (!$vote && $req[0] =~ /^[1-5]$/);

	my %votecounts = ();
	
	print $q->header("text/html;charset=UTF-8") if (!$debug);
	#print html_header() if (!$debug);

	if ($vote && $sessionUserID && $sessionDATA{canVote} && getPOIname($poiID)) {
		vote($poiID,$vote);
	}


	my @rows = db_mysql($db,"select score,count(*) as count from votes where poiID=? group by score order by score",[($poiID)]);
	foreach my $r (@rows) {
		$votecounts{$$r{score}} = $$r{count};
	}

	my @rows = db_mysql($db,"select score,cscore,ownerID,votes,curations,stars,approved from poi where ID=?",[($poiID)]);

	if (!@rows || !$poiID) {
		print "Invalid POI ID\n";
		exit;
	}

	my $r = shift @rows;

	my @isFav = ();
	@isFav = db_mysql($db,"select poiID from favs where ownerID=? and poiID=?",[($sessionUserID,$poiID)]) if ($sessionUserID);

	my $votes = 0;
	my $curation = 0;

	my $html = "<center>\n";

	my $favButtonClass = ' class="floatRight"';

	#$html .= "<div data-star=\"".sprintf("%.1f",$$r{stars})."\"></div><br/>\n";	# Was testing this
	
	my $cstars = sprintf("%.02f",cscore_to_stars($$r{cscore}));

	my $explorer = $aprilFools ? 'Real Explorers' : 'Explorer Rating';

	if ($sessionUserID && $sessionUserID != $templateID) {
		$html .= "<div$favButtonClass><input type=\"button\" class=\"poiButton\" onclick=\"toggleFavorite();\" value=\"Add to Favorites\"></div>\n" if (!@isFav);
		$html .= "<div$favButtonClass><span class=\"textgreen\">\&#10004;\&nbsp;Favorite\&nbsp;<input type=\"button\" class=\"poiButton\" onclick=\"toggleFavorite();\" value=\"Remove\"></div>\n" if (@isFav);
	}

	$html .= "<div class=\"votespreadBox\" cellpadding=\"1\" cellspacing=\"1\">\n";
	$html .= "<table>";
	foreach (1..5) {
		$html .= "<tr><td><div data-smallstar=\"".sprintf("%.1f",$_)."\" class=\"bigText\"></div></td><td>\&nbsp;\&nbsp;</td><td style=\"text-align: right;\">".commify($votecounts{$_}+0)."</td></tr>\n";
	}
	$html .= "</table>";
	$html .= "</div>\n";

	if (!$sessionUserID || !$sessionDATA{canVote} || (!$allow_self_votes && $sessionUserID == $$r{ownerID}) || !$$r{approved}) {

		#$html .= "<span class=\"textred\">Not logged in</span><br/>\n" if ($DEV && !$sessionUserID);
		#$html .= "<span class=\"textyellow\">DEV: $sessionUserID,$sessionDATA{canVote},$$r{ownerID},$$r{approved}</span><br/>\n" if ($DEV);
		$html .= "<div class=\"floatLeft\"><div class=\"poiProfileName textRight\">\&nbsp;\&nbsp;\&nbsp;<div data-star=\"".sprintf("%.1f",$$r{stars})."\" class=\"bigText\"></div>\&nbsp;<span class=\"normaltext\">$explorer<br/></span><span class=\"mediumtext\">(".commify($$r{votes})." votes, $$r{stars} avg.stars)</span></div>\n";
		$html .= "<div class=\"poiProfileRating\">".ratingBox($$r{score},1)."</div></div>\n";
		#$html .= "<div class=\"poiProfileRating\">".ratingBox($$r{cscore},1)."</div>\n";
		#$html .= "<div class=\"poiProfileName textLeft\"><span class=\"normaltext\">$admin_SCORES Rating\&nbsp;<div data-star=\"".sprintf("%.1f",$cstars)."\" class=\"bigText\"></div><br/></span><span class=\"mediumtext\">(".commify($$r{curations})." votes, $cstars avg.stars)</span></div>\n";
	} else {

		$html .= "<div class=\"ratingContainer\">\n";
		$html .= "<div class=\"ratingList textRight\" style=\"white-space:nowrap;\">\n";
		$html .= "<div class=\"ratingSingle\">\n";
		$html .= "<div class=\"poiProfileName\"><div data-star=\"".sprintf("%.1f",$$r{stars})."\" class=\"bigText\"></div>\&nbsp;<span class=\"normaltext\">$explorer<br/></span><span class=\"mediumtext\">(".commify($$r{votes})." votes, $$r{stars} avg.stars)</span></div>\n";
		$html .= "<div class=\"poiProfileRating\">".ratingBox($$r{score},1)."</div>\n";
		$html .= "</div>\n";
		#$html .= "<div class=\"ratingSingle\" style=\"display:none;visibility:hidden;\">\n";
		#$html .= "<div class=\"poiProfileName\"><div data-star=\"".sprintf("%.1f",$cstars)."\" class=\"bigText\"></div>\&nbsp;<span class=\"normaltext\">$admin_SCORES Rating<br/></span><span class=\"mediumtext\">(".commify($$r{curations})." votes, $cstars avg.stars)</span></div>\n";
		#$html .= "<div class=\"poiProfileRating\">".ratingBox($$r{cscore},1)."</div>\n";
		#$html .= "</div>\n";
		$html .= "</div>\n";
		$html .= "<br/>\n";

		my %sel = ();
		my @rows = db_mysql($db,"select * from votes where voterID=? and poiID=?",[($sessionUserID,$poiID)]);
		if (@rows) {
			$sel{${$rows[0]}{score}} = ' checked';
		}


		my %tooltip = ();

		$tooltip{1} = htmlify("No mention of uncommon phenomena or scenic views.  Only interesting to the submitter (\"My first Earth-like World!\"). No appeal for you to go see it at all.  (If it is inaccurate or no longer exists, please let the GEC team know with the \"Report POI\" button)");
		$tooltip{2} = htmlify("Mildly scenic views. Somewhat uncommon phenomena. A place you might visit if it's not a big detour.");
		$tooltip{3} = htmlify("Scenic views.  Uncommon to slightly rare phenomena.  A place you'd be willing to spend time traveling to.");
		$tooltip{4} = htmlify("Gorgeous sights.  Very rare discoveries.  You would cross half the galaxy just to visit this place.  ");
		$tooltip{5} = htmlify("The most exceptional discoveries and sights.  You would fly here from anywhere else in the galaxy.");

#		if ($sessionUserID && $sessionDATA{canVote} && ($allow_self_votes || $sessionUserID != $$r{ownerID}) && $$r{approved}) {

			#$html .= "<div class=\"voteBox\">Your vote: <span class=\"voteStars\">&#9734;&#9734;&#9734;&#9734;&#9734;</span></div>\n";
			$html .= "<div class=\"voteBox floatRight\">YOUR VOTE<br/><div class=\"voteStars\">
    <form>
	<div class=\"rating\">";

			if (1) {	# JS vote stars with tooltips
			$html .= "
		<span data-tip=\"$tooltip{5}\" name=\"star5\"><input id=\"star5\" name=\"star\" type=\"radio\" value=\"5\" class=\"starRadioBtn\"$sel{5} 
			onclick=\"selectStars(5);\"/>\&nbsp;<label for=\"star5\" id=\"starlabel5\">$symbol{blackstar}</label></span
		><span data-tip=\"$tooltip{4}\"name=\"star4\"><input id=\"star4\" name=\"star\" type=\"radio\" value=\"4\" class=\"starRadioBtn\"$sel{4} 
			onclick=\"selectStars(4);\"/>\&nbsp;<label for=\"star4\" id=\"starlabel4\">$symbol{blackstar}</label></span
		><span data-tip=\"$tooltip{3}\"name=\"star3\"><input id=\"star3\" name=\"star\" type=\"radio\" value=\"3\" class=\"starRadioBtn\"$sel{3} 
			onclick=\"selectStars(3);\"/>\&nbsp;<label for=\"star3\" id=\"starlabel3\">$symbol{blackstar}</label></span
		><span data-tip=\"$tooltip{2}\"name=\"star2\"><input id=\"star2\" name=\"star\" type=\"radio\" value=\"2\" class=\"starRadioBtn\"$sel{2} 
			onclick=\"selectStars(2);\"/>\&nbsp;<label for=\"star2\" id=\"starlabel2\">$symbol{blackstar}</label></span
		><span data-tip=\"$tooltip{1}\"name=\"star1\"><input id=\"star1\" name=\"star\" type=\"radio\" value=\"1\" class=\"starRadioBtn\"$sel{1} 
			onclick=\"selectStars(1);\"/>\&nbsp;<label for=\"star1\" id=\"starlabel1\">$symbol{blackstar}</label></span>";
			}

			if (0) {	# CSS-only vote stars
			$html .= "
		<input id=\"star5\" name=\"star\" type=\"radio\" value=\"5\" class=\"radio-btn hide\"$sel{5} onclick=\"selectStars(5);\"
			/><label for=\"star5\">$symbol{blackstar}</label>
		<input id=\"star4\" name=\"star\" type=\"radio\" value=\"4\" class=\"radio-btn hide\"$sel{4} onclick=\"selectStars(4);\"
			/><label for=\"star4\">$symbol{blackstar}</label>
		<input id=\"star3\" name=\"star\" type=\"radio\" value=\"3\" class=\"radio-btn hide\"$sel{3} onclick=\"selectStars(3);\"
			/><label for=\"star3\">$symbol{blackstar}</label>
		<input id=\"star2\" name=\"star\" type=\"radio\" value=\"2\" class=\"radio-btn hide\"$sel{2} onclick=\"selectStars(2);\"
			/><label for=\"star2\">$symbol{blackstar}</label>
		<input id=\"star1\" name=\"star\" type=\"radio\" value=\"1\" class=\"radio-btn hide\"$sel{1} onclick=\"selectStars(1);\"
			/><label for=\"star1\">$symbol{blackstar}</label>";
			}

			$html .= "
	<div class=\"clear\"></div>
	</div>
    </form>
</div></div>\n";
#		}

		$html .= "</div>\n";
	}

	$html .= "</center>\n";

	print $html;
	exit;
}

sub view_nextprev {
	my $action = shift;
	my $id = shift;

	if ($id && $id =~ /^\d+$/) {

		my $and = '';
		my @params = ($id);

		if ($sessionUserID && isAdmin()) {
			$and = '';
		} elsif ($sessionUserID) {
			$and = "and ((hidden is null and approved is not null) or ownerID=?)";
			push @params, $sessionUserID;
		} else {
			$and = "and hidden is null and approved is not null";
		}

		my $sql = "select ID from poi where ID>? and deleted is null $and order by ID limit 1";
		$sql = "select ID from poi where ID<? and deleted is null $and order by ID desc limit 1" if ($action eq 'prev');

		my @rows = db_mysql($db,$sql,\@params);

		if (@rows) {
			redirect("$scriptURL/view/".${$rows[0]}{ID});
		} else {
			# End of list?
			shift @params;

			my $sql = "select ID from poi where deleted is null $and order by ID limit 1";
			$sql = "select ID from poi where deleted is null $and order by ID desc limit 1" if ($action eq 'prev');

			my @rows = db_mysql($db,$sql,\@params);
			if (@rows) {
				redirect("$scriptURL/view/".${$rows[0]}{ID});
			} else {
				render_error('POI not found');
			}
		} 

	} else {
		render_error('Invalid POI ID');
	}
}

sub view {
	my @req   = @_;
	my $poiID = $req[0];

	if (!$poiID) {
		render_error('Invalid POI ID');
	}

	my $and = ' and deleted is null';
	$and = '' if ($sessionUserID && isAdmin());

	my $rows = rows_mysql($db,"select * from poi,poidata where poi.ID=? and poiID=poi.ID $and",[($poiID)]);
	
	if (!$rows || ref($rows) ne 'ARRAY' || !@$rows) {
		render_error('POI not found.');
	}

	if ($sessionUserID && $poiID) {
		db_mysql($db,"update votes set updated=now() where poiID=? and voterID=?",[($poiID,$sessionUserID)]);
	}

	my @form = ();
	my %params = %{$$rows[0]};

#debug_log("POI Name: ${$$rows[0]}{name} / ".filter(htmlify(${$$rows[0]}{name}))."\n");
#debug_log("POI Name: ".substr(${$$rows[0]}{summary},1,80)." / ".substr(filter(htmlify(${$$rows[0]}{summary})),1,80)."\n");

	#$params{name} = $params{poiname} if ($params{poiname});

	$params{coord_x} += 0;
	$params{coord_y} += 0;
	$params{coord_z} += 0;
	$params{sol_dist} += 0;

	my $visible = 1;
	$visible = 0 if (($params{hidden} || !$params{approved}) && !isAdmin() && $sessionUserID != $params{ownerID});

	my $coords = "$params{coord_x} / $params{coord_y} / $params{coord_z}" 
		if (defined($params{coord_x}) && defined($params{coord_y}) && defined($params{coord_z}));

	foreach my $p (keys %params) {
		#$params{$p} = htmlify($params{$p},$p eq 'name' ? 1 : undef) if ($p !~ /HTML/);
		$params{$p} = htmlify($params{$p}) if ($p !~ /HTML/);
	}

	if (!$params{estimatedValueDate} || time - date2epoch($params{estimatedValueDate})>=86400*7) {
		my $href = get_edsmValue();
		$params{estimatedValue} = $$href{estimatedValue};
		$params{estimatedValueMapped} = $$href{estimatedValueMapped};
	}

	my $html = "<div class=\"poiBoundingBox\">\n";
	$html .= "<div class=\"poiViewDiv\"><div class=\"poiViewBorder\">\n";
	$html .= prev_button($poiID,"floatLeft");
	$html .= next_button($poiID,"floatRight");

	my $copied = "document.getElementById('copied').style.display='block';document.getElementById('copied').style.visibility='visible';setTimeout(() => {document.getElementById('copied').style.display='none';document.getElementById('copied').style.visibility='hidden';},1200);";


	$html .= "<center><span class=\"bigText centertext\">".
		"<div class=\"clipboardcopy\" onclick=\"navigator.clipboard.writeText('$params{systemname}');$copied\">".filter($params{name})."</div>".
		"</span><div id=\"copied\" style=\"display:none;visiblity:hidden;\"><br/>(Copied system name to clipboard)</div></center>\n";
	$html .= "<br/>\n";
	$html .= "<span class=\"largetext textyellow\">( PENDING APPROVAL )<br/></span>\n" if ($params{requestapprove} && !$params{deleted} && !$params{approved});
	$html .= "<span class=\"largetext textyellow\">( NOT YET APPROVED )<br/></span>\n" if (!$params{approved});
	$html .= "<span class=\"largetext textred\">( HIDDEN )<br/></span>\n" if ($params{hidden});
	$html .= "<span class=\"largetext textred\">( REPORTED )<br/></span>\n" if ($params{reported});
	$html .= "<span class=\"largetext textred\">( PENDING DELETION )<br/></span>\n" if ($params{requestdelete} && !$params{deleted});
	$html .= "<span class=\"largetext textred\">( DELETED )<br/></span>\n" if ($params{deleted});
	$html .= "<span class=\"largetext textmagenta\">$symbol{blackstar} RARE $symbol{blackstar}<br/></span>\n" if ($params{rare});

	$html .= "<table class=\"poiViewTable poiViewTableInline\">\n";

	#push @form, {type=>'text', name=>'name', label=>'POI Name', maxlength=>80, size=>40, value=>$params{name}, required=>1};
	push @form, {type=>'timestamps'};
	push @form, {type=>'hr'};
	push @form, {type=>'owner'};
	push @form, {type=>'text', label=>'Star System', value=>"<a href=\"$relativeURL/system/$params{systemname}\">$params{systemname}</a>" } if ($params{systemname} !~ /^Error/);
	push @form, {type=>'text', label=>'Star System', value=>"\&lt;$params{systemname}\&gt;" } if ($params{systemname} =~ /^Error/);
	push @form, {type=>'text', label=>'Coordinates', value=>$coords };
	push @form, {type=>'text', label=>'Sol Distance', value=>" $params{sol_dist} ly ", commify=>1 } if ($params{sol_dist});
	push @form, {type=>'regions', name=>'region', label=>'Region', value=>$params{region}};
	push @form, {type=>'categories', label=>'Category', value=>$params{catID} } if ($params{catID});
	push @form, {type=>'categories', label=>'Category', value=>$params{catID2} } if ($params{catID2});
	push @form, {type=>'text', name=>'latitude', label=>'Latitude', value=>$params{latitude}+0, size=>15, maxlength=>15} if ($params{latitude});
	push @form, {type=>'text', name=>'longitude', label=>'Longitude', value=>$params{longitude}+0, size=>15, maxlength=>15} if ($params{longitude});

	if ($params{callsign}) {
		my $val = $params{callsign};

		my @car = db_mysql($db,"select * from carriers where callsign=?",[($params{callsign})]);
		if (@car) {
			my $c = shift @car;

			if ($$c{status} eq 'found' && $$c{systemId64}==$params{id64} && uc($$c{systemName}) eq uc($params{systemname})) {
				$val = "<span class=\"textgreen\">$params{callsign}";
				$val .= "<br/>$$c{name}" if ($$c{name});
				#$val .= "<br/>$$c{systemName} ($$c{systemId64})" if ($$c{systemName});
				$val .= "<br/>Last Event: $$c{lastEvent}" if ($$c{lastEvent});
				$val .= "</span>";
			} elsif ($$c{status} eq 'found') {
				$val = "<span class=\"textred\">$params{callsign} (out of position)";
				$val .= "<br/>$$c{name}" if ($$c{name});
				$val .= "<br/>$$c{systemName} ($$c{systemId64})" if ($$c{systemName});
				$val .= "<br/>Last Event: $$c{lastEvent}" if ($$c{lastEvent});
				$val .= "</span>";
			} else {
				$val = "<span class=\"textyellow\">$params{callsign} (unknown carrier)</span>";
			}
		} else {
			$val = "<span class=\"textyellow\">$params{callsign} (unknown carrier)</span>";
		}

		push @form, {type=>'callsign', name=>'callsign', label=>'Carrier Callsign', maxlength=>7, size=>7, value=>$val } 
	}

	push @form, {type=>'text', name=>'scanvalue', label=>'Estimated Value', value=>commify($params{estimatedValue})." (scanned), ".
									commify($params{estimatedValueMapped})." (mapped)"} if ($params{estimatedValue});
	push @form, {type=>'blank'};
	push @form, {type=>'hr'};

	my $mainimage = $params{topimage};

	if ($params{topimage}) {
		my $thumb = htmlify(getThumbnail(0,$params{topimage},$poiID)) if (!$params{toplocalimage});
	}
	if ($params{mainimage}) {
		$mainimage = htmlify(getImageLink($params{mainimage}));
	}
	
	if ($visible) {

		push @form, {type=>'rating'};
		push @form, {type=>'hr'};
		push @form, {type=>'image', name=>'topimage', width=>640, value=>$params{topimage}} if ($params{topimage});
		push @form, {type=>'ui'};
		push @form, {type=>'textarea', name=>'summary', label=>'Summary', value=>filter($params{summary})};
		push @form, {type=>'GMP'};
		push @form, {type=>'blank'};
		push @form, {type=>'textarea', name=>'description', label=>'Description', value=>$params{description}};
		push @form, {type=>'textarea', name=>'observatory', label=>'Observatory Details', maxlength=>$maxlength{observatory}, cols=>80, rows=>8, value=>$params{observatory}};
		push @form, {type=>'textarea', name=>'journal', label=>'Journal Entries', maxlength=>$maxlength{journal}, cols=>80, rows=>8, value=>$params{journal}};
	
	} else {
		push @form, {type=>'ui'};
		push @form, {type=>'GMP'};
	}

	push @form, {type=>'hr'};
	push @form, {type=>'blank'};
	push @form, {type=>'text', name=>'id64', label=>'ID64 Address', maxlength=>40, size=>40, value=>$params{id64}, required=>1, disabled=>1, link=>"https://spansh.co.uk/api/dump/<VALUE>" };
	push @form, {type=>'text', name=>'edsm_id', label=>'EDSM ID', maxlength=>40, size=>40, value=>$params{edsm_id}, required=>1, disabled=>1, link=>"https://www.edsm.net/en/system/id/<VALUE>/name/$params{systemname}" };

	my $ui = "<tr><td colspan=2 align=\"right\">\n";

	if (isAdmin()) {
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Discord Push\" onclick=\"greyout();location.href='$scriptURL/pushdiscord/$poiID'\"/>\n";
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Re-Format\" onclick=\"greyout();location.href='$scriptURL/reformat/$poiID'\"/>\n";
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Clear Report Status\" onclick=\"greyout();location.href='$scriptURL/unreport/$poiID'\"/>\n" if ($params{reported});
		$ui .= "<input type=\"button\" class=\"poiButton poiButtonYellow\" value=\"Hide POI\" onclick=\"greyout();location.href='$scriptURL/hide/$poiID'\"/>\n" if (!$params{hidden});
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Unhide POI\" onclick=\"greyout();location.href='$scriptURL/unhide/$poiID'\"/>\n" if ($params{hidden});
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Change Category\" onclick=\"greyout();location.href='$scriptURL/change/category/$poiID'\"/>\n";
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Change System\" onclick=\"greyout();location.href='$scriptURL/change/system/$poiID'\"/>\n";
		$ui .= "<input type=\"button\" class=\"poiButton poiButtonMagenta\" value=\"Toggle Rare\" onclick=\"greyout();location.href='$scriptURL/togglerare/$poiID'\"/>\n";
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Get EDSM ID\" onclick=\"greyout();location.href='$scriptURL/getEDSM/$poiID'\"/>\n" if (!$params{edsm_id});
	}
	if (isAdmin() || ($sessionUserID && $sessionUserID==$params{ownerID})) {
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Transfer Ownership\" onclick=\"greyout();location.href='$scriptURL/change/owner/$poiID'\"/>\n";
	}

	$ui .= "<input type=\"button\" class=\"poiButton poiButtonGreen\" value=\"Request Approve\" onclick=\"greyout();location.href='$scriptURL/requestapprove/$poiID'\"/>".
			"\n" if (!$params{requestapprove} && !$params{approved} && isAdmin());
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonGreen\" value=\"Abort Approve\" onclick=\"greyout();location.href='$scriptURL/abortapprove/$poiID'\"/>".
			"\n" if ($params{requestapprove} && !$params{approved} && isAdmin());
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonGreen\" value=\"Approve\" onclick=\"greyout();location.href='$scriptURL/approve/$poiID'\"/>\n"
			if ($params{requestapprove} && !$params{approved} && isAdmin());

	if ($params{edsm_id}>0) {
		my $link = edsm_link($params{edsm_id},$params{systemname});
		$link =~ s/'|\&#39;/\\'/gs;
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"View on EDSM\" onclick=\"window.open('$link', '_blank');\"/>\n";
	}

	if ($params{id64}>0) {
		$ui .= "<input type=\"button\" class=\"poiButton\" value=\"Canonn System Signals\" onclick=\"window.open('".
				canonn_signals_link($params{id64})."', '_blank');\"/>\n";
	}

	$ui .= "<input type=\"button\" class=\"poiButton\" value=\"EDIT\" onclick=\"greyout();location.href='$scriptURL/edit/$poiID';\"/>\n" 
			if ($params{ownerID} == $sessionUserID || isAdmin());

	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Report POI\" onclick=\"greyout();location.href='$scriptURL/report/$poiID'\"/>\n" 
			if (!$params{reported} && $sessionUserID);
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Un-report\" onclick=\"greyout();location.href='$scriptURL/unreport/$poiID'\"/>\n" 
			if ($params{reported} && $sessionUserID && isAdmin());

	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Request DELETE\" onclick=\"greyout();location.href='$scriptURL/requestdelete/$poiID';\"/>\n" 
			if (isAdmin() && !$params{requestdelete} && !$params{deleted});
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"Abort DELETE\" onclick=\"greyout();location.href='$scriptURL/abortdelete/$poiID';\"/>\n" 
			if (isAdmin() && $params{requestdelete} && !$params{deleted});
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"DELETE\" onclick=\"greyout();location.href='$scriptURL/delete/$poiID';\"/>\n" 
			if (isAdmin() && $params{requestdelete} && !$params{deleted});  # LEVEL 2
	$ui .= "<input type=\"button\" class=\"poiButton poiButtonRed\" value=\"UN-DELETE\" onclick=\"greyout();location.href='$scriptURL/undelete/$poiID';\"/>\n" 
			if (isAdmin() && $params{deleted});  # LEVEL 2
	
	my $html_title = encode_entities($params{name});
	$ui .= "<button  class=\"poiButton poiButton\" onclick=\"location.href='https://bsky.app/intent/compose?text=$html_title%0Ahttps%3A//edastro.com/gec/view/$poiID';\"><img src=\"/images/bluesky15px.png\" border=0 alt=\"Bluesky\" style=\"border: 0\"></button>\n";

	$ui .= "</td></tr>\n";

#	my $rated = "<tr><td colspan=2>\n";
#	$rated .= "<div id=\"whirlpool\" class=\"cssload-whirlpool\"></div>\n";
#	$rated .= "<div id=\"ratingContainer\"><center>\n";
#	$rated .= "<div class=\"poiProfileName\"><span class=\"normaltext\">Explorer Rating</span></div>\n";
#	$rated .= "<div class=\"poiProfileRating\">".ratingBox($params{score},1)."</div>\n";
#	$rated .= "<div class=\"poiProfileRating\">".ratingBox($params{cscore},1)."</div>\n";
#	$rated .= "<div class=\"poiProfileName\"><span class=\"normaltext\">$admin_SCORES Rating</span></div>\n";
#	$rated .= "</center></div></td></tr>\n";

	foreach my $f (@form) {

		$$f{label} =~ s/\s+/\&nbsp;/gs;

		if ($$f{type} eq 'owner') {
			my $class  = $params{discoverer} ? 'bigtext' : 'largetext';
			my $behalf = $params{discoverer} ? " on behalf of <b><i>$params{discoverer}</i></b>" : '';
			$behalf = "<br/>$behalf" if ($params{originalOwnerID} && $params{originalOwnerID}!=$params{ownerID} && $behalf);
			my $maintainer = commanderName($params{ownerID});
			my $and = '';

			if ($behalf && $params{discoverer}) {
				$maintainer =~ /^(\s*cmdr\s+)?(\S.*)$/i;
				my $ownerName = $2;
				$params{discoverer} =~ /^(\s*cmdr\s+)?(\S.*)$/i;
				my $discName = $2;

				if (lc(btrim($ownerName)) eq lc(btrim($discName))) {
					$behalf = '';
					$and = 'Discovered and ';
				}
			}

			$html .= "<tr><td colspan=2 valign=\"top\"><span class=\"$class\">\&nbsp;</span>\n";

			if (!$params{originalOwnerID} || $params{originalOwnerID} == $params{ownerID}) {
				$html .= "<span class=\"mediumtext\" style=\"float:right\">$and"."Submitted by: <a href=\"$relativeURL/profile/$params{ownerID}\">".
					$maintainer."</a>$behalf</span>\n";
			} else {
				$html .= "<span class=\"mediumtext\" style=\"float:left\">Originally submitted by: <a href=\"$relativeURL/profile/$params{originalOwnerID}\">".
					commanderName($params{originalOwnerID})."</a></span>\n";
				$html .= "<span class=\"mediumtext\" style=\"float:right\">Maintained by: <a href=\"$relativeURL/profile/$params{ownerID}\">".
					$maintainer."</a>$behalf</span>\n";
			}
			$html .= "</td></tr>\n";

		} elsif ($$f{type} eq 'timestamps') {
			$html .= "<tr><td colspan=2>\n";
			$html .= "<span class=\"mediumtext\" style=\"float:left\">Created: $params{created}</span>\n";
			$html .= "<span class=\"mediumtext\" style=\"float:right\">Last Edited: $params{edited}</span>\n";
			$html .= "</td></tr>\n";

		} elsif ($$f{type} eq 'GMP') {

			$html .= getGMPwarning($params{systemname},'view',$params{ID});

		} elsif ($$f{type} eq 'ui') {

			$html .= $ui;

		} elsif ($$f{type} eq 'rating') {

			#$html .= $rated;

			$html .= "<tr><td colspan=2>\n<div class=\"cssload-container\">\n";
			$html .= "<div id=\"whirlpool\" class=\"cssload-whirlpool\"></div>\n";
			$html .= "<div id=\"ratingContainer\"><br/><br/><br/></div>";
			$html .= "</div></td></tr>\n";

		} elsif ($$f{type} eq 'textarea') {

			if ($$f{name} eq 'description' || $$f{name} eq 'summary') {
				my $label = "<b>$$f{label}:</b><br/>";
				my $text = $$f{value};
				if ($$f{name} eq 'description') {
					if ($params{descriptionHTML}) { 
						$text = filter(fix_links($params{descriptionHTML}));
					} else {
						$text = my_markdown($text);
					}
				}

				$label .= "<br/>" if ($text !~ /^\s*<(p|br)\/?>/is);
				$text  .= "<br/>" if ($text !~ /<\/?(p|br)>\s*$/is);
				$text  .= "<br/>" if ($$f{name} eq 'summary');

				$html .= "<tr><td class=\"poiViewCell\" colspan=\"2\"><div class=\"textjustify textoverflow\">$label".cdn_links($text)."</div></td></tr>\n";
			} else {
				$html .= "<tr><td class=\"poiViewCell\" colspan=\"2\"><div><label for=\"\">$$f{label}</label>:<br/>".
				"<textarea class=\"poiTEXT\" name=\"$$f{name}\" rows=\"$$f{rows}\" cols=\"$$f{cols}\" ".
				"readonly>$$f{value}</textarea></div></td></tr>\n" if ($$f{value});
			}
		} elsif ($$f{type} eq 'text' || $$f{type} eq 'display' || $$f{type} eq 'callsign') {
			my $val = filter($$f{value});
			$val = commify($val) if ($$f{commify});
			if ($$f{link}) {
				my $url = $$f{link};
				$url =~ s/<VALUE>/$val/gs;
				$val = "<a href=\"$url\">$val</a>";
			}
			$html .= "<tr><td class=\"poiViewCell\" align=\"right\" valign=\"top\"><b>$$f{label}:</b></td>".
					"<td class=\"poiViewCell\" valign=\"top\">$val</td></tr>\n";

		} elsif ($$f{type} eq 'categories') {
			$html .= "<tr><td class=\"poiViewCell\" align=\"right\" valign=\"top\"><b>$$f{label}:</b></td><td class=\"poiViewCell\" valign=\"top\">";

			my @rows = db_mysql($db,"select * from categories where ID=? and deleted=0",[($$f{value})]);
			if (@rows) {
				$html .= "<a href=\"$relativeURL/category/$$f{value}\">".filter(${$rows[0]}{catname})."</a>";
			}
			$html .= "</td></tr>\n";
		} elsif ($$f{type} eq 'regions') {
			$html .= "<tr><td class=\"poiViewCell\" align=\"right\" valign=\"top\"><b>$$f{label}:</b></td><td class=\"poiViewCell\" valign=\"top\">";

			my @rows = db_mysql($db,"select * from regions where id=?",[($$f{value})]);
			if (@rows) {
				$html .= "<a href=\"$relativeURL/region/$$f{value}\">".${$rows[0]}{regionname}."</a>";
			}
			$html .= "</td></tr>\n";
		} elsif ($$f{type} eq 'blank') {
			$html .= "<tr class=\"poiViewCell\"><td colspan=2>\&nbsp;</td></tr>\n";
		} elsif ($$f{type} eq 'hr') {
			$html .= "<tr class=\"poiViewSpace\"><td colspan=2 class=\"poiViewSpace\"></td></tr><tr class=\"poiViewHR\"><td colspan=2 class=\"poiViewHR\"></td></tr><tr class=\"poiViewSpace\"><td colspan=2 class=\"poiViewSpace\"></td></tr>\n";
		} elsif ($$f{type} eq 'image') {
			my $width = '';
			$width = "width=\"$$f{width}\"" if ($$f{width});
			#$html .= "IMAGE: ($$f{name} / $$f{value} || $params{mainimage} || $params{toplocalimage})\n";

			if ($$f{name} eq 'topimage' && $params{mainimage}) {
				$html .= "<tr><td colspan=2 id=\"poiMainImageContainer\"><center><a id=\"poiMainImageLink\" href=\"".cdn($mainimage)."\" data-lightbox=\"poiImage$poiID\" data-title=\"$params{name} main image\"><img src=\"".cdn($mainimage)."\" width=$width id=\"poiMainImage\"></a></center></td></tr>\n";
			} elsif ($$f{name} eq 'topimage' && $params{toplocalimage}) {
				$html .= "<tr><td colspan=2 id=\"poiMainImageContainer\"><center><a id=\"poiMainImageLink\" href=\"".cdn($params{toplocalimage})."\" data-lightbox=\"poiImage$poiID\" data-title=\"$params{name} main image\"><img src=\"".cdn($params{toplocalimage})."\" width=$width id=\"poiMainImage\"></a></center></td></tr>\n";
			} else {
				$html .= "<tr><td colspan=2 id=\"poiMainImageContainer\"><center><a id=\"poiMainImageLink\" href=\"".cdn($$f{value})."\" data-lightbox=\"poiImage$poiID\" data-title=\"$params{name} main image\"><img src=\"".cdn($$f{value})."\" width=$width id=\"poiMainImage\"></a></center></td></tr>\n";
			}
		}
	}

	$html .= "</table>\n</div><!poiViewBorder>\n";

	if ($params{approved} || ($sessionUserID && (isAdmin() || $params{ownerID}==$sessionUserID))) {
		$html .= "<div class=\"poiGallery\" id=\"poiGallery\">\n";
		$html .= view_images($poiID,1);
		$html .= "</div><!poiGallery>\n";
	}

	$html .= "</div><!poiViewDiv>\n";

	my $imagesize = 480;
	my $sol_y = $imagesize*7/9;
	my $sol_x = $imagesize >> 1;
	my $x = floor($params{coord_x}*$imagesize/90000 + $sol_x);
	my $y = floor($sol_y - $params{coord_z}*$imagesize/90000);

	$html .= "<div class=\"poiRightDiv\"><div class=\"poiGalaxyDiv\"><div class=\"poiGalaxyContainer\">\n";
	$html .= "<a target=\"_blank\" href=\"/galmap?pins=regionlines#$params{coord_x},$params{coord_y},$params{coord_z},6,$params{name}\">\n";
	$html .= "<img class=\"cleanimage image480\" src=\"/images/galaxy-poi-regions-480px.jpg\">\n";
	$html .= "</a>\n";

	#$html .= "<div class=\"greendot\" style=\"left:$x"."px;top:$y"."px;\"/>\n";
	$y-=10; $html .= "<div id=\"cross\" style=\"left:$x"."px;top:$y"."px;\"></div>\n";

	$html .= "</div><!poiGalaxyContainer>\n"; #poiGalaxyContainer
	$html .= "</div><!poiGalaxyDiv>\n"; #poiGalaxyDiv

	$html .= "<div class=\"poiEDSMstats\" style=\"\">\n";

	$html .= "<div class=\"poiTrafficReport\" style=\"\">\n";
	$html .= "<div class=\"poiTableContainer\"><p class=\"poiTableTitle\" align=\"left\"><b>EDSM Traffic Report</b></p>";
	$html .= "<table class=\"nearestTable edsmStatsTable\">\n";
	$html .= "<tr class=\"poiTableHeader\">\n";
	$html .= "<td align=\"left\" class=\"poiRow1\">\&nbsp;Past Day:\&nbsp;</td>";
	$html .= "<td align=\"right\" class=\"poiRow1\" id=\"trafficDay\"></td>";
	$html .= "</tr><tr class=\"poiTableHeader\">\n";
	$html .= "<td align=\"left\" class=\"poiRow2\">\&nbsp;Past Week:\&nbsp;</td>";
	$html .= "<td align=\"right\" class=\"poiRow2\" id=\"trafficWeek\"></td>";
	$html .= "</tr><tr class=\"poiTableHeader\">\n";
	$html .= "<td align=\"left\" class=\"poiRow1\">\&nbsp;Total:\&nbsp;</td>";
	$html .= "<td align=\"right\" class=\"poiRow1\"><span id=\"trafficTotal\"></span></td>";
	$html .= "</tr>\n";
	$html .= "</table>\n";
	$html .= "</div><!poiTableContainer>\n"; #poiTableContainer
	$html .= "</div><!poiTrafficReport>\n"; #poiTrafficReport
	
	$html .= "<div class=\"poiEstimatedValue\" style=\"\">\n";
	$html .= "<div class=\"poiTableContainer\"><p class=\"poiTableTitle\" align=\"left\"><b>EDSM Estimated Value</b></p>";
	$html .= "<table class=\"nearestTable edsmStatsTable\">\n";
	$html .= "<tr class=\"poiTableHeader\">\n";
	$html .= "<td align=\"left\" class=\"poiRow1\">\&nbsp;Scanned:\&nbsp;</td>";
	$html .= "<td align=\"right\" class=\"poiRow1\" id=\"estimatedScanned\"></td>";
	$html .= "</tr><tr class=\"poiTableHeader\">\n";
	$html .= "<td align=\"left\" class=\"poiRow2\">\&nbsp;Mapped:\&nbsp;</td>";
	$html .= "<td align=\"right\" class=\"poiRow2\" id=\"estimatedMapped\"></td>";
	$html .= "</tr>\n";
	$html .= "</table>\n";
	$html .= "</div><!poiTableContainer>\n"; #poiTableContainer
	$html .= "</div><!EstimatedValue>\n"; #poiTrafficReport
	
	$html .= "</div><!poiEDSMstats>\n"; #poiEDSMstats

	$html .= nearestNeighbors($poiID,\%params);
	$html .= carrierList($poiID,$params{id64});

	$html .= "<div id=\"poiMessageContainer\" class=\"poiMessageContainer\">\n";
	$html .= display_messages($poiID,\%params);
	$html .= "</div><!poiMessageContainer>\n";

	$html .= "</div><!poiRightDiv>\n"; #poiRightDiv

	if ($visible) {
		$html .= "<div id=\"poiRevisionHistoryContainer\" class=\"poiRevisionHistoryContainer\">\n";
		$html .= revision_history($poiID);
		$html .= "</div><!poiRevisionHistoryContainer>\n";
	}

	$html .= "</div><!poiBoundingBox>\n"; #poiBoundingBox

	my $dev = $DEV ? '.dev' : '';

	my $script = file_html("/www/edastro.com/catalog/rating_include$dev.html",undef,1);
	$script =~ s/<!\@POI_ID\@!>/$poiID/gs;
	$script =~ s/<!\@REL_URL\@!>/$relativeURL/gs;
	$script =~ s/<!\@SYSTEM\@!>/$params{systemname}/gs;
	$html .= $script."\n";

	render($html,"POI: $params{name}",undef,get_poi_image($poiID));
}


sub revision_history {
	my $poiID = shift;
	my $html = '';

	$html .= "<div class=\"poiTableContainer\"><p class=\"poiTableTitle\" align=\"left\"><b>Revision History:</b>";
	$html .= "</p>\n";
	$html .= "<table class=\"rebisionTable\">\n";
	$html .= "<tr class=\"poiTableHeader\">\n";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Edited By\&nbsp;</th>";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Edited Date\&nbsp;</th>\n";
	$html .= "</tr>\n";

	my @rows = db_mysql($db,"select editlog.ID,userID,username,edited from editlog,users where poiID=? and userID=users.ID order by edited desc",[($poiID)]);
		
	my $i = 0;
	foreach my $r (@rows) {
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';

		my $align = '';

		$html .= "<tr class=\"$class\">";

		$html .= "<td align=\"left\" class=\"$class\">\&nbsp;<a href=\"$relativeURL/profile/$$r{userID}\">".commanderName($$r{userID},$$r{username})."\&nbsp;</td>";
		$html .= "<td align=\"right\" class=\"$class\">\&nbsp;<a href=\"$relativeURL/editlog/$$r{ID}\">$$r{edited}</a>\&nbsp;</td>";

		$html .= "</tr>\n";

	}

	$html .= "</table>\n";
	$html .= "</div><!poiTableContainer>\n"; #poiTableContainer

	return $html;
}

sub cdn_links {
	my $html = shift;
	my $add_base = shift;
	my $use_markdown = shift;

	my $base = $cdn ? $cdn : $baseURL;

	if ($cdn || $add_base) {
		$html =~ s/<img\s+src="\/poiimages\//<img src="$base\/poiimages\//g if (!$use_markdown);
		$html =~ s/\]\(\/poiimages\//\]\($base\/poiimages\//g if ($use_markdown);
	}

	return $html;
}


sub cdn {
	my $url = shift;

	return $url if (!$cdn);

	if ($url !~ /^https?:/ && $url =~ /^\//) {
		return $cdn.$url;
	}

	return $url;
}

sub view_images {
	my $poiID = shift;
	my $returnHTML = shift;
	my %params = getPOIdata($poiID);
	my $html = '';

	exit if (!$poiID || !$params{name});

	my $href = getGalleryImages($poiID);
	$html .= "<input type=\"button\" class=\"poiButton\" value=\"+ Image\" onclick=\"greyout();location.href=\'$relativeURL/addimage/$poiID';\"><br/>\n" if ($sessionUserID);
	if (ref($href) eq 'HASH' && keys %$href) {

		my $toplink = $params{toplocalimage} ? $params{toplocalimage} : $params{topimage};

		$html .= galleryImageHTML($poiID,0,$toplink,$params{name}.' Main Image',$params{ownerID},
				$params{mainimagethumb},$params{mainimagehidden},1) if ($params{mainimage});

		foreach my $link (sort { $$href{$a}{title} cmp $$href{$b}{title} || $$href{$a}{ID} <=> $$href{$b}{ID} } keys %$href) {
			next if ($params{mainimage} && $$href{$link}{ID} == $params{mainimage});

			$html .= galleryImageHTML($poiID,$$href{$link}{ID},$link,$$href{$link}{title},$$href{$link}{ownerID},
					$$href{$link}{thumbnail},$$href{$link}{hidden},0);
		}
	}

	if ($returnHTML) {
		return $html;
	} 

	#print $q->header("text/html;charset=UTF-8");
	print html_header();
	print $html;
	exit;
}

sub galleryImageHTML {
	my $poiID   = shift;
	my $galID   = shift;
	my $link    = shift;
	my $title   = htmlify(shift);
	my $ownerID = shift;
	my $thumb   = shift;
	my $hidden  = shift;
	my $skipEdit= shift;
	my $html    = '';
	$galID += 0;

	my $url = htmlify($link);
	my $owner = htmlify(getUsername($ownerID));

	my $file = "$mainPATH$thumb";
	$file =~ s/\?.*$//s;

	if ((!$thumb || !-e $file)) {
		$thumb = htmlify(getThumbnail($galID,$link,$poiID));
	}

	$thumb  = $url if (!$thumb || !-e $file);
	$hidden = "poiGalleryImageHidden" if ($hidden);

	if ($hidden && (!$sessionUserID || !isAdmin())) {
		return '';
	}

	my $admin = '';
	my $note  = $galID ? '' : '<br/>(POI image)';

	if ($sessionUserID && (isAdmin() || $sessionUserID==getOwnerID($poiID))) {
		my $edit = '';
		$edit = "<input type=\"button\" class=\"poiButton poiButtonYellow boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
			"value=\"EDIT\" onclick=\"updateImage('editimage',$poiID,$galID);\">" if (!$skipEdit);
		$admin = "<br/><input type=\"button\" class=\"poiButton poiButtonRed floatRight\" style=\"padding-top:0;padding-bottom:0;\" value=\"$symbol{saltire}\" ".
			"onclick=\"updateImage('hideimage',$poiID,$galID);\">".
			"<input type=\"button\" class=\"poiButton poiButtonGreen floatLeft boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
			"value=\"\&uarr;\" onclick=\"updateImage('promoteimage',$poiID,$galID,'$url');\">$edit";
	}

	$html .= "<div class=\"poiGalleryImageContainer $hidden\">".
		"<a href=\"".cdn($url)."\" data-lightbox=\"galleryImage$galID\" data-title=\"$title\">".
		"<img src=\"".cdn($thumb)."\" alt=\"$title\" class=\"poiGalleryImage\"><br/>".
		"<span class=\"galleryTitle\">$title<br/></span></a>".
		"<span class=\"galleryNote\">Uploaded by <a href=\"$relativeURL/profile/$ownerID\">$owner</a>$note</span>".
		"$admin</div>\n";

	return $html;
}

sub getThumbnail {
	my $galID = shift;
	my $link  = shift;
	my $poiID = shift;
	my $isPOI = 0;

	my $imgID = $galID;
	if (!$galID) {
		return '' if (!$poiID);

		$imgID = $poiID;
		$isPOI = 1;
	}

	#info("getThumbnail( $galID, $link, $poiID)");

	if (my $ext = validate_imagelink($link)) {
		my $poiinsert = $isPOI ? 'poi/' : '';

		my $ext_orig = $ext;
		my $ext_new  = $ext;

		$ext_new = 'jpg' if ($ext_orig =~ /(jpg|jpeg|png)/);

		my $pid = sprintf("%09u",$imgID);
		$pid =~ /(\d{3})(\d{3})(\d{3})/;
		my $path  = "/poithumbs/$poiinsert$1/$2";
		my $fn    = "$3.$ext_new";
		my $tpath = "/www/edastro.com/poithumbs/incoming";
		my $tmp   = "$tpath/$3.$ext_orig";

		my $thumb = "$path/$3.jpg";
		my $file  = "/www/edastro.com$thumb";
		my $loc   = "/www/edastro.com$path";
		$thumb .= '?'.time;

		my $i_path  =  $path;  $i_path =~ s/poithumbs/poiphotos/gs;
		my $photo = "$i_path/$fn";
		my $i_file  = "/www/edastro.com$photo";
		my $i_loc   = "/www/edastro.com$i_path";
		$photo .= '?'.time;

		chdir $tpath;
		quiet_system('/usr/bin/mkdir','-p',$loc) if (!-d $loc);
		quiet_system('/usr/bin/mkdir','-p',$i_loc) if (!-d $i_loc);
		#quiet_system('/usr/bin/wget','-O',$tmp,$link);
		#warn "Getting $link >>> $tmp\n";
		my $size = binaryGET($link,$tmp,undef,$isPOI ? "poi:$poiID" : "gallery:$galID");
		if (!-e $tmp || !$size) {
			info("ERROR: $tmp not saved, from: $link");
			return '';
		}

		my $add = $ext_orig eq 'gif' ? '[0]' : '';

		quiet_system($convert,$tmp.$add,'-resize','180x180',$file);	# thumbnail

		if ($ext =~ /png/i || $ext ne $ext_orig) {
			quiet_system($convert,$tmp.$add,'-resize','1920x1280>',$i_file);	# local image
			info("Converted $tmp to $i_file") if (-e $i_file);
			info("Convert FAILED $tmp to $i_file") if (!-e $i_file);
		} else {
			move($tmp,$i_file);							# local image
			info("Moved $tmp to $i_file") if (-e $i_file);
			info("Move FAILED $tmp to $i_file") if (!-e $i_file);
		}

		unlink $tmp if (-e $file && -e $tmp);
		chdir;

		if ($isPOI) {
			db_mysql($db,"update poi set mainimagethumb=? where ID=?",[($thumb,$poiID)]);
			db_mysql($db,"update poi set toplocalimage=? where ID=?",[($photo,$poiID)]) if (-e $i_file);
		} else {
			db_mysql($db,"update gallery set thumbnail=? where ID=?",[($thumb,$galID)]);
			db_mysql($db,"update gallery set localimage=? where ID=?",[($photo,$galID)]) if (-e $i_file);
		}
		return $thumb;
	}

	return '';
}

sub update_thumbs {
	my @rows = db_mysql($db,"select ID,imagelink,thumbnail,poiID from gallery");
	foreach my $r (@rows) {
		print "Gallery.$$r{ID}: $$r{imagelink}\n";
		my $fn = $mainPATH.$$r{thumbnail};
		$fn =~ s/\?.*$//s;

		if (0) {
			print "\tDELETE: $fn\n";
			unlink $fn;
		}
		getThumbnail($$r{ID},$$r{imagelink},$$r{poiID});
	}

	#return;

	my @rows = db_mysql($db,"select ID,topimage from poi where deleted is null");
	foreach my $r (@rows) {
		print "POI.$$r{ID}: $$r{topimage}\n";
		getThumbnail(0,$$r{topimage},$$r{ID});
	}
}

sub b64_convert {
	my $s = shift;
	$s =~ s/_/\//gs;
	return $s;
}

sub image_update {
	my $action   = shift;
	my $poiID    = shift;
	my $imgID    = shift;
	my $newURL   = decode_base64(b64_convert(shift));
	my $newTITLE = decode_base64(b64_convert(shift));
	my $html = '';

	if (!$sessionUserID || (!isAdmin() && $sessionUserID!=getOwnerID($poiID))) {
		inline_error('Not authorized.');
	}

	if ($action eq 'hide') {
		if ($imgID == 0) {
			my @rows = db_mysql($db,"select ID,mainimage,mainimagehidden from poi where ID=?",[($poiID)]);
			foreach my $r (@rows) {
		
				db_mysql($db,"update poi set mainimagehidden=null  where ID=?",[($$r{ID})]) if ($$r{mainimagehidden});
				db_mysql($db,"update poi set mainimagehidden=now() where ID=?",[($$r{ID})]) if (!$$r{mainimagehidden});
			}
		} else {
			my @rows = db_mysql($db,"select * from gallery where poiID=? and ID=? and deleted is null",[($poiID,$imgID)]);
			foreach my $r (@rows) {
		
				db_mysql($db,"update gallery set hidden=null  where ID=?",[($$r{ID})]) if ($$r{hidden});
				db_mysql($db,"update gallery set hidden=now() where ID=?",[($$r{ID})]) if (!$$r{hidden});
			}
		}
	} elsif ($action eq 'promote') {
		db_mysql($db,"update poi set mainimage=? where ID=?",[($imgID,$poiID)]);

	} elsif ($action eq 'edit' || $action eq 'editsubmit') {
		
		my $href = getGalleryImages($poiID,$imgID);
		if (keys %$href) {
			my $link = (keys %$href)[0];
			my $ref = $$href{$link};

			$link = $$ref{imagelink} if ($$ref{imagelink});
			$link = $$ref{topimage} if ($$ref{topimage} && $$ref{mainimage}==$$ref{ID});
			my $owner = getUsername($$ref{ownerID});
			my $thumb = $$ref{thumbnail};
			my $title = htmlify($$ref{title});
			my $url   = htmlify($link);

			my $error = '';

			if ($newURL && $action eq 'editsubmit') {
				if ($newURL ne $link) {

					if (!validate_imagelink($newURL)) {
						$error .= "<span class=\"textred\">Image URL is not valid.</span><br/>";
					} else {
						my $thumb = getThumbnail($imgID,$newURL,$poiID);
	
						if (!$thumb) {
							$error .= "<span class=\"textred\">Image URL could not be retrieved.</span><br/>";
						} else {
							db_mysql($db,"update gallery set imagelink=? where ID=?",[($newURL,$imgID)]);
							$link = $newURL;
						}
					}
				}
				
				if ($newTITLE && $newTITLE ne $$ref{title}) {
					db_mysql($db,"update gallery set title=? where ID=?",[($newTITLE,$imgID)]);
					$title = htmlify($newTITLE);
				}

				if (!$error) {
					view_images($poiID);
					exit;
				}
			}

			$html .= "<div class=\"\"><h3>Editing Image Details</h3><table cellpadding=5 cellspacing=10 border=0><tr>".
				"<td valign=\"top\" align=\"left\" rowspan=4>".
				"<img src=\"$thumb\" alt=\"$title\" class=\"poiGalleryImage\"></td><td valign=\"top\" align=\"left\" colspan=2>".
				"Uploaded by <a href=\"$relativeURL/profile/$$ref{ownerID}\">$owner</a><br/>".
				"$error</td></tr>".

				"<tr><td align=\"right\"><label for=\"imageGalURL\">URL:</label></td><td><input type=\"text\" id=\"imageGalURL\" value=\"$link\" size=45 maxlength=255></tr>".
				"<tr><td align=\"right\"><label for=\"imageGalTITLE\">Title:</label></td><td><input type=\"text\" id=\"imageGalTITLE\" value=\"$title\" size=45 maxlength=255></tr>".

				"<tr><td valign=\"top\" align=\"left\" colspan=2>".
				#"<input type=\"button\" class=\"poiButton poiButtonYellow boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
				#"value=\"REFRESH\" onclick=\"updateImage('editimage',$poiID,$imgID);\">\&nbsp;\&nbsp;\&nbsp;".

				"<input type=\"button\" class=\"poiButton poiButtonYellow boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
				"value=\"CANCEL\" onclick=\"updateImage('cancelimage',$poiID,$imgID);\">\&nbsp;\&nbsp;\&nbsp;".

				"<input type=\"button\" class=\"poiButton poiButtonGreen boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
				"value=\"SAVE CHANGES\" onclick=\"updateImage('editsubmitimage',$poiID,$imgID,'',".
					"document.getElementById('imageGalURL').value,document.getElementById('imageGalTITLE').value);\">\&nbsp;\&nbsp;\&nbsp;".

				"<input type=\"button\" class=\"poiButton poiButtonRed boldtext\" style=\"padding-top:0;padding-bottom:0;\" ".
				"value=\"DELETE\" onclick=\"updateImage('deleteimage',$poiID,$imgID);\">\&nbsp;\&nbsp;\&nbsp;".

				"</td></tr></div>\n";
			
	
			print html_header();
			print $html;
			exit;
		}

	} elsif ($action eq 'delete') {

		db_mysql($db,"update gallery set deleted=NOW() where ID=?",[($imgID)]);
		

	} elsif ($action eq 'cancel') {
		# Do nothing

	}

	view_images($poiID);
	exit;
}

sub addimage {
	my $poiID = shift;
	my $html = '';

	my %poi = getPOIdata($poiID);

	if (!$poiID || !$poi{name}) {
		render_error('POI not found.');
	}

	if (!$sessionUserID) {
		render_error('Not authorized.');
	}

	my $error = '';
	my $title = $q->param('title');
	my $link  = $q->param('link');

	if (!$title || !$link) {
		$error = "Please fill in the required fields.";
	} elsif (!validate_imagelink($link)) {
		$error = "Image link is not valid";
	}

	if (!$title || !$link || $error) {
		$html .= "<div class=\"poiAddImageForm\"><form onsubmit=\"greyout();\" action=\"$relativeURL/addimage/$poiID\" method=\"GET\">\n";
		$html .= "<p class=\"lefttext boldtext\">Add image to <b>$poi{name}</b></p>\n";
		$html .= "<p class=\"lefttext\">Please provide both a link to a publically accessible image (Imgur, for instance) and a title to be displayed with the image thumbnail.</p>\n";
		$html .= "<p class=\"lefttext textred\">$error</p>\n" if ($error);
		$html .= "<table>\n";
		$html .= "<tr><td align=\"right\"><label for=\"link\">URL link for image:</label></td><td>";
		$html .= "<input type=\"text\" size=60 maxlength=255 name=\"link\" value=\"".htmlify($link)."\" required></td></tr>\n";
		$html .= "<tr><td align=\"right\"><label for=\"title\">Image title:</label></td><td>";
		$html .= "<input type=\"text\" size=32 maxlength=32 name=\"title\" value=\"".htmlify($title)."\" required></td></tr>\n";
		$html .= "<tr><td></td><td align=\"left\"><input type=\"submit\" value=\"Submit\"></td></tr>\n";
		$html .= "</table>\n";
		$html .= "</form></div>\n";

		render($html,"Add Image to POI");
	} else {
		my $id = db_mysql($db,"insert into gallery (created,poiID,ownerID,title,imagelink) values (now(),?,?,?,?)",[($poiID,$sessionUserID,$title,$link)]);
		getThumbnail($id);
		alertDiscord('Image added to '.$poi{name}.' ('.getUsername($poi{ownerID}).')', $poiID);
		redirect("$scriptURL/view/$poiID");
	}
}

sub binaryGET {
	my $url = shift;
	my $outfile = shift;
	my $retry = shift;
	my $tag = shift;

	my $referer = '';
	my $host = '';

	if ($url =~ /^https?:\/\/([\w\d\-\.]+)\//) {
		$host = $1;
	}

	my $ua = LWP::UserAgent->new;
	#$ua->agent('Mozilla/5.0');
	$ua->agent("Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/109.0");

	if ($url =~ /^(https:\/\/i\.postimg\.cc\/[\w\d]+)\//i) {
		$referer = $1;
		#$url .= "?dl=1" if ($url !~ /dl=1$/);
	}

	if ($url =~ /^https:\/\/media\.discordapp\.net\/attachments\/\d+\/\d+\/\S+?\.(png|gif|jpg|jpeg)\?.+/) {
		$url =~ s/\?.+$//s;
	}

	#my $response = $ua->get($url, "Accept"=>"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", Referer=>$referer, Host=>$host);
	my $response = $ua->get($url, "Accept"=>"image/avif,image/webp,*/*", Referer=>$referer, Host=>$host, 
		"Cache-Control"=>"no-cache", Pragma=>"no-cache", "Sec-Fetch-Dest"=>"image", "Sec-Fetch-Mode"=>"no-cors", "Sec-Fetch-Site"=>"same-site");

	if ($response->is_success) {
		my $bin_data = $response->decoded_content;

#		if ($url =~ /i\.postimg\.cc/ && $bin_data =~ /<html>/i && !$retry) {
#			return binaryGET($url,$outfile,1,$tag);
#		}

		open DATA, '>:raw', $outfile or return 0;
		print DATA $bin_data;
		close DATA;
		info("binaryGET SUCCESS [$sessionDATA{username}] $tag ($url)[".length($bin_data)." bytes]: ".$response->status_line);
		return length($bin_data);
	} elsif ($response->status_line =~ /^429/ && $url =~ /^(https?:\/\/(i\.)?imgur\.com\/([\w\d]+\.(png|jpg|jpeg|gif)))(\?\S+)?$/i) {
		info("binaryGET error [$sessionDATA{username}] $tag ($url): ".$response->status_line);
		my ($link, $i, $fn, $ext) = ($1, $2, $3, $4);
		#my $exec = "( /usr/bin/ssh -p 222 www\@reaper.necrobones.net 'curl $link' > $outfile ) 2>\&1";
		
		$link =~ s/\/imgur.com\//\/i.imgur.com\//s if (!$i);

		my $exec = "/usr/bin/ssh -p 222 www\@reaper.necrobones.net 'curl $link' > $outfile 2>/dev/null";
		info($exec);
		#info(split /[\r\n]+/s, `$exec`);
		system($exec);
		return (stat($outfile))[7];
	} else {
		info("binaryGET ERROR [$sessionDATA{username}] $tag ($url): ".$response->status_line);
	}
	return 0;
}

sub quiet_system {
	# https://perldoc.perl.org/perlfaq8#How-can-I-capture-STDERR-from-an-external-command%3f
	my @ok = ();
	open( EXEC, "-|", @_);
	chomp(@ok = <EXEC>);
	close EXEC;
#	open TXT, ">>/www/edastro.com/poithumbs/incoming/log";
#	print TXT @ok;
#	close TXT;
	return @ok;
}

sub get_URL_headers {
	my $url=shift;
	my $accept=shift;

	my $ua = new LWP::UserAgent;
	$ua->agent("Mozilla/5.0");
	my $req = new HTTP::Request 'HEAD' => $url;
	$req->header('Accept' => $accept) if ($accept);
	#$req->header('Content-Disposition' => 'inline');
	my $res = $ua->request($req);
	if ($res->is_success) {
		my $headers = $res->headers;
		return $headers;
	}
	return undef;
}

sub validate_imagelink {
	my $link = btrim(shift);

	my $header = get_URL_headers($link,'image/png, image/jpeg, image/gif');

	#print "Content-Type: text/plain\n\nURL = $link\n".Dumper($header)."\n\n";

	if (!$header && $link =~ /^\s*https?:\/\/.*\.(jpg|jpeg|png|gif)(\?.*)?(\#.*)?\s*$/i) { 
		return $1;
	}
	if ($header && $header->content_type =~ /^image\/(png|gif|jpeg)$/) {
		#warn "OK: $link\n";
		return $1;
	}
	#warn "FAIL: $link\n";
	return undef;
}

sub getGalleryImages {
	my $poiID = shift;
	my $imgID = shift;
	my %hash  = ();

	my $rows = rows_mysql($db,"select gallery.*,mainimage,topimage,toplocalimage from gallery,poi where poi.ID=? and poiID=poi.ID and gallery.deleted is null order by gallery.title,gallery.ID",[($poiID)]);
	if (ref($rows) eq 'ARRAY' && @$rows) {
		foreach my $r (@$rows) {
			next if ($imgID && $imgID!=$$r{ID});

			if ($$r{localimage}) {
				$hash{$$r{localimage}} = $r;
				delete($hash{$$r{localimage}}{localimage});	# using URL as hash key, redundant
			} else {
				$hash{$$r{imagelink}} = $r;
				delete($hash{$$r{imagelink}}{imagelink});	# using URL as hash key, redundant
			}
		}
	}
	return \%hash;
}

sub getImageLink {
	my $id = shift;

	my @rows = db_mysql($db,"select imagelink,localimage from gallery where ID=? and deleted is null",[($id)]);
	if (@rows) {
		return ${$rows[0]}{localimage} if (${$rows[0]}{localimage});
		return ${$rows[0]}{imagelink};
	} else {
		return '';
	}
}

sub getMainImage {
	my $poiID = shift;

	my @rows = db_mysql($db,"select imagelink,localimage from poi,gallery where poi.ID=? and poi.mainimage=gallery.ID",[($poiID)]);
	if (@rows) {
		return ${$rows[0]}{localimage} if (${$rows[0]}{localimage});
		return ${$rows[0]}{imagelink};
	} else {
		return '';
	}
}

sub get_msgs {
	#print "Content-type: text/html; charset=utf-8\n\n";
	#print $q->header("text/html;charset=UTF-8");
	print html_header();
	my $poiID = shift;
	my $ownerID = getOwner($poiID);
	print display_messages($poiID,{ownerID=>$ownerID});
	exit;
}

sub inline_error {
	my $error = shift;
	#print $q->header("text/html;charset=UTF-8");
	print html_header();
	print "<span class=\"textred\">$error</span>\n\n";
	exit;
}

sub edit_msg {
	my $msgID = shift;
	my $text = join '/', @_;
	$text = $q->param('text') if (!$text && $q->param('text'));
	my $r = {};
	$text = convert_qmarks($text);

	my @rows = db_mysql($db,"select * from msgs where ID=?",[($msgID)]);
	if (@rows) {
		$r = shift @rows;
	} else {
		inline_error('Message not found.');
	}

	if (!$sessionUserID || $sessionUserID != $$r{authorID}) {
		inline_error('Not authorized.');
	}

	if (length($text)<4) {
		inline_error('Message is too short');
	}

	db_mysql($db,"update msgs set message=?,edited=now() where ID=?",[($text,$msgID)]);
	commentDiscord($msgID,1);
	emailMessage('edit','msgs',$msgID,$sessionUserID);

	get_msgs($$r{poiID});
	exit;
}

sub edit_reply {
	my $msgID = shift;
	my $text = join '/', @_;
	$text = $q->param('text') if (!$text && $q->param('text'));
	my $r = {};
	$text = convert_qmarks($text);

	my @rows = db_mysql($db,"select replies.*,poiID from replies,msgs where replyID=? and replies.msgID=msgs.ID",[($msgID)]);
	if (@rows) {
		$r = shift @rows;
	} else {
		inline_error('Message reply not found.');
	}

	if (!$sessionUserID || $sessionUserID != $$r{authorID}) {
		inline_error('Not authorized.');
	}

	if (length($text)<4) {
		inline_error('Reply is too short');
	}

	db_mysql($db,"update replies set reply=?,edited=now() where replyID=?",[($text,$msgID)]);
	replyDiscord($msgID,1);
	emailMessage('edit','replies',$msgID,$sessionUserID);

	get_msgs($$r{poiID});
	exit;
}

sub post_reply {
	my $msgID = shift;
	my $text = join '/', @_;
	$text = $q->param('text') if (!$text && $q->param('text'));
	my $r = {};
	$text = convert_qmarks($text);

	if (!$sessionUserID) {
		inline_error('Not authorized.');
	}

	if (length($text)<4) {
		inline_error('Reply is too short');
	}

	my @rows = db_mysql($db,"select poi.ownerID,poi.name,poiID,msgs.hidden from msgs,poi where msgs.ID=? and msgs.poiID=poi.ID and msgs.hidden is null and msgs.deleted is null",[($msgID)]);
	if (@rows) {
		$r = shift @rows;
	} else {
		inline_error('Message not found.');
	}
	
	my $id = db_mysql($db,"insert into replies (created,authorID,msgID,reply) values (now(),?,?,?)",[($sessionUserID,$msgID,$text)]);

	#alertDiscord('REPLIED to comment: '.$$r{name}.' ('.getUsername($$r{ownerID}).')', $$r{poiID});
	replyDiscord($id); # if (!$DEV); # FIX
	emailMessage('post','replies',$id,$sessionUserID);

	get_msgs($$r{poiID});
	exit;
}

sub display_messages {
	my ($poiID, $params) = @_;
	my $html = '';

	my $shown = 0;
	my $hideAnd ='';
	$hideAnd = 'and hidden is null' if (!$sessionUserID || !isAdmin());

	my @rows = db_mysql($db,"select * from msgs where poiID=? and deleted is null $hideAnd order by created desc",[($poiID)]);

	my $msgHTML = '';
	my @ids = ();

	foreach my $r (@rows) {
		my $ok = 0;
		if ($$r{visibility} == 0) {

			# visibility==0: Author, POI owner, and staff/curators only

			$ok = 1 if ($sessionUserID && ($sessionUserID == $$params{ownerID} || $$r{authorID} == $sessionUserID || isAdmin()));

		} elsif ($$r{visibility} == 1) {

			# visibility==1: Author and staff/curators only

			$ok = 1 if ($sessionUserID && ($$r{authorID} == $sessionUserID || isAdmin()));

		} elsif ($$r{visibility} == 2) {

			# visibility==2: Fully public

			$ok = 1;

		}

		if ($ok || $$r{visibility} == 2) {
			$msgHTML .= display_message($$r{ID},1,$r);
			push @ids, $$r{ID};
			$shown++;
		}
	}

	if ($sessionUserID && ($allow_commenting || isAdmin())) {
		$html .= "<input type=\"button\" class=\"poiButton floatRight\" onclick=\"greyout();location.href='$scriptURL/msg/$poiID'\" value=\"New Message\">\n";
	}
	$html .= "<input type=\"button\" class=\"poiButton floatRight\" onclick=\"refreshMsgs();\" value=\"Refresh\">\n";

	if (@ids) {
		my $firstID = $ids[0];
		my $list = join ',',reverse @ids;
		my $script = "
let msgs = [$list];

if (document.getElementById('replies$firstID').style.visibility === 'hidden') {
	for (let i=0; i<msgs.length; i++) {
		document.getElementById('replies'+msgs[i]).style.display='block';
		document.getElementById('replies'+msgs[i]).style.visibility='visible';
		document.getElementById('triangle'+msgs[i]).innerHTML = '$symbol{triangledown}';
	}
} else {
	for (let i=0; i<msgs.length; i++) {
		document.getElementById('replies'+msgs[i]).style.display='none';
		document.getElementById('replies'+msgs[i]).style.visibility='hidden';
		document.getElementById('triangle'+msgs[i]).innerHTML = '$symbol{triangleright}';
	}
}
";
		$script =~ s/[\s\r\n\t]+/ /gs;
		$html .= "<input type=\"button\" class=\"poiButton floatRight\" onclick=\"$script\" value=\"Toggle Replies\">\n";
	}

	$html .= "<span class=\"poiTableTitle boldtext\">Messages for this POI:</span><br/>\n";

	$html .= $msgHTML;
	$html .= "<span class=\"poiTableTitle boldtext\">None.</span><br/>\n" if (!$shown);
	return $html;
}


sub display_message {
	my ($msgID, $threading, $ref) = @_;
	my $html = '';

	my @rows = ();
	push @rows, $ref if ($ref);
	push @rows, db_mysql($db,"select * from msgs where ID=? and deleted is null",[($msgID)]) if (!@rows);
	foreach my $r (@rows) {
		my $replies = 0;
		my @reps = ();

		if (!$threading) {
			my @rep = db_mysql($db,"select count(*) as num from replies where msgID=? and deleted is null",[($msgID)]);
			if (@rep) {
				$replies = ${$rep[0]}{num};
			}
		} else {
			@reps = db_mysql($db,"select * from replies where msgID=? and deleted is null order by created",[($msgID)]);
			$replies = int(@reps);
		}

		my $ts = $$r{created};
		$ts =~ s/\s+/\&nbsp;/gs;

		my $reasoncolor = '';
		$reasoncolor = 'Red' if ($$r{reason} =~ /delete|deletion|report/i);
		$reasoncolor = 'Yellow' if ($$r{reason} =~ /hidden|error|problem|inappropriate/i);

		my $visibility = 'Undefined';

		# Authorship visibility:
		$visibility = 'POI Submitter, and '.$admin_TITLES if ($$r{visibility} == 0);
		$visibility = $admin_TITLES if ($$r{visibility} == 1);
		$visibility = 'Public' if ($$r{visibility} == 2);
		$visibility = 'Hidden' if ($$r{hidden});

		my $msgHidden = $$r{hidden} ? 'msgHidden' : '';

		my $repliestoggle = '';
		if ($threading) {
			my $script = "
if (document.getElementById('replies$$r{ID}').style.visibility === 'hidden') {
	document.getElementById('replies$$r{ID}').style.display='block';
	document.getElementById('replies$$r{ID}').style.visibility='visible';
	document.getElementById('triangle$$r{ID}').innerHTML = '$symbol{triangledown}';
} else {
	document.getElementById('replies$$r{ID}').style.display='none';
	document.getElementById('replies$$r{ID}').style.visibility='hidden';
	document.getElementById('triangle$$r{ID}').innerHTML = '$symbol{triangleright}';
}
";

			$script =~ s/[\s\r\n\t]+/ /gs;
			$repliestoggle = "<span class=\"msgToggle\"><a id=\"toggle$$r{ID}\" onclick=\"$script\"><span id=\"triangle$$r{ID}\">$symbol{triangledown}</span> Replies: ".commify($replies)."</a></span>";
		}

		$html .= "<table class=\"msgTable msgTopPost $msgHidden\">\n";

		$html .= "<tr class=\"msgReason$reasoncolor\"><td class=\"msgReason$reasoncolor textRight\">Reason:</td><td class=\"msgReason$reasoncolor\" colspan=2>".
			"$$r{reason}</td><td class=\"msgReason$reasoncolor textRight\">$ts</td></tr>\n";

		$html .= "<tr class=\"msgFrom\"><td class=\"msgFrom textRight\">From:</td><td class=\"msgFrom\" colspan=3>".commanderName($$r{authorID});
		$html .= "</td></tr>\n";

		my $editBox = '';
		my $editButton = '';
		my $edited = '';

		if ($sessionUserID && $$r{authorID} == $sessionUserID) {

			$editBox = "<div id=\"editMsg$$r{ID}\" class=\"msgReplyBox\" style=\"display:none;visibility:hidden;\">\n".
				"<form id=\"msgEditForm$$r{ID}\">\n<textarea name=\"msgEditText$$r{ID}\" id=\"msgEditText$$r{ID}\" ".
				"class=\"msgReplyText\" maxlength=1000>".htmlify($$r{message})."</textarea>\n".
				"<span><input type=\"button\" class=\"poiButton\" value=\"Submit Text\" onclick=\"postMsgEdit($$r{ID});\"></span>".
				"<span><input type=\"button\" class=\"poiButton\" value=\"Cancel\" onclick=\"editMsg($$r{ID});\"></span></div>\n";

			$editButton = "<input type=\"button\" class=\"poiButton floatRight\" value=\"Edit\" id=\"editButton$$r{ID}\" onclick=\"editMsg($$r{ID});\">\n" if (!$$r{hidden});
		}

		$edited = "<br/><br/>[Edited: $$r{edited}]" if ($$r{edited});

		$html .= "<tr class=\"msgText\"><td class=\"msgText\" colspan=4><div id=\"msgText$$r{ID}\">$editButton".my_markdown($$r{message},1)."$edited</div>$editBox</td></tr>\n";

		$html .= "<tr class=\"msgDetails\"><td class=\"msgDetails\">$repliestoggle</td><td class=\"msgDetails textRight\" colspan=3>Visibility: $visibility\&nbsp;";

#		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Hide\" onclick=\"greyout();location.href='$scriptURL/hidemsg/$$r{ID}'\">" 
#				if (!$$r{hidden} && $sessionUserID && isAdmin());
#		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Un-hide\" onclick=\"greyout();location.href='$scriptURL/un',hidemsg/$$r{ID}'\">" 
#				if ($$r{hidden} && $sessionUserID && isAdmin());
		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Hide\" onclick=\"msgaction('hidemsg',$$r{ID});\">" 
				if (!$$r{hidden} && $sessionUserID && isAdmin($sessionUserID));
		$html .= "<input type=\"button\" class=\"poiButton\" value=\"Un-hide\" onclick=\"msgaction('unhidemsg',$$r{ID});\">" 
				if ($$r{hidden} && $sessionUserID && isAdmin());

		$html .= "</tr>\n";

		if ($threading) {
			$html .= "<tr class=\"msgReplies\"><td class=\"msgReplies\" colspan=4>\n";
			$html .= "<div id=\"replies$$r{ID}\" class=\"msgHide\">\n";

			if ($replies) {
				$html .= "<span class=\"bigText floatLeft\">$symbol{replyarrow}</span>\n";
				$html .= "<table class=\"msgTable msgReply\">\n";
	
				foreach my $re (@reps) {
					my $ts = $$re{created};
					$ts =~ s/\s+/\&nbsp;/gs;

					my $editBox = '';
					my $editButton = '';
					my $edited = '';

					if ($sessionUserID && $$re{authorID} == $sessionUserID) {

						$editBox = "<div id=\"editReply$$re{replyID}\" class=\"msgReplyBox\" style=\"display:none;visibility:hidden;\">\n".
							"<form id=\"replyEditForm$$re{replyID}\">\n<textarea name=\"msgEditReply$$re{replyID}\" ".
							"id=\"msgEditReply$$re{replyID}\" class=\"msgReplyText\" maxlength=1000>".htmlify($$re{reply})."</textarea>\n".
							"<span><input type=\"button\" class=\"poiButton\" value=\"Submit Text\" onclick=\"postReplyEdit($$re{replyID});\">".
							"</span><span><input type=\"button\" class=\"poiButton\" value=\"Cancel\" onclick=\"editReply($$re{replyID});\">".
							"</span></div>\n";

						$editButton = "<input type=\"button\" class=\"poiButton floatRight\" value=\"Edit\" id=\"editButton$$re{replyID}\" ".
							"onclick=\"editReply($$re{replyID});\">\n" if (!$$r{hidden});
					}

					$edited = "<br/><br/>[Edited: $$re{edited}]" if ($$re{edited});
		
					$html .= "<tr class=\"msgFrom\"><td class=\"msgFrom textRight\">From:</td><td class=\"msgFrom\" colspan=2>".commanderName($$re{authorID})."\&nbsp;\&nbsp;\&nbsp;</td><td class=\"msgFrom textRight\">$ts</td></tr>\n";
					$html .= "<tr class=\"msgText\"><td class=\"msgText\" colspan=4><div id=\"msgReply$$re{replyID}\">$editButton".my_markdown($$re{reply},1)."$edited</div>$editBox</td></tr>\n";
				}
	
				$html .= "</table><br/>\n";
			}

			if (!$$r{hidden}) {
				$html .= "<input type=\"button\" class=\"poiButton\" value=\"+ Reply\" id=\"replyButton$$r{ID}\" onclick=\"createReply($$r{ID});\">\n" if ($sessionUserID);
	
				$html .= "<div id=\"replyBox$$r{ID}\" class=\"msgReplyBox\" style=\"display:none;visibility:hidden;\">\n";
				$html .= "Write reply:<br/><form id=\"msgReplyForm$$r{ID}\">".
					"<textarea name=\"msgReplyText$$r{ID}\" id=\"msgReplyText$$r{ID}\" class=\"msgReplyText\" maxlength=1000></textarea>".
					"<span><input type=\"button\" class=\"poiButton\" value=\"Submit Reply\" onclick=\"postReply($$r{ID});\"></span></form>\n";
				$html .= "</div>\n";
			}

			$html .= "</div>\n";
			$html .= "</td></tr>\n";
		}

		$html .= "</table>\n";
	}

	return $html;
}

sub editlog {
	my $logID = shift;
	my $poiID = 0;
	my $html  = '';
	my $prev  = 0;
	my $next  = 0;
	my $log = {};
	my $old = {};

	my @rows = db_mysql($db,"select editlog.*,poi.name from editlog,poi where editlog.ID=? and poiID=poi.ID",[($logID)]);
	if (@rows) {
		$log = shift @rows;
		$poiID = $$log{poiID};
	} else {
		render_error('Log entry not found');
		exit;
	}

	@rows = db_mysql($db,"select * from editlog where poiID=? and edited<? order by edited desc limit 1",[($poiID,$$log{edited})]);

	if (@rows) {
		$old = shift @rows;
		$prev = $$old{ID};
	}

	@rows = db_mysql($db,"select ID from editlog where poiID=? and edited>? order by edited asc limit 1",[($poiID,$$log{edited})]);

	if (@rows) {
		$next = ${$rows[0]}{ID};
	}

	$html .= "<div class=\"poiEditLogView\">\n";
	$html .= "<table class=\"poiEditLogTable\">\n";

	my $type = $prev ? 'Revision' : 'Original submission';

	$html .= "<tr><td colspan=3 class=\"poiEditLogTitle\" align=\"center\">$type for <a href=\"$relativeURL/view/$poiID\">$$log{name}</a><br/><br/></td></tr>\n";

	$html .= "<a href=\"$relativeURL/editlog/$prev\" class=\"next floatLeft\">$symbol{prev}</a>\n" if ($prev);
	$html .= "<a href=\"$relativeURL/editlog/$next\" class=\"next floatRight\">$symbol{next}</a>\n" if ($next);

	if ($prev) {
		$html .= "<tr>";
		$html .= "<td class=\"poiEditLogTitle\">Previous Revision, by ".getUsername($$old{userID})." [$$old{edited}]</td>" if ($prev);
		$html .= "<td class=\"poiEditLogArrow\" align=\"center\">&rarr;</td>";
		$html .= "<td class=\"poiEditLogTitle\">Selected revision, by ".getUsername($$log{userID})." [$$log{edited}]</td>";
		$html .= "</tr>\n";
	} else {
		$html .= "<tr><td></td><td>Original submission, by ".getUsername($$log{userID})." [$$log{edited}]</td></tr>\n";
	}

	getCategories();
	getRegions();

	foreach my $f (qw(discoverer name systemname catID catID2 region latitude longitude callsign summary description journal observatory)) {
		my $label = uc($f);

		$label = uc('category') if ($f eq 'catID');
		$label = uc('category 2') if ($f eq 'catID2');

		my $val_old = $$old{$f};
		my $val_log = $$log{$f};

		if ($f eq 'region') {
			$val_old = $lookup_region{$$old{$f}};
			$val_log = $lookup_region{$$log{$f}};
		}
		if ($f =~ /^catID/) {
			$val_old = $lookup_category{$$old{$f}};
			$val_log = $lookup_category{$$log{$f}};
		}
		if ($f =~ /latitude|longitude/) {
			$val_old+=0 if (defined($val_old));
			$val_log+=0 if (defined($val_log));
		}

		$html .= "<tr><td colspan=3 class=\"poiEditLogTitle\" align=\"center\">$label</td></tr>\n";

		if ($f =~ /description|journal|observatory/) {
			my $rows = $f eq 'description' ? 20 : 8;

			$html .= "<tr>";
			$html .= "<td class=\"poiEditLogCell\"><textarea cols=80 rows=$rows readonly>".htmlify($val_old)."</textarea></td>" if ($prev);
			$html .= "<td class=\"poiEditLogArrow\" align=\"center\">&rarr;</td>";
			$html .= "<td class=\"poiEditLogCell\"><textarea cols=80 rows=$rows readonly>".htmlify($val_log)."</textarea></td>";
			$html .= "</tr>\n";
		} else {
			$html .= "<tr>";
			$html .= "<td class=\"poiEditLogCell\">".htmlify($val_old)."</td>" if ($prev);
			$html .= "<td class=\"poiEditLogArrow\" align=\"center\">&rarr;</td>";
			$html .= "<td class=\"poiEditLogCell\">".htmlify($val_log)."</td>";
			$html .= "</tr>\n";
		}

		if ($f =~ /description/) {
			$html .= "<tr>";
			$html .= "<td class=\"poiEditLogCell\">".my_markdown($$old{$f})."</td>" if ($prev);
			$html .= "<td class=\"poiEditLogArrow\" align=\"center\">&rarr;</td>";
			$html .= "<td class=\"poiEditLogCell\">".my_markdown($$log{$f})."</td>";
			$html .= "</tr>\n";
		}
	}

	$html .= "</table>\n";
	$html .= "</div><!poiEditLogView>\n";
	render($html);
	exit;
}

sub carrierList {
	my $poiID = shift;
	my $id64 = shift;
	my $html = '';

	$poiID =~ s/[^\d]+//gs;
	return '' if (!$poiID);

	my $fn = "$carrierPath/$id64.csv";
	return '' if (!-e $fn);

	my %c = ();

	open CSV, '<:encoding(UTF-8)', $fn;
	while (<CSV>) {
		chomp;
		s/[\r\n\s]+$//s;

		my @v = parse_csv($_);

		$c{$v[0]}{cs}   = $v[0];
		$c{$v[0]}{name} = $v[1];
		$c{$v[0]}{date} = $v[2];

		$c{$v[0]}{name} =~ s/\{QUOT\}/"/gs;
	}
	close CSV;

	return '' if (!keys(%c));

	my $widthadd = ' style="width:480px"';

        my $rightarrow = '&#x25B6;';
        my $downarrow = '&#x25BC;';
	my $js = "
let divID = 'carrierdetails';
let buttonID = 'carriertoggle';
if (document.getElementById(buttonID).innerHTML == '$rightarrow') {
        document.getElementById(buttonID).innerHTML = '$downarrow';
	let itemlist1 = document.getElementsByClassName('carriertoggle');
	for (let i=0; i<itemlist1.length; i++) {
		itemlist1[i].style.visibility = 'visible';
		itemlist1[i].style.display = 'table-row';
	}
} else {
        document.getElementById(buttonID).innerHTML = '$rightarrow';
	let itemlist1 = document.getElementsByClassName('carriertoggle');
	for (let i=0; i<itemlist1.length; i++) {
		itemlist1[i].style.visibility = 'hidden';
		itemlist1[i].style.display = 'none';
	}
}
";
	$js =~ s/[\r\n]+/ /gs;


	$html .= "<div class=\"poiTableContainer\"$widthadd><p class=\"poiTableTitle\" align=\"left\"><b>Carriers Last Seen in this System:</b>";
	$html .= "</p>\n";
	$html .= "<table class=\"nearestTable\"$widthadd>\n";
	$html .= "<tr class=\"poiTableHeader\">\n";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Callsign\&nbsp;</th>\n";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Name\&nbsp;</th>";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Date\&nbsp;</th></tr>\n";

	my $n = 0;
	my $i = 0;
	my $add_hidden = 0;

	foreach my $cs (sort {$c{$b}{date} cmp $c{$a}{date} || $c{$a}{cs} cmp $c{$b}{cs}} keys %c) {
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';

		foreach my $k (keys %{$c{$cs}}) {
			$c{$cs}{$k} = htmlify($c{$cs}{$k});
			$c{$cs}{$k} =~ s/\s+/\&nbsp;/gs;
			$c{$cs}{$k} =~ s/\-+/\&#8209;/gs;
		}
		my $style = '';
		$style = 'style="visibility:hidden;display:none;"' if ($n >= 8);
		my $toggle = '';
		$toggle = ' carriertoggle' if ($n >= 8);

		$html .= "<tr class=\"$class$toggle\" $style>";
		$html .= "<td class=\"$class\">$c{$cs}{cs}\&nbsp;</td>";
		$html .= "<td class=\"$class ellipsis\">\&nbsp;$c{$cs}{name}\&nbsp;</td>";
		$html .= "<td align=\"right\" class=\"$class\">\&nbsp;$c{$cs}{date}\&nbsp;</td>";
		$html .= "</tr>\n";

		$n++;

		if ($n == 8) {

			my $remaining = int(keys(%c)) - $n;

			if ($remaining) {
				$add_hidden = 1;

				$i = 1 - $i;
				my $class = $i ? 'poiRow1' : 'poiRow2';
				$html .= "<tr class=\"$class\"><td class=\"$class\" colspan=3><span onclick=\"$js\" style=\"cursor: pointer;\"><span id=\"carriertoggle\">$rightarrow</span>\&nbsp;\&nbsp;+ $remaining additional carriers.</span></td></tr>\n";
			}

		}
	}

	$html .= "</table>\n";
	$html .= "</div><!poiTableContainer>\n"; #poiTableContainer
	return $html;
}

sub nearestNeighbors {
	my $poiID = shift;
	my $p = shift;	# Params for starting point
	my $html = '';

#	my @list = ();
#	my %seen = ();
#	$seen{uc(btrim($$p{systemname}))} = 1;
#
#	foreach my $r (@rows) {
#		push @list, $r ;# if (!$seen{uc(btrim($$r{systemname}))});
#		$seen{uc(btrim($$r{systemname}))} = 1;
#	}

	my $widthadd = ' style="width:480px"';

	$html .= "<div class=\"poiTableContainer\"$widthadd>\n";

	foreach my $catalog ('GEC','GMP') {
		my @rows = ();

		@rows = db_mysql($db,"select 'GEC' as source,ID,name,systemname,score,sqrt(pow(coord_x-?,2) + pow(coord_y-?,2) + pow(coord_z-?,2)) as distance ".
			"from poi where ID!=? and hidden is null and approved is not null and deleted is null and ".
			" coord_x is not null and coord_y is not null and coord_z is not null order by distance limit 10",
			[($$p{coord_x},$$p{coord_y},$$p{coord_z},$poiID)]) if ($catalog eq 'GEC');

		@rows = db_mysql($db,"select 'GMP' as source,name,galMapSearch as systemname,galMapUrl,".
				"sqrt(pow(coord_x-?,2) + pow(coord_y-?,2) + pow(coord_z-?,2)) as distance from GMP ".
				"where galMapSearch is not null and coord_x is not null and coord_y is not null and coord_z is not null ".
				"order by distance limit 10", [($$p{coord_x},$$p{coord_y},$$p{coord_z})]) if ($catalog eq 'GMP');

	$html .= "<p class=\"poiTableTitle\" align=\"left\"><b>Nearest $catalog Neighbors:</b>";
	#$html .= " ($poiID: $$p{coord_x} / $$p{coord_y} / $$p{coord_z})";
	$html .= "</p>\n";
	$html .= "<table class=\"nearestTable\"$widthadd>\n";
	$html .= "<tr class=\"poiTableHeader\">\n";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;POI Name\&nbsp;</th><th class=\"poiTableHeader\">\&nbsp;Distance\&nbsp;</th>";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;Rating\&nbsp;</th>\n";
	$html .= "<th class=\"poiTableHeader\">\&nbsp;System\&nbsp;</th></tr>\n";
	my $i = 0;
	my $n = 0;
	foreach my $r (sort { $$a{distance} <=> $$b{distance} } @rows) {
		$i = 1 - $i;
		my $class = $i ? 'poiRow1' : 'poiRow2';
		$$r{systemname} = $$r{galMapSearch} if ($$r{galMapSearch} && !$$r{systemname});
		my $align = '';
		my %disp = %$r;

		#$disp{name} = "[GMP] $disp{name}" if ($$r{source} eq 'GMP');

		$disp{name} = substr($disp{name},0,26).'...' if (length($disp{name})>29);
		$disp{systemname} = substr($disp{systemname},0,17).'...' if (length($disp{systemname})>20);

		foreach my $k (qw(systemname name)) {
			$disp{$k} = htmlify($disp{$k}) if ($k ne 'name' || $$r{source} ne 'GMP');
			$disp{$k} =~ s/\s+/\&nbsp;/gs;
			$disp{$k} =~ s/\-+/\&#8209;/gs;
		}

		$html .= "<tr class=\"$class\">";
		my $val = '';

		my $source = $$r{source} eq 'GMP' ? $$r{source} : '';
		my $score  = $$r{source} eq 'GMP' ? 'N/A' : commify(sprintf("%.02f",$$r{score}));

		$val = "<a href=\"$relativeURL/view/$$r{ID}\">$disp{name}</a>" if ($$r{source} eq 'GEC');
		$val = "<a href=\"$$r{galMapUrl}\">$disp{name}</a>" if ($$r{source} eq 'GMP');
		#$html .= "<td class=\"$class\">$source</td>\n";
		$html .= "<td class=\"$class ellipsis\">$val\&nbsp;</td>";

		$html .= "<td align=\"right\" class=\"$class\">\&nbsp;".commify(sprintf("%.02f",$$r{distance}))."\&nbsp;</td>";
		$html .= "<td align=\"right\" class=\"$class\">\&nbsp;$score\&nbsp;</td>";

		$val = "<a href=\"$relativeURL/system/$$r{systemname}\">$disp{systemname}</a>" if ($$r{source} eq 'GEC');
		$val = "<a href=\"$$r{galMapUrl}\">$disp{systemname}</a>" if ($$r{source} eq 'GMP');
		$html .= "<td class=\"$class ellipsis\">\&nbsp;$val\&nbsp;</td>";

		$html .= "</tr>\n";

		$n++;
		last if ($n >= 8);
	}
	
	$html .= "</table>\n";

	}

	$html .= "</div><!poiTableContainer>\n"; #poiTableContainer
	return $html;
}

sub getGMPwarning {
	my $name  = shift;
	my $type  = shift;
	my $poiID = shift;
	my @rows  = db_mysql($db,"select id,name,galMapSearch,galMapUrl,type,descriptionMardown from GMP where galMapSearch=?",[($name)]);
	my $html  = '';


	my $class = $type =~ /edit|new/i ? ' gmpWarningRed' : '';

	if (@rows) {
		my $r = shift @rows;
	
		if (0) { # See if GMP entry points back to same star system
			while ($$r{descriptionMardown} =~ /https?:[\\\/]+edastro\.com[\\\/]+gec[\\\/]+view[\\\/]+(\d+)/ig) {
				my @data =  db_mysql($db,"select systemname from poi where ID=?",[($1)]);
				if (@data) {
					my $d = shift @data;
					return '' if (btrim(uc($$d{systemname})) eq btrim(uc($$r{galMapSearch})));
				}
			}
		}

		if (1) { # See if GMP entry contains link referring back to this POI
			if ($$r{descriptionMardown} =~ /https?:[\\\/]+edastro\.com[\\\/]+gec[\\\/]+view[\\\/]+$poiID($|\D)/ig) {
				return '';
			}
		}

		foreach my $k (keys %$r) {
			$$r{$k} = htmlify($$r{$k}) if ($k ne 'name');	# Name already encoded in the DB
		}

		$html .= "<tr><td colspan=2><div class=\"gmpWarning$class\">\n";

		if ($type eq 'view') {
#			$html .= filter("<p><b>Notice:</b> This POI is based on, or shares the same star system with a prior existing entry in ".
#				"the Galactic Mapping Project (GMP). You can visit the original entry using the link below:</p>\n");
			$html .= filter("<p><b>Notice:</b> This POI shares the same star system with a prior existing entry in ".
				"the Galactic Mapping Project (GMP). You can visit the original entry using the link below:</p>\n");
		} else {
			$html .= filter("<p><b>Warning</b> There is a prior existing entry for this star system in ".
				"the Galactic Mapping Project (GMP). You can visit the original entry using the link below. ".
				"Please consider making this POI submission a reference to the original GMP entry only, if you ".
				"are not the creator of the original GMP submission, or do not have the permission of its creator.</p>\n");
		}
		$html .= "<p>\&nbsp;\&nbsp;\&nbsp;\&nbsp;<a href=\"$$r{galMapUrl}\">$$r{name} ($$r{type}), $$r{galMapSearch}</a></p>\n";
		$html .= "</div></td></tr>\n";
	}

	return $html;
}

sub record_editlog {
	my $poiID = shift;
	my $ref   = shift;
	my %data  = ();
	
	if ($ref && ref($ref) eq 'HASH') {
		%data = %$ref;
	} else {

		my @rows = db_mysql($db,"select * from poi,poidata where poi.ID=? and poi.ID=poidata.poiID",[($poiID)]);

		foreach my $r (@rows) {
			%data = %$r;
		}
	}

	db_mysql($db,"insert into editlog (edited,poiID,userID,catID,catID2,name,systemname,region,callsign,summary,discoverer,description,journal,observatory,".
			"latitude,longitude) values (now(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)",[($data{ID},$sessionUserID,$data{catID},$data{catID2},
			$data{name},$data{systemname},$data{region},$data{callsign},$data{summary},$data{discoverer},$data{description},$data{journal},
			$data{observatory},$data{latitude},$data{longitude})]);
}

sub edit_entry {
	my @req   = @_;
	my $poiID = $req[0];

	if (!$sessionUserID) {
		render_error('Must be logged in.');
	} elsif (!$poiID) {
		render_error('Invalid POI ID');
	}

	my $rows = rows_mysql($db,"select * from poi,poidata where poi.ID=? and poiID=poi.ID and deleted is null",[($poiID)]);

	if (!$rows || ref($rows) ne 'ARRAY' || !@$rows) {
		render_error('POI not found.');
	} else {
		update_entry('edit',$$rows[0],@req);
	}
}

sub update_entry {
	my $action  = shift;
	my @req     = @_;
	my %system  = ();
	my %data    = ();
	my $edit    = 0;
	$action	   = $q->param('action') if ($q->param('action'));
	$data{action}     = $action;
	$data{name}       = $q->param('name');
	$data{systemname} = $q->param('systemname');
	$data{ID}	  = $q->param('ID');
	$data{preview}	  = $q->param('preview');

	my $max_img = $max_images;

	foreach my $f (qw(name systemname ID preview)) {
		$data{$f} = btrim($data{$f});
	}

	#$data{name} =~ s/\s+/ /gs;
	$data{name} =~ s/ {2,}/ /gs;

	if ($action eq 'edit') {
		$action = 'update';
		$data{action} = $action;
		$edit = 1;
	}

	if (@req && ref($req[0]) eq 'HASH') {
		my $r = shift @req;
		%system = %$r;
	}

	if (@req && $req[0] =~ /^\d+$/) {
		$data{ID} = $req[0];
	}

	foreach my $v (@poi_fields) {
		$data{$v} = $q->param($v) if ($q->param($v));
		$data{$v} = btrim($data{$v});
	}

	foreach my $v (@poi_cols) {
		#next if ($v eq 'name' && $action eq 'new');
		$data{$v} = $system{$v} if (defined($system{$v}));
	}
	$data{ID} = $system{ID} if ($system{ID} && $action ne 'new');
	$data{ownerID} = $sessionUserID if (!$data{ownerID});
	$data{region}  = 0 if (!$data{region});
	$data{catID}   = 0 if (!$data{catID});
	$data{description} =~ s/[\r\n]{2,}$/\n/s;
	#$data{rare}    = 0 if (!$data{rare});
	#$data{rare}    = 1 if ($data{rare});

	if (!activeUser() || ($data{ownerID} ne $sessionUserID && !isAdmin())) {
		 redirect($scriptURL.'/view/'.$data{ID});
	}

	my @check = db_mysql($db,"select max_img_override from poi where ID=? and deleted is null and max_img_override is not null",[($data{ID})]);
	foreach my $c (@check) {
		$max_img = $$c{max_img_override};
	}

	my $error = '';

	my $namecheck = $data{name};
	$namecheck =~ s/[^a-zA-Z]//gs;
	$error = "Name must contain sufficient letters." if (length($namecheck) < 4);

	foreach my $v (keys %maxlength) {
		my $s = $data{$v};
		$s =~ s/\r//gs;
		$s =~ s/./ /gs;
		my $len = length($s);
		if ($data{$v} && $maxlength{$v} && $len > $maxlength{$v}) {
			$error = "Field \"$v\" must be no longer than $maxlength{$v} characters in length (".commify($len)." submitted).";
		}
		if ($data{$v} && $minlength{$v} && $len < $minlength{$v}) {
			$error = "Field \"$v\" must be no shorter than $minlength{$v} characters in length (".commify($len)." submitted).";
		}
	}

	my $descripHTML = my_markdown($data{description});

	if ($data{preview}) {

		update_entry_form(\%data,'<PREVIEW>',@req);

	} elsif (!$data{name} || !$data{systemname}) {

		update_entry_form(\%data,'Missing names',@req);

	} elsif (countMyDuplcatePOI($data{name},$data{ID})) {

		update_entry_form(\%data,'You already have a POI of this name. Please choose another.',@req);

	} elsif (!$data{summary} || !$data{description}) {

		update_entry_form(\%data,'Please add details',@req);

	} elsif ($action eq 'new' && duplicatePOI($data{systemname})) {

		update_entry_form(\%data,'Duplicate POI (you already have one for this system)',@req);

	} elsif ($action ne 'new' && !$data{ID}) {

		update_entry_form(\%data,'Missing POI ID number',@req);

	} elsif ($action ne 'new' && $data{ID} && $data{systemname} && gmpExists($data{name},$data{systemname})) {

		update_entry_form(\%data,'There is already another GMP entry of that name in another system.',@req);

	} elsif ($action ne 'new' && $data{ID} && entryExists($data{name},$data{ID})) {

		update_entry_form(\%data,'There is already another POI of that name.',@req);

	} elsif ($data{summary} =~ /^[\s\d]+$/ || $data{description} =~ /^[\s\d]+$/) {

		update_entry_form(\%data,'Summary and Description must contain something more than just numbers.',@req);

	} elsif (lc($data{summary}) eq lc($data{description})) {

		update_entry_form(\%data,'Summary and Description must not be the same.',@req);

	} elsif (!$data{catID}) {

		update_entry_form(\%data,'Must select a category.',@req);

	} elsif ($data{description} =~ /((\]\()([^\s\)]+(discordapp\.net|discordapp\.com)[^\s\)]+)( "|\)))/s) {

		update_entry_form(\%data,"Do not use discord for linking images, as they are temporary links.",@req);

#	} elsif ($data{topimage} && $data{topimage} =~ /discordapp\.(com|net)\//) {
#
#		update_entry_form(\%data,'Image cannot be sourced from discord, since discord creates temporary links. Please use a different image sharing site.',@req);

	} elsif ($data{topimage} && $data{topimage} =~ /dropbox\.com\//) {

		update_entry_form(\%data,'Image cannot be retrieved from dropbox. Please use a different image sharing site.',@req);

	#} elsif ($data{topimage} && $data{topimage} !~ /^\s*https?:\/\/.*\.(jpg|jpeg|png|gif)(\?.*)?(\#.*)?\s*$/i) {
	} elsif ($data{topimage} && !validate_imagelink($data{topimage})) {

		update_entry_form(\%data,'Image URL is not valid (must be a PNG, JPG, or GIF)',@req);

	} elsif (length($data{latitude}) && $data{latitude} !~ /^\s*[\-\+]?\d+\.\d+\s*$/) {

		update_entry_form(\%data,'Latititude my be blank or a floating point number',@req);

	} elsif (length($data{longitude}) && $data{longitude} !~ /^\s*[\-\+]?\d+\.\d+\s*$/) {

		update_entry_form(\%data,'Longitude my be blank or a floating point number',@req);

	} elsif (!$data{topimage}) {

		update_entry_form(\%data,'Image URL required',@req);

	} elsif ($data{callsign} && $data{callsign} !~ /^[\w\d]{3}\-[\w\d]{3}$/) {

		update_entry_form(\%data,'Invalid Carrier Callsign',@req);

	} elsif ($max_img && count_images($descripHTML) > $max_img) {

		update_entry_form(\%data,"Description contains more than $max_img images.",@req);

	} elsif ($error) {

		update_entry_form(\%data,$error,@req);

	} elsif ($edit) {

		update_entry_form(\%data,'',@req);

	} else {
		# Attempt to save it

		# Sanity
		$data{catID2} = undef if ($data{catID2} == $data{catID});

		my @list = ();
		my $vars = '';
		my $vals = '';
		my $update = '';
		foreach my $v (sort @poi_cols) {
			next if ($v =~ /^(description|journal|observatory)$/);

			push @list, $data{$v};
			$vars .= ",$v";
			$vals .= ",?";
			$update .= ",$v=?";
		}

		my $approved = 0;
#		if (!$data{ID} && $data{ownerID} == $sessionUserID && isAdmin()) {
#			push @list, epoch2date(time);
#			$vars .= ",approved";
#			$vals .= ",?";
#			$update .= ",approved=?";
#			$approved = 1;
#		}

		$vars =~ s/^,+//;
		$vals =~ s/^,+//;
		$update =~ s/^,+//;

		my $ok = 0;

		eval {

			my @check = db_mysql($db,"select * from poi where ID=?",[($data{ID})]);

			if (!@check || $data{callsign} ne ${$check[0]}{callsign}) {
				get_fleet_carrier($data{callsign}) if ($data{callsign});
			}

			if ($data{ID} && (!@check || $data{topimage} ne ${$check[0]}{topimage})) {
				getThumbnail(0,$data{topimage},$data{ID})
			}

			if ($action eq 'new' && !@check) {

				$data{ID} = db_mysql($db,"insert into poi (originalOwnerID,created,edited,score,cscore,$vars) values ".
						"(?,NOW(),NOW(),0,0,$vals)",[($data{ownerID},@list)]);

			} elsif ($data{ID}) {

				db_mysql($db,"update poi set edited=NOW(),$update where ID=?",[(@list,$data{ID})]);

			}

			record_editlog($data{ID},\%data);

			@check = db_mysql($db,"select poiID from poidata where poiID=?",[($data{ID})]);

			if ($action eq 'new' && !@check) {

				db_mysql($db,"insert into poidata (poiID,poiname,description,descriptionHTML,journal,observatory) values (?,?,?,?,?,?)",
						[($data{ID},$data{name},$data{description},$descripHTML,$data{journal},$data{observatory})]);

				#vote($data{ID},5,1);

				pushDiscord($data{ID},'New POI',undef,0,1,1) if (!$approved);
				pushDiscord($data{ID},'New POI',undef,1,0,1) if ($approved);

				clearCache("$cachePath/Recently_added_POIs");
				clearCache("$cachePath/Unrated_and_few-vote_POIs_needing_votes");

			} elsif ($data{ID}) {

				db_mysql($db,"update poidata set poiname=?,description=?,descriptionHTML=?,journal=?,observatory=? where poiID=?",
						[($data{name},$data{description},$descripHTML,$data{journal},$data{observatory},$data{ID})]);
			}
			$ok = 1;
		};

		if (!$ok || $@) {
			info("ERROR: $@");
			$ok = 0;
		}

		update_entry_form(\%data,'Error while updating.',@req) if (!$ok);
		redirect($scriptURL.'/view/'.$data{ID}) if ($ok);
	}
}

sub new_entry {
	my @req = @_;

	if (!$sessionUserID) {
		render_error('Must be logged in');
	}

	# First stage:
	
	my $name    = '';
	my $sysname = '';

	if (@req >= 2) {
		$sysname	= btrim($req[0]);
		$name		= btrim($req[1]);
	}

	my $agreed = $q->param('agreed');
	my $license = $q->param('license');
	my $editing = $q->param('editing');

	$name    = btrim($q->param('name')) if (btrim($q->param('name')));
	$sysname = btrim($q->param('systemname')) if (btrim($q->param('systemname')));
	my %params  = ();
	$params{name} = $name;
	$params{systemname} = $sysname;

	if (!$name && !$sysname) {
		new_entry_form(\%params,'',@req);
	} elsif (!$name || !$sysname) {
		new_entry_form(\%params,"Missing information",@req);
	} elsif (!$agreed) {
		new_entry_form(\%params,"Must agree to the rules and terms of service.",@req);
	} elsif (!$license) {
		new_entry_form(\%params,"Must agree to the standard license.",@req);
	} elsif (!$editing) {
		new_entry_form(\%params,"Must agree to editing notice.",@req);
	} elsif (entryExists($name,$sysname)) {
		new_entry_form(\%params,"That name is already in use for a POI.",@req);
	} elsif (gmpExists($name,$sysname)) {
		new_entry_form(\%params,"That name is already in use for a GMP entry in a different system.",@req);
	} else {
		# We got both. Validate and continue
		
		my $href = get_star_system($sysname);
		$$href{name} = $name;

		if (ref($href) eq 'HASH' && keys(%$href) && defined($$href{coord_x}) && defined($$href{coord_y}) && defined($$href{coord_z})) {
			# System is OK, move on.
			update_entry('new',$href);
		} else {
			new_entry_form(\%params,"Unkown Star System, or lacks coordinates",@req);
		}
	}
}

sub gmpExists {
	my $name = shift;
	my $sys  = shift;
	my @rows = db_mysql($db,"select id from GMP where name=? and galMapSearch!=?",[($name,$sys)]);
	return int (@rows);
}

sub entryExists {
	my $name = shift;
	my $id   = shift;
	my @rows = db_mysql($db,"select ID from poi where name=? and ID!=? and deleted is null",[($name,$id)]);
	return int (@rows);
}

##########################################################################

sub update_entry_form {
	my $pref = shift;
	my $error = shift;
	my @req = @_;
	my @form = ();

	my %params = ();
	%params = %$pref if (ref($pref) eq 'HASH');

	foreach my $k (keys %params) {
		next if ($k eq 'rare');
		$params{$k} = htmlify($params{$k});
	}

	$params{coord_x} += 0;
	$params{coord_y} += 0;
	$params{coord_z} += 0;
	$params{sol_dist} += 0;
	#$params{rare} += 0;

	my $coords .= "$params{coord_x} / $params{coord_y} / $params{coord_z}" 
			if (defined($params{coord_x}) && defined($params{coord_y}) && defined($params{coord_z}));

	push @form, {type=>'hidden', name=>'action', value=>$params{action}};
	push @form, {type=>'hidden', name=>'ownerID', value=>$params{ownerID}};
	push @form, {type=>'hidden', name=>'ID', value=>$params{ID}};
	push @form, {type=>'text', name=>'name', label=>'POI Name', maxlength=>80, size=>40, value=>$params{name}, required=>1};
	push @form, {type=>'hiddenshow', name=>'systemname', label=>'Star System Name', maxlength=>64, size=>40, value=>$params{systemname}, required=>1, disabled=>1};
	push @form, {type=>'display', label=>'Coordinates', value=>$coords };
	push @form, {type=>'display', label=>'Sol Distance', value=>" $params{sol_dist} ly" } if ($params{sol_dist});
	push @form, {type=>'hidden', name=>'coord_x', label=>'X', maxlength=>20, size=>20, value=>$params{coord_x}, required=>1, disabled=>1};
	push @form, {type=>'hidden', name=>'coord_y', label=>'Y', maxlength=>20, size=>20, value=>$params{coord_y}, required=>1, disabled=>1};
	push @form, {type=>'hidden', name=>'coord_z', label=>'Z', maxlength=>20, size=>20, value=>$params{coord_z}, required=>1, disabled=>1};
	push @form, {type=>'hidden', name=>'sol_dist', label=>'Sol Distance', maxlength=>20, size=>20, value=>$params{sol_dist}, required=>1, disabled=>1};
	push @form, {type=>'hiddenshow', name=>'id64', label=>'ID64 Address', maxlength=>40, size=>40, value=>$params{id64}, required=>1, disabled=>1};
	push @form, {type=>'hiddenshow', name=>'edsm_id', label=>'EDSM ID', maxlength=>40, size=>40, value=>$params{edsm_id}, required=>1, disabled=>1};
	push @form, {type=>'regions', name=>'region', label=>'Region', value=>$params{region}};
	push @form, {type=>'category', name=>'catID', label=>'Main Category', value=>$params{catID}};
	push @form, {type=>'category', name=>'catID2', label=>'Secondary Category', value=>$params{catID2}, note=>'(use sparingly)'};
	push @form, {type=>'text', name=>'latitude', label=>'Latitude (optional)', value=>$params{latitude}, size=>15, maxlength=>15};
	push @form, {type=>'text', name=>'longitude', label=>'Longitude (optional)', value=>$params{longitude}, size=>15, maxlength=>15};
	push @form, {type=>'callsign', name=>'callsign', label=>'Carrier Callsign', maxlength=>7, size=>7, value=>$params{callsign} };
	#push @form, {type=>'checkbox', name=>'rare', label=>'Rare Discovery?', value=>$params{rare}};
	push @form, {type=>'text', name=>'topimage', label=>'Main Image Link', maxlength=>255, size=>40, value=>$params{topimage}, required=>1};
	push @form, {type=>'text', name=>'discoverer', label=>'Original Discoverer (optional)', maxlength=>32, size=>40, value=>$params{discoverer} };
	push @form, {type=>'textarea', name=>'summary', label=>'Short Summary (one or two sentences, text only)', maxlength=>255, cols=>80, rows=>3, value=>$params{summary}, required=>1};
	push @form, {type=>'textarea', name=>'description', label=>'Detailed Description (<a href="https://www.markdownguide.org/basic-syntax/" target="_blank">markdown syntax</a> permitted) (<a href="https://www.markdownguide.org/cheat-sheet/" target="_blank">cheat sheet</a>)', maxlength=>$maxlength{description}, cols=>80, rows=>18, value=>$params{description}."\n\n", required=>1};

	if ($error eq '<PREVIEW>' || $params{description}) {
		push @form, {type=>'preview', name=>'descriptionHTML', label=>'Description Preview', value=>$params{description}, required=>1};
		$error = '' if ($error eq '<PREVIEW>');
	}
	push @form, {type=>'textarea', name=>'observatory', label=>'<a href="https://github.com/Xjph/ObservatoryCore/releases" target="_blank">Observatory</a> Details (optional)', maxlength=>$maxlength{observatory}, cols=>80, rows=>8, value=>$params{observatory}};
	push @form, {type=>'textarea', name=>'journal', label=>'Relevant Journal Entries (optional)', maxlength=>$maxlength{journal}, cols=>80, rows=>8, value=>$params{journal}};

	my $html = '';

	if ($params{action} eq 'new') {
		$html .= "<p align=\"left\">Note: POI is not created yet. If you leave this page, the new POI will be aborted.</p>\n";
		$html .= getGMPwarning($params{systemname},'new',$params{ID});
	} else {
		$html .= getGMPwarning($params{systemname},'edit',$params{ID});
	}

	my $count = countPOIs($params{systemname},$params{ID});

	if ($count) {
		$count = commify($count);
		$html .= "<p align=\"left\">There are <span class=\"textyellow\">$count</span> existing POI(s) in the <i>$params{systemname}</i> star system. ".
			"Please take a look at those and decide whether you should continue adding a duplicate POI.</p>\n";

		$html .= tablePOI('POIs in this system:',listPOI(0,$params{systemname}),undef,1)."<p/>\n";

	}

	make_form('update',$html,\@form,$error,@req);
}

sub new_entry_form {
	my $pref = shift;
	my $error = shift;
	my @req = @_;
	my @form = ();

	my %params = ();
	%params = %$pref if (ref($pref) eq 'HASH');

	foreach my $k (keys %params) {
		$params{$k} = htmlify($params{$k});
	}

	push @form, {type=>'text', name=>'name', label=>'POI Name', maxlength=>80, size=>40, value=>$params{name}, required=>1};
	push @form, {type=>'text', name=>'systemname', label=>'Star System Name', maxlength=>64, size=>40, value=>$params{systemname}, required=>1};
	push @form, {type=>'agreement', name=>'agreed', label=>'I accept', labelextra=>"the [<a href=\"$scriptURL/rules\">Rules and Terms of Service</a>]", value=>1, required=>1};
	push @form, {type=>'agreement', name=>'license', label=>'Entry will be licensed', labelextra=>"[$licenseLINK]", value=>1, required=>1};
	push @form, {type=>'agreement', name=>'editing', label=>'I understand that '.$admin_people.' may edit my entry for formatting, minor corrections, and sometimes more extensively for content where it is deemed necessary', labelextra=>"", value=>1, required=>1};

	make_form('new','',\@form,$error,@req);
}

sub make_form {
	my $action = shift;
	my $topHTML= shift;
	my $form   = shift;
	my $error  = shift;
	my @req = @_;
	my $html = '';

	my $preview = '';
	my $previewlabel = '';

	my $submit = $action eq 'new' ? 'Create POI' : 'Submit POI';

	my $request = $action.'/'.join('/',@req);

	$html = "<div class=\"poiBoundingBox\">\n" if ($action ne 'new');
	$html .= "<div class=\"poiViewDiv\">\n";

	$html .= "<div class=\"poiFormDiv\"><form id=\"PIOeditForm\" action=\"$relativeURL/$request\" method=\"POST\" accept-charset=\"utf-8\">\n".
			"<input type=\"hidden\" name=\"r\" value=\"$request\">\n$topHTML\n";
	$html .= "<p><span class=\"textred\">$error</span></p>\n" if ($error);


	foreach my $f (@$form) {
		if ($$f{type} eq 'hidden' || $$f{type} eq 'hiddenshow') {
			$html .= "<input type=\"hidden\" name=\"$$f{name}\" value=\"$$f{value}\">\n";
		}
	}

	$html .= "<table class=\"poiBox\">\n";

	$html .= "<tr><td colspan=3><input id=\"buttonsubmit\" class=\"poiButton\" type=\"button\" value=\"Submission Tutorial\" onclick=\"greyout();location.href='$relativeURL/tutorial';\">\&nbsp;</td></tr>";

	foreach my $f (@$form) {
		my $required = $$f{required} ? ' required' : '';
		my $disabled = $$f{disabled} ? ' disabled' : '';

		my $placeholder = $$f{placeholder} ? $$f{placeholder} : $$f{label};

		if ($$f{type} eq 'text') {

			if ($$f{name} =~ /discoverer|original/) {
				$html .= "<tr><td align=\"left\" colspan=3><label for=\"$$f{name}\" class=\"poiBoxLabel\">$$f{label}:</label><br/>".
					"<input type=\"text\" placeholder=\"$placeholder\" name=\"$$f{name}\" maxlength=\"$$f{maxlength}\" size=\"$$f{size}\" ".
					"value=\"$$f{value}\"$required$disabled></td></tr>\n";
			} else {
				$html .= "<tr><td align=\"right\"><label for=\"$$f{name}\" class=\"poiBoxLabel\">$$f{label}:</label></td><td colspan=2>".
					"<input type=\"text\" placeholder=\"$placeholder\" name=\"$$f{name}\" maxlength=\"$$f{maxlength}\" size=\"$$f{size}\" ".
					"value=\"$$f{value}\"$required$disabled></td></tr>\n";
			}

			if ($$f{name} eq 'longitude') {
				$html .= "<tr><td align=\"left\" colspan=3><span class=\"textyellow\">(<b>Note:</b> Latitude and Longitude are required ".
					"for <i>planetary surface</i> POIs)</span></td></tr>\n";
			}

		} elsif ($$f{type} eq 'callsign') {

			my $tooltip = "<div class=\"tooltip\"><span class=\"infoIcon\"></span><span class=\"tooltiptext tooltipright\">".
				"This is the 6-character alphanumeric callsign/ID for your fleet carrier. <b>ONLY</b> include this if the ".
				"carrier is <i><u>permanently</u></i> stationed in the same system as this POI.</span></div>".
				"</div>";

			$html .= "<tr><td align=\"right\"><label for=\"$$f{name}\" class=\"poiBoxLabel\">$$f{label}:</label>$tooltip</td><td colspan=2>".
				"<input type=\"text\" placeholder=\"$placeholder\" name=\"$$f{name}\" maxlength=\"$$f{maxlength}\" size=\"$$f{size}\" ".
				"value=\"$$f{value}\"$required$disabled></td></tr>\n";

		} elsif ($$f{type} eq 'textarea') {

			my $class = ($useSimpleMDE || $useEasyMDE) ? " class=\"$$f{name}TEXT\"" : '';

			$html .= "<tr><td colspan=\"3\"><div><label for=\"$$f{name}\" class=\"poiBoxLabel\">$$f{label}:</label><br/>\n".
				"<div$class><textarea class=\"poiTEXT\" name=\"$$f{name}\" id=\"$$f{name}\" rows=\"$$f{rows}\" cols=\"$$f{cols}\" ".
				"maxlength=\"$$f{maxlength}\"$required$disabled>$$f{value}</textarea></div>\n";
			$html .= "<span id=\"".$$f{name}."count\">0</span><span id=\"".$$f{name}."maximum\"> / $maxlength{$$f{name}}</span></div>\n";
			$html .= "</div></td></tr>\n";

		} elsif ($$f{type} eq 'preview') {

			#$html .= "<tr><td colspan=\"2\" class=\"poiViewCell\"><br/><span class=\"poiBoxLabel\">$$f{label}:</span><br/>\n".
			#	"<div class=\"textjustify poiPreview\">".my_markdown($$f{value})."</div><br/></td></tr>\n";

			$preview = my_markdown($$f{value});
			$previewlabel = $$f{label};

		} elsif ($$f{type} eq 'hiddenshow' || $$f{type} eq 'display') {

			$html .= "<tr><td align=\"right\">$$f{label}:</td><td colspan=2><b>$$f{value}</b></td></tr>\n";

		} elsif ($$f{type} eq 'category') {

			getCategories();

			$html .= "<tr><td align=\"right\">$$f{label}:</td><td colspan=2><select name=\"$$f{name}\">\n";

			my $blank = $$f{name} eq 'catID' ? '-- select category --' : '-- none --';

			$html .= "<option value=\"0\">$blank</option>\n";

			foreach my $k (sort { $lookup_category{$a} cmp $lookup_category{$b} } keys %avail_category) {
				next if (!$k);
				my $sel = $k==$$f{value} ? ' selected' : '';
				next if (!$sel && $category_restricted{$k} && !isAdmin());
				$html .= "<option value=\"$k\"$sel>$lookup_category{$k}</option>\n";
			}
			$html .= "</select>\&nbsp;$$f{note}</td></tr>\n";

		} elsif ($$f{type} eq 'regions') {

			$html .= "<tr><td align=\"right\">$$f{label}:</td><td colspan=2><select name=\"$$f{name}\">\n";
			my @rows = db_mysql($db,"select * from regions order by regionname");
			foreach my $r (@rows) {
				my $sel = $$r{id}==$$f{value} ? ' selected' : '';
				$html .= "<option value=\"$$r{id}\"$sel>$$r{regionname}</option>\n";
			}
			$html .= "</select></td></tr>\n";

		} elsif ($$f{type} eq 'agreement') {

			$html .= "<tr><td colspan=3><span class=\"mediumtext\">\&nbsp;</span></td></tr>\n";
			$html .= "<tr><td align=\"right\" colspan=2>$$f{label} $$f{labelextra}:</td><td align=\"left\" style=\"width:150px\">".
				"<input type=\"checkbox\" name=\"$$f{name}\" value=\"$$f{value}\"$required$disabled /></td></tr>\n";

		} elsif ($$f{type} eq 'checkbox') {

			my $checked = $$f{value} ? ' checked' : '';
			$html .= "<tr><td align=\"right\">$$f{label} $$f{labelextra}:</td><td align=\"left\" colspan=2>".
				"<input type=\"checkbox\" name=\"$$f{name}\" value=\"1\"$required$disabled$checked/></td></tr>\n";
		}
	}

	#$html .= "<tr><td colspan=3 align=\"right\"><input id=\"buttonsubmit\" class=\"poiButton\" type=\"submit\" value=\"$submit\" onclick=\"greyout();document.getElementById('PIOeditForm').submit();\">\&nbsp;";
	$html .= "<tr><td colspan=3 align=\"right\"><input id=\"buttonsubmit\" class=\"poiButton\" type=\"submit\" value=\"$submit\">\&nbsp;";

	$html .= "<input type=\"hidden\" id=\"preview\" name=\"preview\" value=\"0\">";

	$html .= "<input id=\"buttonpreview\" class=\"poiButton\" type=\"button\" value=\"Preview Description\" onclick=\"document.getElementById('preview').value=1; document.getElementById('PIOeditForm').submit();\">\&nbsp;" if ($action eq 'update');

	#$html .= "<input id=\"buttonreset\" type=\"reset\" value=\"Clear Form\">";
	$html .= "</td></tr>\n</table>\n</form></div>\n";

	$html .= "</div><!poiViewDiv>\n";


	# Preview here:

	if ($preview) {
		$html .= "<div class=\"poiRightDiv leftext\" align=\"left\">\n";
		$html .= "<span class=\"poiBoxLabel\">$previewlabel:</span><br/>\n".
			 "<div class=\"textjustify poiPreview\">".my_markdown($preview)."</div>";
		$html .= "</div><!poiRightDiv>\n";
	}


	$html .= "</div><!poiBoundingBox>\n" if ($action ne 'new');

	my $editor = '';

	if ($useSimpleMDE) {
		$editor = "
    var simplemde = new SimpleMDE({ 
	element: document.getElementById(\"description\"),
	status: false,
    });
" if (0);

		$editor = "
    var simplemde = new SimpleMDE({ 
	element: document.getElementById(\"description\"),
	status: [\"autosave\", \"lines\", \"words\", \"cursor\", {
		className: \"characters\",
		defaultValue: function(el) {
			el.innerHTML = \"0\";
		},
		onUpdate: function(el) {
			el.innerHTML = simplemde.value().length;
			document.getElementById('descriptioncount').innerHTML = simplemde.value().length;
		}
	}]
    });
" if (1);
	} elsif ($useEasyMDE) {
		$editor = "
    const easyMDE = new EasyMDE({ 
	element: document.getElementById(\"description\"),
	unorderedListStyle: '-',
	maxHeight: '500px',
	status: [\"autosave\", \"lines\", \"words\", \"cursor\", {
		className: \"characters\",
		defaultValue: function(el) {
			el.innerHTML = \"0\";
		},
		onUpdate: function(el) {
			el.innerHTML = easyMDE.value().length;
			document.getElementById('descriptioncount').innerHTML = easyMDE.value().length;
		}
	}]
    });
";
	}

	$html .= "<script type=\"text/javascript\">
document.getElementById('description').onkeyup = function () {
  document.getElementById('descriptioncount').innerHTML = this.value.length;
};
document.getElementById('summary').onkeyup = function () {
  document.getElementById('summarycount').innerHTML = this.value.length;
};
document.getElementById('journal').onkeyup = function () {
  document.getElementById('journalcount').innerHTML = this.value.length;
};
document.getElementById('observatory').onkeyup = function () {
  document.getElementById('observatorycount').innerHTML = this.value.length;
};
document.getElementById('descriptioncount').innerHTML = document.getElementById('description').value.length;
document.getElementById('summarycount').innerHTML = document.getElementById('summary').value.length;
document.getElementById('journalcount').innerHTML = document.getElementById('journal').value.length;
document.getElementById('observatorycount').innerHTML = document.getElementById('observatory').value.length;

$editor
</script>\n";

	render($html,"Edit POI");
}


##########################################################################

sub vote {
	my ($poiID, $score, $force) = @_;
	return undef if (!$sessionUserID || !$poiID || !$score || $score !~ /^\d+$/ || !$sessionDATA{canVote});
	my %poi = getPOIdata($poiID);
	my $name = $poi{name};
	return undef if (!$name);

	return 0 if (!$poi{approved} && !$force);

	my @rows = db_mysql($db,"select * from votes where voterID=? and poiID=?",[($sessionUserID,$poiID)]);

	if (int(@rows)==1) {
		db_mysql($db,"update votes set score=? where voterID=? and poiID=?",[($score,$sessionUserID,$poiID)]);
	} else {
		db_mysql($db,"delete from votes where voterID=? and poiID=?",[($sessionUserID,$poiID)]) if (@rows);
		db_mysql($db,"insert into votes (score,voterID,poiID) values (?,?,?)",[($score,$sessionUserID,$poiID)]);
	}

	update_votecount($sessionUserID);
	recalculateScore($poiID);
	recalculateUserRating(getOwner($poiID));

	return 1;
}

sub update_votecount {
	my $userID = shift;

	my @rows = db_mysql($db,"select count(*) as num from votes,poi where voterID=? and poiID=poi.ID and ".
				"hidden is null and deleted is null and approved is not null",[($userID)]);
	if (@rows) {
		my $r = shift @rows;
		db_mysql($db,"update users set votes=? where ID=?",[($$r{num},$userID)]);
	}

}

sub recalculateScore {
	my $poiID = shift;

	return undef if (!$poiID || $poiID !~ /^\d+$/);

	my $score = 0;
	my $cscore = 0;
	my $stars = 0;
	my $count = 0;
	my $curators = 0;

	my $rows;

	if ($allow_self_votes) {
		$rows = rows_mysql($db,"select votes.score,admin from votes,users where poiID=? and voterID=users.ID",[($poiID)]);
	} else {
		$rows = rows_mysql($db,"select votes.score,admin from votes,users,poi where poiID=? and voterID=users.ID and poiID=poi.ID and voterID!=ownerID",[($poiID)]);
	}
	if (ref($rows) eq 'ARRAY' && int(@$rows)) {
		$count = int(@$rows);
		$curators = 0;
		my $num = $count;
		$num = 100 if ($num > 100);
		my $total = 0;
		my $curation = 0;

		foreach my $r (@$rows) {
			$total += $$r{score};
			$curation += $$r{score} if ($$r{admin});
			$curators ++ if ($$r{admin});
		}

		#$score = ($total/$count) * (1 + (log10($num)/2)); # Original, vote average * 1-2. Scale of 1-5 becomes 2-10

		$score = ((($total/$count)-1)/4) * (4 + (log10($num)*5/2)) + 1; # New, scale 1-5 becomes 1-10.
		
		$cscore = (($curation/$curators)-1)*9/4 + 1 if ($curators);
		$stars = $total/$count;
	}

	return db_mysql($db,"update poi set stars=?,score=?,cscore=?,votes=?,curations=? where ID=?",[($stars,$score,$cscore,$count,$curators,$poiID)]);
}

sub recalculateUserRating {
	my $userID = shift;

	return undef if (!$userID || $userID !~ /^\d+$/);

	my $rating = 0;
	my $count = 0;
	my $curation = 0;
	my $curated = 0;

	my $rows = rows_mysql($db,"select score,cscore from poi where ownerID=? and deleted is null and hidden is null and approved is not null",[($userID)]);

	if (ref($rows) eq 'ARRAY') {
		foreach my $r (@$rows) {
			$count++;
			$rating += $$r{score};
			$curation += $$r{cscore};
			$curated ++ if ($$r{cscore});
		}
	}

	if ($count) {
		$rating /= $count;
	}
	if ($curated) {
		$curation /= $curated;
	}

	if ($curation) {
		$rating = ($rating+$curation)/2;
	} else {
		$rating = ($rating-1)*9/4 + 1;
	}

	return db_mysql($db,"update users set rating=? where ID=?",[($rating,$userID)]);
}

sub update_carriers {
	show_queries(1);

	my @rows = db_mysql($db,"select ID,name,callsign from poi where callsign is not null and callsign!='' and deleted is null");
	foreach my $r (@rows) {
		print "[$$r{ID}] $$r{name} = $$r{callsign}\n";
		my $href = get_fleet_carrier($$r{callsign});

	}

	show_queries(0);
}

sub recalculateAll {
	my %users = ();
	my @rows = db_mysql($db,"select ID,name,ownerID from poi where deleted is null");
	foreach my $r (@rows) {
		print "[$$r{ID}] $$r{name}\n";
		recalculateScore($$r{ID});
		$users{$$r{ownerID}} = 1;
	}

	foreach my $userID (keys %users) {
		recalculateUserRating($userID);
	}
}

sub log10 {
	my $n = shift;
	return 0 if (!$n); # || $n<0);
	return log($n)/log(10);
}

##########################################################################

sub lookup_table {
	my ($table, $key, $string, $href, $access, $aref) = @_;

	my $rows = rows_mysql($db,"select * from $table");

	foreach my $r (@$rows) {
		$$href{$$r{$key}} = $$r{$string} if (!$$r{deleted});
		if ($aref && $access) { $$aref{$$r{$key}} = $$r{$access}; }
		$avail_category{$$r{$key}} = $$r{$string} if ($table eq 'categories' && !$$r{deleted});
	}
}

sub getAdminRole {
	my $role = shift;
	getRoles();
	return $lookup_role{$role}.'';
}

sub getUserRole {
	my $userID = shift;
	my @rows = db_mysql($db,"select roles.name from users,roles where users.ID=? and roles.ID=users.admin",[($userID)]);
	if (@rows) {
		my $rname = ${$rows[0]}{name};
		$rname = "Real Explorer" if ($aprilFools && $rname eq 'Explorer');
		return $rname;
	}
	return '';
}

sub getRoles {
	if (keys %lookup_role) {
		return %lookup_role;
	} else {
		lookup_table('roles','ID','name',\%lookup_role);
		$lookup_role{0} = 'Real Explorer' if ($aprilFools);
		return %lookup_role;
	}

	my %hash = ();
	return %hash;
}

sub getRegions {
	if (keys %lookup_region) {
		return %lookup_region;
	} else {
		lookup_table('regions','id','regionname',\%lookup_region);
		return %lookup_region;
	}

	my %hash = ();
	return %hash;
}

sub getCategories {
	if (keys %lookup_category) {
		return %lookup_category;
	} else {
		lookup_table('categories','ID','catname',\%lookup_category,'curatorOnly',\%category_restricted);
		return %lookup_category;
	}

	my %hash = ();
	return %hash;
}
		
sub getCategoryID {
	my $cat = shift;
	getCategories();
	foreach my $k (keys %lookup_category) {
		return $k if (lc($lookup_category{$k}) eq lc($cat));
	}
	return 0;
}

sub regionName {
	my $regionID = shift;
	getRegions();
	return $lookup_region{$regionID}.'';
}

sub categoryName {
	my $catID = shift;
	getCategories();
	return $lookup_category{$catID}.'';
}

sub countRegionPOI {
	my $regionID = shift;
	my $count  = 0;
	return 0 if (!$regionID);

	my @rows = db_mysql($db,"select count(*) as num from poi where region=? and deleted is null",[($regionID)]);
	if (@rows) {
		$count = ${$rows[0]}{num};
	}
	return $count;
}

sub countCategoryPOI {
	my $catID = shift;
	my $count  = 0;
	return 0 if (!$catID);

	my @rows = db_mysql($db,"select count(*) as num from poi where (catID=? or catID2=?) and deleted is null",[($catID,$catID)]);
	if (@rows) {
		$count = ${$rows[0]}{num};
	}
	return $count;
}

sub countUserPOI {
	my $userID = shift;
	my $count  = 0;
	return 0 if (!$userID);

	my @rows = db_mysql($db,"select count(*) as num from poi where ownerID=? and deleted is null",[($userID)]);
	if (@rows) {
		$count = ${$rows[0]}{num};
	}
	return $count;
}

sub countUnapproved {
	my @rows = db_mysql($db,"select count(*) as num from poi where deleted is null and approved is null and hidden is null");
	if (@rows) {
		return ${$rows[0]}{num};
	}
	return 0;
}

sub countReported {
	my @rows = db_mysql($db,"select count(*) as num from poi where deleted is null and reported is not null");
	if (@rows) {
		return ${$rows[0]}{num};
	}
	return 0;
}

sub countHidden {
	my @rows = db_mysql($db,"select count(*) as num from poi where deleted is null and hidden is not null");
	if (@rows) {
		return ${$rows[0]}{num};
	}
	return 0;
}

sub countDeleted {
	my @rows = db_mysql($db,"select count(*) as num from poi where deleted is not null");
	if (@rows) {
		return ${$rows[0]}{num};
	}
	return 0;
}

sub countPendingDeletion {
	my @rows = db_mysql($db,"select count(*) as num from poi where deleted is null and requestdelete is not null");
	if (@rows) {
		return ${$rows[0]}{num};
	}
	return 0;
}

sub countMyDuplcatePOI {
	my $name   = shift;
	my $ignore = shift;
	$ignore += 0;
	my $count  = 0;
	return 0 if (!$sessionUserID);

	my @rows = db_mysql($db,"select count(*) as num from poi where ownerID=? and name=? and ID!=? and deleted is null",[($sessionUserID,$name,$ignore)]);
	if (@rows) {
		$count = ${$rows[0]}{num};
	}
	return $count;
}

sub countPOIs {
	my $system = shift;
	my $exclude = shift;
	my $count  = 0;
	$exclude = 0 if (!$exclude);

	my @rows = db_mysql($db,"select count(*) as num from poi where systemname=? and ID!=? and deleted is null and hidden is null",[($system,$exclude)]);
	if (@rows) {
		$count = ${$rows[0]}{num};
	}
	return $count;
}

sub duplicatePOI {
	my $system = shift;
	my @rows = db_mysql($db,"select ID from poi where ownerID=? and systemname=? and deleted is null and hidden is null",[($sessionUserID,$system)]);
	return 1 if (@rows);
	return 0;
}

sub getPOIdata {
	my $poiID = shift;

	return %{$lookup_poidata{$poiID}} if ($lookup_poidata{$poiID});

	my @rows = db_mysql($db,"select * from poi,poidata where ID=? and poiID=poi.ID",[($poiID)]);
	if (@rows) {
		my $r = shift @rows;
		$lookup_poidata{$poiID} = $r;
		return %$r;
	} 
	return ();
}

sub getPOIcategory {
	my $poiID = shift;

	return $lookup_poicat{$poiID} if ($lookup_poicat{$poiID});

	my @rows = db_mysql($db,"select catID from poi where ID=?",[($poiID)]);
	if (@rows) {
		$lookup_poiname{$poiID} = ${$rows[0]}{catID};
		return ${$rows[0]}{catID};
	}
	return '';
}

sub getPOIname {
	my $poiID = shift;

	return $lookup_poiname{$poiID} if ($lookup_poiname{$poiID});

	my @rows = db_mysql($db,"select name from poi where ID=?",[($poiID)]);
	if (@rows) {
		$lookup_poiname{$poiID} = ${$rows[0]}{name};
		return ${$rows[0]}{name};
	}
	return '';
}

sub getUsername {
	my $userID = shift;

	return $lookup_username{$userID} if ($lookup_username{$userID});

	my @rows = db_mysql($db,"select username from users where ID=?",[($userID)]);
	if (@rows) {
		$lookup_username{$userID} = ${$rows[0]}{username};
		return ${$rows[0]}{username};
	}
	return '';
}

sub getOwner {
	my $poiID = shift;
	my @rows = db_mysql($db,"select ownerID from poi where ID=?",[($poiID)]);
	if (@rows) {
		return ${$rows[0]}{ownerID};
	}
	return 0;
}

sub getOwnerID {
	return getOwner(shift);
}

sub commanderName {
	my $id = shift;
	my $name = shift;

	if ($id =~ /^\d+$/ && !$name) {
		$name = getUsername($id);
	} elsif ($name && !$id) {
		$id = getUserID($name);
	}

	my %user = getUserData($id);

	return '' if (!$id || !$name);

	$name = htmlify($name);
	$name .= " <span class=\"textred\">$symbol{xbox}</span>" if ($user{banned});
	$name .= " <span class=\"textgreen\">$symbol{sun}</span>" if (checkAdmin($id));
	return $name;
}

sub get_star_system {
	my $name = shift;
	my %hash = ();

	$name =~ s/\+/_/gs;

	my $url = "http://www.necrobones.net/cgi/starsystem.cgi?s=".$name;
	my $content = get $url;
	print "JSON content: $content\n" if ($debug);

	my $href = [()];
	eval {
		$href = JSON->new->utf8->decode($content);
	};

	$$href{systemname} = $$href{name};
	delete($$href{name});

	return $href;
}

sub get_fleet_carrier {
	my $sign = shift;
	my %hash = ();

	my $url = "http://www.necrobones.net/cgi/fleetcarrier.cgi?c=".$sign;
	my $content = get $url;
	print "JSON content: $content\n" if ($debug);

	my $href = [()];
	eval {
		$href = JSON->new->utf8->decode($content);
	};

	if ($href && ref($href) eq 'HASH') { eval {

		my %fields = ();
		my @rows = db_mysql($db,"describe carriers");
		foreach my $r (@rows) {
			$fields{$$r{Field}}=1;
		}

		my %hash = ();
		foreach my $k (keys %$href) {
			next if ($k eq 'callsign');
			$hash{$k} = $$href{$k} if ($fields{$k});
			#print "\t$k = $hash{$k}\n" if ($hash{$k});
		}

		my @data = db_mysql($db,"select * from carriers where callsign=?",[($sign)]);
		my %old = ();
		%old = %{$data[0]} if (@data);

		my $vars = '';
		my $vals = '';
		my $update = '';
		my @params = ();

		foreach my $k (keys %hash) {
			if (!$old{$k} || $old{$k} ne $hash{$k}) {
				$vars .= ",$k";
				$vals .= ",?";
				$update .= ",$k=?";
				push @params, $hash{$k};
			}
		}

		if (!@data) {
			db_mysql($db,"insert into carriers (callsign$vars) values (\?$vals)",[($sign,@params)]);
		} else {
			db_mysql($db,"update carriers set callsign=\?$update where callsign=?",[($sign,@params,$sign)]) if (@params);
		}
	};}

	return $href if (ref($href) eq 'HASH' && $$href{status});
	return undef;
}

##########################################################################

sub replyDiscord {
	my $replyID = shift;
	my $isEdit = shift;

	my @rows = db_mysql($db,"select replies.*,poiID,message,msgs.authorID as posterID from replies,msgs where replyID=? and replies.msgID=msgs.ID",[($replyID)]);
	return if (!@rows);

	foreach my $r (@rows) {
		my $poiName = getPOIname($$r{poiID});
		my $username = getUsername($$r{authorID});
		my $postername = getUsername($$r{posterID});
		my @embeds = ();
		push @embeds, {color=>0xFFFFFF, title=>"Reply: (by $username)", description=>$$r{reply}};
		push @embeds, {color=>0xFFFFFF, title=>"Message replied to: (by $postername)", description=>$$r{message}};
		push @embeds, {title=>$poiName, url=>"$scriptURL/view/$$r{poiID}"};

		my $type = 'Posted';
		$type = $isEdit if ($isEdit);
		$type = $isEdit==1 ? 'Edited' : $type;

		send_discord("[$username] $type comment reply.",\@embeds);
	}
}

sub commentDiscord {
	my $msgID = shift;
	my $isEdit = shift;

	my @rows = db_mysql($db,"select * from msgs where ID=?",[($msgID)]);
	return if (!@rows);

	foreach my $r (@rows) {
		my $poiName = getPOIname($$r{poiID});
		my $username = getUsername($$r{authorID});
		my @embeds = ();
		push @embeds, {color=>0xFFFFFF, title=>'Message', description=>$$r{message}};
		push @embeds, {title=>$poiName, url=>"$scriptURL/view/$$r{poiID}"};

		my $type = 'Posted';
		$type = $isEdit if ($isEdit);
		$type = $isEdit==1 ? 'Edited' : $type;

		send_discord("[$username] $type comment.",\@embeds);
	}
}

sub send_discord {
	my $msg = shift;
	my $aref = shift;

	return if ($DEV && $DEV_skip_discord);

	my %json = ();
	$json{username} = 'EDAstro';
	$json{content} = $msg;
	$json{embeds} = $aref if (ref($aref) eq 'ARRAY' && @$aref);

	my @emb = db_mysql($db,"select * from discords where public=0 and sendmsgs>0 and disabled is null"); # non-public and detail-showing channels
	foreach my $e (@emb) {
		my $hook = $$e{webhook};

		my $tries = 0;
		my $ret = undef;
		while (!$ret && $tries<3) {
			$ret = post_payload2($hook, \%json, $tries);
			$tries++;
		}
		log_discord('send_discord','post failed after retries') if (!$ret);

		if (0) {
		eval {
			my ($id,$token) = discord_tokens($hook);
			my $webhook = WebService::Discord::Webhook->new( {id=>$id,token=>$token,wait=>1} );
			$webhook->get();
			my $ret = undef;
			my $tries = 0;

			info("send_discord MSG: $msg");

			while (!$ret && $tries<3) {
				$tries++;
				$ret = $webhook->execute( username=>'EDAstro', content=>$msg, embeds=>$aref );
				log_discord('send_discord',$ret);
			}
		};
		info("send_discord error: ".$@) if ($@);
		}
	}
}

sub alertDiscord {
	my $message = shift;
	my $poiID = shift;
	my $flags = shift;
	my @embeds = ();

	return if ($DEV && $DEV_skip_discord);

	$message = '['.$sessionDATA{username}.'] '.$message;

	if ($poiID) {
		my %poi = getPOIdata($poiID);

		if ($poi{name}) {
			push @embeds, {title=>$poi{name}, url=>"$scriptURL/view/$poiID"};
		}
	}

	my $field = 'sendlogs';
	if ($flags && ref($flags) eq 'HASH') {
		$field = 'senddeletionreqs' if ($$flags{deletion});
		$field = 'sendapprovalreqs' if ($$flags{approval});
		$field = 'sendreportedreqs' if ($$flags{reported});
	}

	if ($sessionUserID && isAdmin()) {
		my @emb = db_mysql($db,"select * from discords where $field>0 and disabled is null");	# non-public and detail-showing channels

		my %json = ();
		$json{username} = 'EDAstro';
		$json{content} = $message;
		$json{embeds} = \@embeds if (@embeds);

		foreach my $e (@emb) {
			my $hook = $$e{webhook};

			my $tries = 0;
			my $ret = undef;
			while (!$ret && $tries<3) {
				$ret = post_payload2($hook, \%json, $tries);
				$tries++;
			}
			log_discord('alertDscord','post failed after retries') if (!$ret);

			if (0) {
			eval {
				my ($id,$token) = discord_tokens($hook);
				my $webhook = WebService::Discord::Webhook->new( {id=>$id,token=>$token,wait=>1} );
				$webhook->get();
				my $ret = undef;
				my $tries = 0;

				while (!$ret && $tries<3) {
					$tries++;
					$ret = $webhook->execute( username=>'EDAstro', content=>$message ) if (!@embeds);
					$ret = $webhook->execute( username=>'EDAstro', content=>$message, embeds=>\@embeds ) if (@embeds);
					log_discord('alertDiscord'.$ret);
				}
			};
			info("alertDiscord error: ",$@) if ($@);
			}
		}
	}
}


sub pushDiscord {
	# docs: https://birdie0.github.io/discord-webhooks-guide/structure/embeds.html

	my $poiID = shift;
	my $reason = shift;
	my $redirect = shift;
	my $approved = shift;
	my $newsubmission = shift;
	my $allowAnyone = shift;
	my %hash = ();

	return if ($DEV && $DEV_skip_discord);

	if (!$poiID || $poiID !~ /^\d+$/ || !$sessionUserID || (!isAdmin() && !$allowAnyone)) {
		# Bad person. ;)
	} else {
		my @rows = db_mysql($db,"select * from poi,poidata where poi.ID=? and poi.ID=poiID",[($poiID)]);

		if (@rows) {
			my $r = shift @rows;

			my @embeds = ();
			my %hash = ();# tie %hash, "Tie::IxHash";

			my $cat = categoryName($$r{catID});

			$reason = "[$sessionDATA{username}] $reason" if ($sessionUserID);

			my $behalf = $$r{discoverer} ? " on behalf of $$r{discoverer}" : '';

			$reason .= ": $$r{name} (Submitted by ".getUsername($$r{ownerID})."$behalf) $cat";

			my $descrip = $$r{description};
			$descrip = substr($descrip,0,250).' ...' if (length($descrip)>250);
	
			push @embeds, {color=>1127128, title=>"$cat: $$r{name}", thumbnail=>{url=>$$r{topimage}}, description=>$$r{summary} };
			push @embeds, {description=>$descrip };
			push @embeds, {title=>"Click here for more details", url=>"$scriptURL/view/$$r{ID}", color=>14177041 };

			my %json = ();
			$json{username} = 'EDAstro';
			$json{content} = $reason;
			$json{embeds} = \@embeds if (@embeds);

			my $where = '';

			$where = 'where public=0'; #default
			$where = 'where sendapproved>0' if ($approved);
			$where = 'where sendnew>0' if ($newsubmission);
		
			my @emb = db_mysql($db,"select * from discords $where and disabled is null");
			foreach my $e (@emb) {
				my $hook = $$e{webhook};
				my ($id,$token) = discord_tokens($hook);

				my $tries = 0;
				my $ret = undef;
				while (!$ret && $tries<3) {
					$ret = post_payload2($hook, \%json, $tries);
					$tries++;
				}
				log_discord('pushDiscord','post failed after retries') if (!$ret);


				if (0) {
				eval {
					my $webhook = WebService::Discord::Webhook->new( {id=>$id,token=>$token,wait=>1} );
					$webhook->get();
					my $ret = undef;
					my $tries = 0;

					while (!$ret && $tries<3) {
						$tries++;
						$ret = $webhook->execute( username=>'EDAstro', content=>$reason, embeds=>\@embeds );
						log_discord('pushDiscord',$ret);
					}
				};
				info("pushDiscord error: ",$@) if ($@);
				}
			}
		}
	}

	if ($redirect) {
		redirect("$scriptURL/view/$poiID");
	}
}

sub discord_tokens {
	my $url = shift;
	if ($url =~ /webhooks\/(\d+)\/([^\/]+)\s*$/) {
		return ($1,$2);
	} else {
		log_discord('discord_tokens',"Could not get tokens from URL: $url");
	}
	return (undef,undef);
}

sub log_discord {
	my ($name,$ref) = @_;

	if (!$ref) {
		info($name.": NO CONTENT");
	} elsif (!ref($ref)) {
		info($name.": $ref");
	} elsif (ref($ref) eq 'HASH') {
		info($name.": ".JSON->new->encode($ref));
	} else {
		info($name.": MISSING INFO");
	}
}

sub post_payload2 {
	my $url = shift;
	my $href = shift;
	my $tries = shift;

	my $json = JSON->new->pretty->encode($href);

	my $ua  = LWP::UserAgent->new();
	$ua->agent('Mozilla/5.0');

	#$ua->local_address("74.207.224.66");
	#$ua->local_address("45.79.209.247");

	my $req = new HTTP::Request( 'POST' => $url,);
	$req->header('content-type' => 'application/json');
	$req->content($json);
	my $response = $ua->request($req);


	my $debug_logging = 0;

	open TXT, ">>/www/edastro.com/catalog/lwp.log" if ($debug_logging);
	my $ok = 0;

	if ( $response->is_success() ) {
		print TXT epoch2date(time)."\n".$response->decoded_content."\n\n" if ($debug_logging);
		$ok = $response->decoded_content;
		$ok = 1 if (!$ok);
	} else {
		info("Discord/post_payload2 [$tries] URL ".$url);
		info("Discord/post_payload2 [$tries] REQUEST: ".$json);
		info("Discord/post_payload2 [$tries] ERROR: ".$response->status_line());
		info("Discord/post_payload2 [$tries] ERROR: ".$response->decoded_content);
		print TXT epoch2date(time)." ERROR: " . $response->status_line()."\n$json\n".$response->decoded_content."\n\n" if ($debug_logging);
	}

	close TXT;
	return $ok;
}

sub post_payload {
	my $url = shift;
	my $href = shift;
	my $tries = shift;

	return post_payload2($url, $href, $tries);

	my $req = HTTP::Request->new( 'POST', $url );
	$req->agent('Mozilla/5.0');
	$req->header( 'Content-Type' => 'application/json' );
	$req->content( JSON->new->encode($href) );

	my $lwp = LWP::UserAgent->new;
	my $response = $lwp->request( $req );

	open TXT, ">>/www/edastro.com/catalog/lwp.log";

	if ( $response->is_success() ) {
		print TXT epoch2date(time)."\n".$response->decoded_content."\n\n";
	} else {
		my $json = JSON->new->pretty->encode($href);
		print TXT epoch2date(time)." ERROR: " . $response->status_line()."\n$json\n".$response->decoded_content."\n\n";
	}

	close TXT;
}

sub emailMessage {
	my $action = shift;
	my $table = shift;
	my $id = shift;
	my $senderID = shift;


	return if ($action eq 'edit'); # for now

	my @rows = ();

	@rows = db_mysql($db,"select *,authorID as msgAuthorID from msgs where ID=? and hidden is null",[($id)]) if ($table eq 'msgs');
	@rows = db_mysql($db,"select *,msgs.authorID as msgAuthorID,replies.authorID as replyAuthorID from msgs,replies where ".
				"replyID=? and replies.msgID=msgs.ID and msgs.hidden is null",[($id)]) if ($table eq 'replies');

	if (!@rows) {
		return undef;
	}

	my $r = shift @rows;


	my $poiID = $$r{poiID};
	my %poi = getPOIdata($poiID);

# 0 = 'POI Submitter, and Staff/Curators (and yourself)',
# 1 = 'Staff/Curators only (and yourself)',
# 2 = 'Fully Public (everyone)'

	return undef if ($poi{deleted} || $$r{hidden});	# Alert no one.

	my %ids = ();
	$ids{$$r{msgAuthorID}} = 1;
	$ids{$$r{replyAuthorID}} = 1 if ($$r{replyAuthorID});
	$ids{$poi{ownerID}} = 1 if ($$r{visibility}!=1);

#info("Send? $table.$id, ($$r{msgAuthorID},$$r{replyAuthorID}) owner=$poi{ownerID}");

	my $count = 0;

	foreach my $userID (keys %ids) {
		next if (!$userID || $userID == $senderID);

		# Send to all "primary" stake-holders in the thread, except the person who just posted (excludes additional reply authors)

		my $type     = $table eq 'msgs' ? 'message' : 'reply';
		my $authorID = $table eq 'msgs' ? $$r{msgAuthorID} : $$r{replyAuthorID};
		my $what = 'comment thread';
		$what = 'POI entry' if ($userID == $poi{ownerID});

		my $subject = "New $type in your $what ($poi{name})";

		my %user     = getUserData($userID);
		my $username = $user{username};
		my $email    = $user{email};
		my $poiName  = $poi{name};
		my $poilink  = "$nonDEVlink/view/$poiID";

		my $message  = $$r{message}; $message =~ s/\s+/ /gs; $message = btrim($message);
		my $reply    = $$r{reply};   $reply   =~ s/\s+/ /gs; $reply   = btrim($reply);

		my $quote = "Message by ".getUsername($$r{msgAuthorID})." ($$r{reason})\n> *$message*\n\n";
		$quote .= "Reply by ".getUsername($$r{replyAuthorID})."\n> *$reply*\n\n" if ($reply);

		my $txt = "$username,

There is a new $type in a comment thread, for this POI: [$poiName]($poilink).

$quote

To view this POI and message thread, [click here]($poilink)
";
		info("Sending to $userID/$username about $poiID, ($type in $what) to $email");
		$count++ if (sendEmail($userID,$username,$email,$subject,$txt));
	}

	return $count;
}

sub emailNotice {
	my $userID   = shift;
	my $poiID    = shift;
	my $action   = shift;
	my $reason   = shift;

	my %user     = getUserData($userID);
	my $username = $user{username};
	my $email    = $user{email};
	my %poi      = getPOIdata($poiID);
	my $poiName  = $poi{name};
	my $poilink  = "$nonDEVlink/view/$poiID";

	my $subject = "Notification of moderator action on your POI: [$action] $poiName";

	info("Sending to $userID/$username about $poiID, ($action) ($reason) to $email");
	my $txt = "$username,

Greetings from the Galactic Exploration Catalogue. Your attention is required to your POI, [$poiName]($poilink). It has been $action by the GEC team for $reason. Please revise your POI and/or contact the GEC team [on our discord]($discordlink). If you do not respond within a reasonable period of time and correct the problems in your entry, the POI will be permanently removed from the catalog. Please understand that the GEC wishes for all POIs to be preserved, but also must ensure accuracy and adherence to POI guidelines. We hope to restore yours as quickly as possible with your swift cooperation.

Fly Safe, CMDR
-The GEC
";


	return sendEmail($userID,$username,$email,$subject,$txt);
}

sub test_email {
	my $userID = shift;
	my %user = getUserData($userID);

	testEmail($userID,$user{username},$user{email}) if ($userID && $user{username} && $user{email});

	redirect("$scriptURL/profile/$userID");
}

sub testEmail {
	my $userID   = shift;
	my $username = shift;
	my $email    = shift;

	$username = getUsername($userID) if (!$username && $userID);
	$userID   = getUserID($username) if ($username && !$userID);

	return undef if (!$username || !$userID || !$email);
	
	return sendEmail($userID,$username,$email,'EDAstro TEST MESSAGE','This is a test message only. It is safe to ignore. If you are currently working with the GEC/EDAstro team to investigate an email problem, you may want to let them know that you have received this message.','force');
}

sub sendEmail {
	my $userID   = shift;
	my $username = shift;
	my $email    = shift;
	my $subject  = shift;
	my $txt      = shift;
	my $force    = shift;

	$username = getUsername($userID) if (!$username && $userID);
	$userID   = getUserID($username) if ($username && !$userID);

	return undef if (!$username || !$userID || !$email);

	my %user = getUserData($userID);

	if (!$user{sendemails} && !$force) {
		info("Not sending to $username ($userID) $email, unsubscribed");
		return undef;
	}

	my ($sec,$min,$hour,$mday,$month,$year,$wday,$yday,$isdst) = gmtime(time);
	$year += 1900;
	my $maildate = sprintf("%02u %3s %04u %02u:%02u:%02u -0000",$mday,$months[$month],$year,$hour,$min,$sec);

	my $html = my_markdown($txt);

	$html .= "<p>(<a href=\"https://edastro.com/auth/unsubscribe?unsub=$user{unsubcode}\">Click here to unsubscribe</a>. ".
			"Please note that account management emails can still be sent to you)</p>\n";

	my $count = 0;
	my $ok = 0;
	while ($count < 10) {
		$count++;
		eval {
			if (sendMultipart($email,'No-Reply',$mailfrom,$subject,$txt,$html)) {
				info("Sent email to $username ($userID) $email");
				$ok = 1;
				last;
			}
		};
	}
	info("Failed to send email to $username ($userID) $email") if (!$ok);
}

##########################################################################

sub canonn_signals_link {
	my $id64 = shift;
	return "https://canonn-science.github.io/canonn-signals/?system=$id64";
}

sub edsm_link {
	my ($edsmID, $name) = @_;
	my $urlname = $name;
	$urlname =~ s/\s+/\+/gs;
	return "https://www.edsm.net/en/system/id/$edsmID/name/$urlname";
}

sub redirect {
	my $url = shift;
	print "Location: $url\n\n";
	exit;
}

sub render_error {
	my $string = shift;
	my $clickthru = shift;

	my $html = '';

	$html = "<br/><br/><input type=\"button\" class=\"poiButton\" value=\"Return\" ".
			"onclick=\"greyout();location.href='$clickthru';\">\n" if ($clickthru);

	render('<center><span class="textred">'.$string.'</span>'.$html.'</center>',"Error");
	exit;
}

sub render_info {
	my $string = shift;
	my $clickthru = shift;

	my $html = '';

	$html = "<br/><br/><input type=\"button\" class=\"poiButton\" value=\"Return\" ".
			"onclick=\"greyout();location.href='$clickthru';\">\n" if ($clickthru);

	render('<center><span class="textgreen">'.$string.'</span>'.$html.'</center>',$string);
	exit;
}

sub prev_button {
	my $poiID = shift;
	my $class = shift;
	return "<a href=\"$relativeURL/prev/$poiID\" class=\"previous $class\">$symbol{prev}</a>\n";
}

sub next_button {
	my $poiID = shift;
	my $class = shift;
	return "<a href=\"$relativeURL/next/$poiID\" class=\"next $class\">$symbol{next}</a>\n";
}

sub get_poi_image {
	my $poiID = shift;
	my $r = shift;

	return undef if (!$poiID);

	my @rows = ();

	push @rows, $r if ($r);
	push @rows, db_mysql($db,"select topimage,toplocalimage,mainimage from poi where ID=? and deleted is null",[($poiID)]) if (!@rows);

	foreach my $r (@rows) {
		#info("$$r{topimage},$$r{toplocalimage}");
		if (!$$r{mainimage}) {
			return $$r{toplocalimage} if ($$r{toplocalimage});
			return $$r{topimage} if ($$r{topimage});
		} else {
			my @gallery = db_mysql($db,"select localimage,imagelink from gallery where ID=? and poiID=?",[($$r{mainimage},$poiID)]);
			foreach my $g (@gallery) {
				#info("$$g{imagelink},$$g{localimage}");
				return $$g{localimage} if ($$g{localimage});
				return $$g{imagelink} if ($$g{imagelink});
			}
		}
	}
	return undef;
}

sub html_header {
	if (1) {
		return $q->header(-type=>"text/html;charset=UTF-8");
	} else {
	return $q->header(-type=>"text/html;charset=UTF-8"
			-expires       => 'Sat, 26 Jul 1997 05:00:00 GMT',			# date in the past
			-Last_Modified => strftime('%a, %d %b %Y %H:%M:%S GMT', gmtime),	# always modified
			-Pragma        => 'no-cache',					# HTTP/1.0
			-Cache_Control => join(', ', qw(
				private
				no-cache
				no-store
				must-revalidate
				max-age=0
				pre-check=0
				post-check=0
			)),									# HTTP/1.1 + IE-specific (pre|post)-check
		);
	}
}

sub render {
	my ($output,$title,$clickthru,$image) = @_;

	return if ($rendered);
	# May add more smarts here later;
	setCookieSession() if ($sessionUserID);
	#print $q->header("text/html;charset=UTF-8") if (!$debug);
	print html_header() if (!$debug);
	my $header = print_html($headerFile,undef,1);

	$image = 'https://edastro.com/images/GEC-logo-640px.png' if (!$image);

	if ($useSimpleMDE) {
		my $add = "<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.css\">\n";
		$add .=   "<script src=\"https://cdn.jsdelivr.net/simplemde/latest/simplemde.min.js\"></script>\n";

		$header =~ s/<\/head/$add<\/head/s;
	} elsif ($useEasyMDE) {
		#my $add = "<link rel=\"stylesheet\" href=\"https://unpkg.com/easymde/dist/easymde.min.css\">\n";
		#$add .= "<script src=\"https://unpkg.com/easymde/dist/easymde.min.js\"></script>\n";

		my $add = "<link rel=\"stylesheet\" href=\"/easymde.min.css\">\n";
		$add .= "<script src=\"/easymde.min.js\"></script>\n";

		$header =~ s/<\/head/$add<\/head/s;
	}

	if ($title) {
		#my $htmltitle = htmlify('GEC '.$title);
		my $htmltitle = 'GEC '.$title;
		$header =~ s/<title>Elite Dangerous Astrometrics<\/title>/<title>$htmltitle<\/title>/s;
		$header =~ s/(meta property="og:title" content=")[\s+\w\d\-\.\:]+(")/$1$htmltitle$2/is;
	}

	$header =~ s/<link REL="icon" HREF="[^"]+" TYPE="image\/png">/<link REL="icon" HREF="\/images\/GEC-logo-80px.png" TYPE="image\/png">/s;

	$header =~ s/(meta property="og:image" content=")[\w\d\-\.\/\:]+(")/$1$image$2/is if ($image);

	my $dev = $DEV ? '.dev' : '';

	print $header;
	print print_html("/www/edastro.com/catalog/getHTML$dev.html",undef,1);


	print "<div id=\"topbar\" class=\"sticky\"><div class=\"progress-container\"><div class=\"progress-bar\" id=\"progressBar\"></div></div></div>\n";

	#print "<div class=\"row\"><div class=\"col-0\"></div><div class=\"col-12\" align=\"center\">\n";
	print "<div class=\"pageContainer\" align=\"center\">\n";
	print "<div class=\"poiOuterContainer\">\n";
	print "<div class=\"minimumWidthBar\"></div>\n";

	my $beta = '';
	$beta ="<span class=\"textyellow\">BETA</span>" if ($BETA);
	$beta = "<span class=\"textred\">DEV</span>" if ($DEV);

	print "<div class=\"poiNav\">\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonLeft\" onclick=\"greyout();location.href='$relativeURL';\" value=\"Top\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonLeft\" onclick=\"greyout();location.href='$relativeURL/rules';\" value=\"Rules/Guidelines\"/>\n";
	my $disable = $sessionUserID ? '' : ' disabled';
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/new';\" value=\"New POI\"$disable/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/profile';\" value=\"Profile\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/search/new';\" value=\"$symbol{magnifier}\"/>\n";
	print "</div><!poiNav>\n";
	print "<span class=\"bigItalic\" style=\"margin-bottom:25px;\">$beta\&nbsp;-\&nbsp;$mainTitle\&nbsp;-\&nbsp;$beta<br/></span>\n";
	print "<br/><span class=\"bigItalic textred restrictedAccess\">!! Account Access Restricted !!</span><br/><br/>\n" if ($loginUserID && $userBanned);
	print "<br/><span class=\"bigItalic textyellow restrictedAccess\">!! Account Access Restricted (not a beta tester) !!</span><br/><br/>\n" if ($loginUserID && $BETA && !$betatester && !isAdmin());
	print "<br/><span class=\"bigItalic textyellow restrictedAccess\">!! Account Unverified !!</span><br/><br/>\n" if ($loginUserID && $userUnverified);

	print "<div class=\"poiContainer\">\n";
	print $output;
	print "\n";
	print "</div><!poiContainer>\n";

	print "<div class=\"poiNav\">\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonLeft\" onclick=\"greyout();location.href='$discordlink';\" value=\"Discord\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonLeft\" onclick=\"greyout();location.href='https://forums.frontier.co.uk/threads/gec-the-galactic-exploration-catalog.603074/';\" value=\"Forum Thread\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/APIinfo';\" value=\"API\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/scoring';\" value=\"Scoring\"/>\n";
	print "<input type=\"button\" class=\"poiButton poiButtonLarge poiButtonRight\" onclick=\"greyout();location.href='$relativeURL/changelog';\" value=\"Change Log\"/>\n";
	print "<span class=\"mediumtext\">All content is licensed under $licenseLINK</span><br/>\n";
	print "</div><!poiNav>\n";

	print"</div><!poiOuterContainer>\n";
	print"</div><!pageContainer>\n";
	#print "</div><!col-12>\n<div class=\"col-0\"></div>\n</div><!row>\n";

	print "<script src=\"/lightbox.js\"></script>\n";
	print "
<script>
    lightbox.option({
      'resizeDuration': 200,
      'imageFadeDuration': 200,
    })
</script>
";
	print_html($footerFile);
	$rendered = 1;
}


sub readFile {
	my $fn = shift;
	open FILEDATA, "<$fn";
	my @lines = <FILEDATA>;
	return join '', @lines;
	close FILEDATA;
}

sub writeFile {
	my $fn = shift;
	my $data = shift;

	open FILEDATA, ">$fn";
	print FILEDATA $$data;
	close FILEDATA;
}

sub clearCache {
	my $fn = shift;
	unlink $fn if (-e $fn);
}

##########################################################################

sub commify {
	my $text = reverse $_[0];
	$text =~ s/(\d\d\d)(?=\d)(?!\d*\.)/$1,/g;
	return scalar reverse $text
}

sub number {
	my $string = shift;
	$string =~ s/[^\.\-\d]//gs;
	return $string+0;
}

sub htmlify_more {
	my $string = htmlify(shift);

	$string =~ s/\&/\&amp;/gs;
	$string =~ s/\"/\&quot;/gs;
	$string =~ s/\</\&lt;/gs;
	$string =~ s/\>/\&gt;/gs;

	return $string;
}

sub htmlify {
	my $string = shift;
	my $debug = shift;
	#$string =~ s/\&/\&amp;/gs;
	#$string =~ s/\"/\&quot;/gs;
	#$string =~ s/\</\&lt;/gs;
	#$string =~ s/\>/\&gt;/gs;
	$string = convert_unicode($string,$debug);
	return $string;
}

sub youtube_embed {
	my $link = shift;

	my $timestamp = $link =~ /t=(\d+)/ ? "?start=$1" : '';

	if ($link =~ /^https?:\/\/(www.)?youtu.be\/([\w\d]+)/) {
		return "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/$2$timestamp\"></iframe>\n";
	} elsif ($link =~ /^https?:\/\/(www.)?youtube.com\/watch\?\S*?v=([\w\d]+)/) {
		return "<iframe width=\"600\" height=\"338\" src=\"https://www.youtube.com/embed/$2$timestamp\"></iframe>\n";
	} else {
		return "$link";
	}
}

sub convert_unicode {
	# From: https://stackoverflow.com/questions/42379705/convert-unicode-to-html-entities-function
	#use HTML::Entities;
	#use Encode;

	my $str = shift;
	my $debug = shift;

	debug_log("UTF8  Pre-decode: $str") if ($debug);

	Encode::_utf8_off($str);

	my $post =  encode_entities(decode('utf8',$str));

	debug_log("UTF8 Post-decode: $post") if ($debug);

	return $post;
}

sub debug_log {
	open DLOG, ">>/www/edastro.com/catalog/debug.log";
	foreach my $s (@_) {
		chomp $s;
		$s =~ s/[\r\n]+/<**LINEBREAK**>/gs;
		my @t = localtime();
		print DLOG sprintf("[%04u-%02u-%02u %02u:%02u:%02u] %s\n",$t[5]+1900,$t[4]+1,$t[3],$t[2],$t[1],$t[0],$s);
	}
	close DLOG;
}

sub count_images {
	my $string = shift;
	return () = $string =~ /<img\s+.*?\/>/gs;  
}

sub nonbreaking {
	my $string = shift;
	$string =~ s/\s+/\&nbsp;/gs;
	$string =~ s/\-+/\&#8209;/gs;
	return $string;
}

sub my_markdown {
	my $raw = shift;

	$raw =~ s/[ \t]+(!\[[^\]]*\]\(https?)/$1/gs;

	my $string = markdown(filter($raw));
	my $remove_white = shift;

	$string =~ s/\x{c2}\x{b0}/\&deg;/gs;
	$string =~ s/\x{e2}\x{80}\x{99}/\&apos;/gs;

	$string =~ s/<(\/)?(pre|code)>//gs;
	$string =~ s/([^>\s])\r?\n/$1<br\/>\n/gs;
	$string =~ s/(\r?\n){2,}/\n/gs;

	$string =~ s/(<br\/>\n?){2,}/<br\/>\n<br\/>\n/gs;
	$string =~ s/<\/p>(<br\/>\n?)*/<\/p>\n/gs;

	$string =~ s/(<img [^>]+>)/<p align="center">$1<\/p>/gis;
	$string =~ s/(<p( [^>]*)?>)(<img [^>]+>)(<\/p>)/<p align="center">$3<\/p>/gis;

	if ($remove_white) {
		$string =~ s/^\s*(<\/?p>|<\/?br\/?>|\s+)+\s*//s;
		$string =~ s/\s*(<\/?p>|<\/?br\/?>|\s+)+\s*$//s;
	}

	$string =~ s/(<a\s+href=\")/<a target="_blank" href="/gis;

	return $string;
}

sub fix_links {
	my $string = shift;

	$string =~ s/(<a\s+href=\")/<a target="_blank" href="/gis;

	my $n=0;
	while ($n<5 && $string =~ /((\s+|<p>)(https?:\/\/(www\.)?youtu.be\/([\w\d]+))(\s+|<\/p>))/i) {
		$n++;
		my $pattern = $1;
		my $embed = youtube_embed($3);
		$string =~ s/$pattern/$2$embed$6/gs;
	}

	my $n=0;
	while ($n<5 && $string =~ /((\s+|<p>)(https?:\/\/(www\.)?youtube.com\/watch\?\S*?v=([\w\d]+)\S*?)(\s+|<\/p>))/i) {
		$n++;
		my $pattern = $1;
		my $embed = youtube_embed($3);
		$pattern =~ s/\&/\\\&/gs;
		$pattern =~ s/\$/\\\$/gs;
		$pattern =~ s/\?/\\\?/gs;
		$string =~ s/$pattern/$2$embed$6\n/gs;
	}

	return $string;
}

sub mysql_escape {
	my $string = shift;

	$string =~ s/\\/\\\\/gs;
	$string =~ s/'/\\'/gs;
	$string =~ s/"/\\"/gs;
	$string =~ s/%/\\%/gs;
	$string =~ s/_/\\_/gs;
	$string =~ s/\t/\\t/gs;
	$string =~ s/\r/\\r/gs;
	$string =~ s/\n/\\n/gs;

	return $string;
}

sub convert_qmarks {
	my $string = shift;
	$string =~ s/<<QMARK>>/\?/gs;
	$string =~ s/<<AMP>>/\&/gs;
	$string =~ s/<<HASH>>/\#/gs;
	$string =~ s/<<SEMI>>/\;/gs;
	$string =~ s/<<COLON>>/\:/gs;
	$string =~ s/<<TILDE>>/\~/gs;
	$string =~ s/<<OPENCURL>>/\{/gs;
	$string =~ s/<<CLOSECURL>>/\}/gs;
	$string =~ s/<<APOS>>/\'/gs;
	$string =~ s/<<QUOT>>/\"/gs;
	$string =~ s/<<EQUAL>>/\=/gs;
	$string =~ s/<<PERCENT>>/\%/gs;
	$string =~ s/<<PLUS>>/\+/gs;
	$string =~ s/<<BACKSLASH>>/\\/gs;
	$string =~ s/<<SLASH>>/\//gs;
	return $string;
}


sub filter {
	my $s = shift;

	if ($aprilFools) {
		$s =~ s/Exploration/Real-Exploration/gs;
		$s =~ s/exploration/real-exploration/gs;
		$s =~ s/Explorer/Real-Explorer/gs;
		$s =~ s/explorer/real-explorer/gs;
		$s =~ s/Nebulae/Nerbulas/gs;
		$s =~ s/nebulae/nerbulas/gs;
		$s =~ s/Nebula/Nerbula/gs;
		$s =~ s/nebula/nerbula/gs;
		$s =~ s/black\s?hole/white hole/gs;
		$s =~ s/Black\s?hole/White hole/gs;
		$s =~ s/Black\s?Hole/White Hole/gs;
		$s =~ s/light\s?years/Brabens/igs;
		$s =~ s/light\s?year/Braben/igs;
		$s =~ s/([^\w])ly(s?)([^\w])/$1Brabens$3/igs;
		$s =~ s/([^\w])kly(s?)([^\w])/$1kilo-Brabens$3/igs;
		$s =~ s/([^\w])kylie(s?)([^\w])/$1kilo-Brabens$3/igs;
		$s =~ s/Bubble/PewPewLand/gs;
		$s =~ s/bubble/pewpewland/gs;
		$s =~ s/(^|[^\w])Beagle([^\w]|$)/$1Snoopy$2/gs;
		$s =~ s/(^|[^\w])beagle([^\w]|$)/$1snoopy$2/gs;
		$s =~ s/Thargoid/Murder Flower/gs;
		$s =~ s/thargoid/murder flower/gs;
		$s =~ s/GGG/GiggityGiggityGiggity/gs;
		$s =~ s/GMP/Garlic Manipulation Project/gs;
		$s =~ s/Galactic Mapping Project/Garlic Manipulation Project/gsi;
	}

	$s =~ s/(^|[^\w]|\w+)(fuck|shit|cunt)([^\w]|ing|t?y|\w+$)/$1----$3/gis;

	return $s;
}

##########################################################################






